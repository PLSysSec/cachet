fn test() {
  assert expr(0_i32, 0_i32) == 0_i32;
  assert expr(1_i32, 0_i32) == 1_i32;
  assert expr(0_i32, 8_i32) == 10_i32;
  assert expr(0_i32, 10_i32) == 12_i32;
  assert expr(5_i32, 10_i32) == 17_i32;

  assert 8_i32 % 4_i32 == 0_i32;
  assert 9_i32 % 4_i32 == 1_i32;
  assert -1_i32 % 2_i32 == -1_i32;
  assert 10_i32 % -3_i32 == 1_i32; 
}

fn expr(x: Int32, y: Int32) -> Int32 {
  x + 5_i32 * y / 4_i32
}
