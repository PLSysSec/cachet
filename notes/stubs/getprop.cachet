import "../cacheir.cachet"
import "../utils.cachet"

ir CacheStub emits CacheIR {
    op GetProp(
        valueId: ValueId,
        shapeField: ShapeField,
        slotField: Int32Field,
    ) {
        initInputValueId(valueId);

        let shape = CacheIR::readShapeField(shapeField);

        assume Class::isNativeObject(Shape::classOf(shape));

        assume Shape::hasFixedSlot(shape, 0_u32);
        assume Shape::hasFixedSlot(shape, 1_u32);
        assume Shape::hasFixedSlot(shape, 2_u32);

        let slotOffset = CacheIR::readInt32Field(slotField);
        assume slotOffset == 32_i32;

        emit CacheIR::GuardToObject(valueId);
        let objectId = OperandId::toObjectId(valueId);
        emit CacheIR::GuardShape(objectId, shapeField);
        emit CacheIR::LoadFixedSlotResult(objectId, slotField);
    }
}
