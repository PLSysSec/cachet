import "../cacheir.cachet";
import "../utils.cachet";

ir CacheStub emits CacheIR {
    op GetElem(
        valueId: ValueId,
        indexId: ValueId,
        indexInt32Id: Int32Id,
        shapeField: ShapeField,
    ) {
        initRegState();

        initOperandId(valueId);
        initInputValueId(valueId);

        initOperandId(indexId);
        initInputValueId(indexId);

        initOperandId(indexInt32Id);

        initValueOutput();

        let shape = CacheIR::readShapeField(shapeField);
        assume Class::isNativeObject(Shape::classOf(shape));

        emit CacheIR::GuardToObject(valueId);
        emit CacheIR::GuardToInt32Index(indexId, indexInt32Id);
        let objectId = OperandId::toObjectId(valueId);
        emit CacheIR::GuardShape(objectId, shapeField);
        emit CacheIR::LoadDenseElementResult(objectId, indexInt32Id);
    }
}
