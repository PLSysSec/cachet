import "../cacheir.cachet";
import "../utils.cachet";

ir CacheStub emits CacheIR {
    op GetProp(
        valueId: ValueId,
        shapeField: ShapeField,
        offsetField: Int32Field,
        slot: UInt32,
    ) {
        initRegState();

        initOperandId(valueId);
        initInputValueId(valueId);

        initValueOutput();

        let shape = CacheIR::readShapeField(shapeField);
        assume Class::isNativeObject(Shape::classOf(shape));
        assume Shape::hasFixedSlot(shape, slot);

        assume CacheIR::readInt32Field(offsetField) == NativeObject::sizeOf + slot * Value::sizeOf;

        emit CacheIR::GuardToObject(valueId);
        let objectId = OperandId::toObjectId(valueId);
        emit CacheIR::GuardShape(objectId, shapeField);
        emit CacheIR::LoadFixedSlotResult(objectId, offsetField);
    }
}
