import "../cacheir.cachet";
import "../utils.cachet";

ir CacheStub emits CacheIR {
    op BitAnd(
        lhsValueId: ValueId,
        rhsValueId: ValueId,
        rhsInt32Id: Int32Id,
    ) {
        initRegState();

        initOperandId(lhsValueId);
        initInputValueId(lhsValueId);

        initOperandId(rhsValueId);
        initInputValueId(rhsValueId);

        initOperandId(rhsInt32Id);

        initValueOutput();

        emit CacheIR::GuardToInt32(lhsValueId);
        let lhsInt32Id = OperandId::toInt32Id(lhsValueId);
        emit CacheIR::GuardBooleanToInt32(rhsValueId, rhsInt32Id);
        emit CacheIR::Int32BitAndResult(lhsInt32Id, rhsInt32Id);
    }
}
