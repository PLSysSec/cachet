---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Type(
        TypeDecls {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "linear",
                        params: [
                            String(
                                StringLit {
                                    text: "pid",
                                },
                            ),
                        ],
                    },
                ),
            ],
            decls: [
                TypeDecl {
                    ident: "Pid",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "layer",
                        params: [
                            Expr(
                                Nat(
                                    "0",
                                ),
                            ),
                            Expr(
                                Nat(
                                    "3",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "ping_channel",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [],
                                keys: [
                                    Atom(
                                        Int,
                                    ),
                                ],
                                value: Atom(
                                    Int,
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "layer",
                        params: [
                            Expr(
                                Nat(
                                    "0",
                                ),
                            ),
                            Expr(
                                Nat(
                                    "3",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "pong_channel",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [],
                                keys: [
                                    Atom(
                                        Int,
                                    ),
                                ],
                                value: Atom(
                                    Int,
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "ping_id",
                ],
                type_: Atom(
                    Int,
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "pong_id",
                ],
                type_: Atom(
                    Int,
                ),
            },
            order_spec: None,
        },
    ),
    Type(
        TypeDecls {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "pending_async",
                        params: [],
                    },
                ),
                Attr(
                    AttrContent {
                        ident: "datatype",
                        params: [],
                    },
                ),
            ],
            decls: [
                TypeDecl {
                    ident: "PA",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "PING",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "PA",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "PONG",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "PA",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "NoPAs",
            type_params: [],
            var_params: [],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "PA",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Int,
                        ),
                    },
                ),
            },
            body: Some(
                Quant(
                    QuantExpr {
                        kind: Lambda,
                        body: QuantBody {
                            type_params: [],
                            bound_vars: [
                                AttrTypedIdentsWhere {
                                    attrs: [],
                                    typed_idents_where: TypedIdentsWhere {
                                        typed_idents: TypedIdents {
                                            idents: [
                                                "pa",
                                            ],
                                            type_: App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        },
                                        where_: None,
                                    },
                                },
                            ],
                            attrs: [],
                            expr: Nat(
                                "0",
                            ),
                        },
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "EmptyChannel",
            type_params: [],
            var_params: [],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            Atom(
                                Int,
                            ),
                        ],
                        value: Atom(
                            Int,
                        ),
                    },
                ),
            },
            body: Some(
                Quant(
                    QuantExpr {
                        kind: Lambda,
                        body: QuantBody {
                            type_params: [],
                            bound_vars: [
                                AttrTypedIdentsWhere {
                                    attrs: [],
                                    typed_idents_where: TypedIdentsWhere {
                                        typed_idents: TypedIdents {
                                            idents: [
                                                "m",
                                            ],
                                            type_: Atom(
                                                Int,
                                            ),
                                        },
                                        where_: None,
                                    },
                                },
                            ],
                            attrs: [],
                            expr: Nat(
                                "0",
                            ),
                        },
                    },
                ),
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "3",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "MAIN'",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "ping_pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pong_pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "ping_pid",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "ping_id",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "pong_pid",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "pong_id",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "ping_channel",
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "EmptyChannel",
                                                    args: [],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "pong_channel",
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "EmptyChannel",
                                                    args: [],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_invariant",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "INV",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "ping_pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pong_pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "PING",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "PONG",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "choice",
                                    params: [],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "choice",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "PA",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ping_channel",
                            "pong_channel",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [
                                Attr(
                                    AttrContent {
                                        ident: "pool",
                                        params: [
                                            String(
                                                StringLit {
                                                    text: "INV",
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            ],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "c",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "ping_pid",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "ping_id",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "pong_pid",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "pong_id",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "ping_channel",
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "EmptyChannel",
                                                    args: [],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "pong_channel",
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "EmptyChannel",
                                                    args: [],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "INV",
                                                        },
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "c",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "c",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Nat(
                                                "0",
                                            ),
                                            op: Lt,
                                            rhs: Var(
                                                "c",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "pong_channel",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: FuncCall(
                                                                    FuncCall {
                                                                        target: "EmptyChannel",
                                                                        args: [],
                                                                    },
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "c",
                                                                            ),
                                                                        ],
                                                                        value: Some(
                                                                            Nat(
                                                                                "1",
                                                                            ),
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "ping_channel",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "EmptyChannel",
                                                                args: [],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "PAs",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: FuncCall(
                                                                    FuncCall {
                                                                        target: "NoPAs",
                                                                        args: [],
                                                                    },
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "PONG",
                                                                                    args: [
                                                                                        Var(
                                                                                            "c",
                                                                                        ),
                                                                                        Var(
                                                                                            "pong_pid",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                        value: Some(
                                                                            Nat(
                                                                                "1",
                                                                            ),
                                                                        ),
                                                                    },
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "PING",
                                                                                    args: [
                                                                                        Var(
                                                                                            "c",
                                                                                        ),
                                                                                        Var(
                                                                                            "ping_pid",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                        value: Some(
                                                                            Nat(
                                                                                "1",
                                                                            ),
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "choice",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "PONG",
                                                                args: [
                                                                    Var(
                                                                        "c",
                                                                    ),
                                                                    Var(
                                                                        "pong_pid",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        ElseIf(
                                            IfCmd {
                                                guard: Asterisk,
                                                then: [
                                                    LabelOrCmd(
                                                        Assign(
                                                            AssignCmd {
                                                                lhs: [
                                                                    AssignLhs {
                                                                        ident: "pong_channel",
                                                                        subscripts: [],
                                                                    },
                                                                ],
                                                                rhs: [
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: FuncCall(
                                                                                FuncCall {
                                                                                    target: "EmptyChannel",
                                                                                    args: [],
                                                                                },
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Nat(
                                                                                            "0",
                                                                                        ),
                                                                                    ],
                                                                                    value: Some(
                                                                                        Nat(
                                                                                            "1",
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                    LabelOrCmd(
                                                        Assign(
                                                            AssignCmd {
                                                                lhs: [
                                                                    AssignLhs {
                                                                        ident: "ping_channel",
                                                                        subscripts: [],
                                                                    },
                                                                ],
                                                                rhs: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "EmptyChannel",
                                                                            args: [],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                    LabelOrCmd(
                                                        Assign(
                                                            AssignCmd {
                                                                lhs: [
                                                                    AssignLhs {
                                                                        ident: "PAs",
                                                                        subscripts: [],
                                                                    },
                                                                ],
                                                                rhs: [
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: FuncCall(
                                                                                FuncCall {
                                                                                    target: "NoPAs",
                                                                                    args: [],
                                                                                },
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        FuncCall(
                                                                                            FuncCall {
                                                                                                target: "PONG",
                                                                                                args: [
                                                                                                    Var(
                                                                                                        "c",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "pong_pid",
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    value: Some(
                                                                                        Nat(
                                                                                            "1",
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                    LabelOrCmd(
                                                        Assign(
                                                            AssignCmd {
                                                                lhs: [
                                                                    AssignLhs {
                                                                        ident: "choice",
                                                                        subscripts: [],
                                                                    },
                                                                ],
                                                                rhs: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "PONG",
                                                                            args: [
                                                                                Var(
                                                                                    "c",
                                                                                ),
                                                                                Var(
                                                                                    "pong_pid",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                ],
                                                else_: Some(
                                                    ElseIf(
                                                        IfCmd {
                                                            guard: Asterisk,
                                                            then: [
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "ping_channel",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: FuncCall(
                                                                                            FuncCall {
                                                                                                target: "EmptyChannel",
                                                                                                args: [],
                                                                                            },
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "c",
                                                                                                    ),
                                                                                                ],
                                                                                                value: Some(
                                                                                                    Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                ),
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "pong_channel",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "EmptyChannel",
                                                                                        args: [],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "PAs",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: FuncCall(
                                                                                            FuncCall {
                                                                                                target: "NoPAs",
                                                                                                args: [],
                                                                                            },
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "PONG",
                                                                                                            args: [
                                                                                                                Term(
                                                                                                                    Term {
                                                                                                                        lhs: Var(
                                                                                                                            "c",
                                                                                                                        ),
                                                                                                                        op: Add,
                                                                                                                        rhs: Nat(
                                                                                                                            "1",
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                                Var(
                                                                                                                    "pong_pid",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: Some(
                                                                                                    Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                ),
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "PING",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "c",
                                                                                                                ),
                                                                                                                Var(
                                                                                                                    "ping_pid",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: Some(
                                                                                                    Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                ),
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "choice",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "PING",
                                                                                        args: [
                                                                                            Var(
                                                                                                "c",
                                                                                            ),
                                                                                            Var(
                                                                                                "ping_pid",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            else_: Some(
                                                                Else(
                                                                    [
                                                                        LabelOrCmd(
                                                                            Assign(
                                                                                AssignCmd {
                                                                                    lhs: [
                                                                                        AssignLhs {
                                                                                            ident: "ping_channel",
                                                                                            subscripts: [],
                                                                                        },
                                                                                    ],
                                                                                    rhs: [
                                                                                        FuncCall(
                                                                                            FuncCall {
                                                                                                target: "EmptyChannel",
                                                                                                args: [],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ),
                                                                        LabelOrCmd(
                                                                            Assign(
                                                                                AssignCmd {
                                                                                    lhs: [
                                                                                        AssignLhs {
                                                                                            ident: "pong_channel",
                                                                                            subscripts: [],
                                                                                        },
                                                                                    ],
                                                                                    rhs: [
                                                                                        FuncCall(
                                                                                            FuncCall {
                                                                                                target: "EmptyChannel",
                                                                                                args: [],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ),
                                                                        LabelOrCmd(
                                                                            Assign(
                                                                                AssignCmd {
                                                                                    lhs: [
                                                                                        AssignLhs {
                                                                                            ident: "PAs",
                                                                                            subscripts: [],
                                                                                        },
                                                                                    ],
                                                                                    rhs: [
                                                                                        FuncCall(
                                                                                            FuncCall {
                                                                                                target: "NoPAs",
                                                                                                args: [],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_abstraction",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "PING'",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "x",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "PING",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ping_channel",
                            "pong_channel",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "x",
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "pid",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "ping_id",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "m",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "ping_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "m",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "m",
                                                                ),
                                                                op: Eq,
                                                                rhs: Var(
                                                                    "x",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Logical(
                                        LogicalExpr {
                                            lhs: Quant(
                                                QuantExpr {
                                                    kind: Exists,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [
                                                                    Attr(
                                                                        AttrContent {
                                                                            ident: "pool",
                                                                            params: [
                                                                                String(
                                                                                    StringLit {
                                                                                        text: "INV",
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "m",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "ping_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "m",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                            op: And,
                                            rhs: Quant(
                                                QuantExpr {
                                                    kind: ForAll,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "m",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "pong_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "m",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Eq,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "ping_channel",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "x",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "ping_channel",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "ping_channel",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "pong_channel",
                                                            subscripts: [
                                                                [
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "x",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "pong_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "x",
                                                                                            ),
                                                                                            op: Add,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "PAs",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: FuncCall(
                                                                    FuncCall {
                                                                        target: "NoPAs",
                                                                        args: [],
                                                                    },
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "PING",
                                                                                    args: [
                                                                                        Term(
                                                                                            Term {
                                                                                                lhs: Var(
                                                                                                    "x",
                                                                                                ),
                                                                                                op: Add,
                                                                                                rhs: Nat(
                                                                                                    "1",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        Var(
                                                                                            "pid",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                        value: Some(
                                                                            Nat(
                                                                                "1",
                                                                            ),
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "pong_channel",
                                                                    subscripts: [
                                                                        [
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                        ],
                                                                    ],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Term(
                                                                    Term {
                                                                        lhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "pong_channel",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Nat(
                                                                                                "0",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Add,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "PAs",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "NoPAs",
                                                                        args: [],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_abstraction",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "PONG'",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "y",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "PONG",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ping_channel",
                            "pong_channel",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "y",
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "pid",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "pong_id",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "m",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "pong_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "m",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Logical(
                                                            LogicalExpr {
                                                                lhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Var(
                                                                            "m",
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: Var(
                                                                            "y",
                                                                        ),
                                                                    },
                                                                ),
                                                                op: Or,
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Var(
                                                                            "m",
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: Nat(
                                                                            "0",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Logical(
                                        LogicalExpr {
                                            lhs: Quant(
                                                QuantExpr {
                                                    kind: Exists,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [
                                                                    Attr(
                                                                        AttrContent {
                                                                            ident: "pool",
                                                                            params: [
                                                                                String(
                                                                                    StringLit {
                                                                                        text: "INV",
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "m",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "pong_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "m",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                            op: And,
                                            rhs: Quant(
                                                QuantExpr {
                                                    kind: ForAll,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "m",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "ping_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "m",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Eq,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: Rel(
                                                        RelExpr {
                                                            lhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "pong_channel",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "y",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            op: Gt,
                                                            rhs: Nat(
                                                                "0",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "pong_channel",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "y",
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "pong_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "y",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "ping_channel",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "y",
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "ping_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "y",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "PAs",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: FuncCall(
                                                                    FuncCall {
                                                                        target: "NoPAs",
                                                                        args: [],
                                                                    },
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "PONG",
                                                                                    args: [
                                                                                        Term(
                                                                                            Term {
                                                                                                lhs: Var(
                                                                                                    "y",
                                                                                                ),
                                                                                                op: Add,
                                                                                                rhs: Nat(
                                                                                                    "1",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        Var(
                                                                                            "pid",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                        value: Some(
                                                                            Nat(
                                                                                "1",
                                                                            ),
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Claim(
                                                        ClaimCmd {
                                                            kind: Assume,
                                                            attrs: [],
                                                            proposition: Rel(
                                                                RelExpr {
                                                                    lhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "pong_channel",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Nat(
                                                                                            "0",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Gt,
                                                                    rhs: Nat(
                                                                        "0",
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                ),
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "pong_channel",
                                                                    subscripts: [
                                                                        [
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                        ],
                                                                    ],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Term(
                                                                    Term {
                                                                        lhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "pong_channel",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Nat(
                                                                                                "0",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Sub,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "PAs",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "NoPAs",
                                                                        args: [],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "IS",
                            params: [
                                String(
                                    StringLit {
                                        text: "MAIN'",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "INV",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "PING",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "PING'",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "PONG",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "PONG'",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "MAIN",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "ping_pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pong_pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "PING",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "PONG",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "pong_channel",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "ping_pid",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "ping_id",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "pong_pid",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "pong_id",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "ping_channel",
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "EmptyChannel",
                                                    args: [],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "pong_channel",
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "EmptyChannel",
                                                    args: [],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "pong_channel",
                                            subscripts: [
                                                [
                                                    Nat(
                                                        "1",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "pong_channel",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Nat(
                                                                        "1",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "PAs",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: FuncCall(
                                                    FuncCall {
                                                        target: "NoPAs",
                                                        args: [],
                                                    },
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "PING",
                                                                    args: [
                                                                        Nat(
                                                                            "1",
                                                                        ),
                                                                        Var(
                                                                            "ping_pid",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                        value: Some(
                                                            Nat(
                                                                "1",
                                                            ),
                                                        ),
                                                    },
                                                    ArraySubscript {
                                                        keys: [
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "PONG",
                                                                    args: [
                                                                        Nat(
                                                                            "1",
                                                                        ),
                                                                        Var(
                                                                            "pong_pid",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                        value: Some(
                                                            Nat(
                                                                "1",
                                                            ),
                                                        ),
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "PING",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "x",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "PING",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ping_channel",
                            "pong_channel",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "x",
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "pid",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "ping_id",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "m",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "ping_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "m",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "m",
                                                                ),
                                                                op: Eq,
                                                                rhs: Var(
                                                                    "x",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "ping_channel",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "x",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "ping_channel",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "ping_channel",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "pong_channel",
                                                            subscripts: [
                                                                [
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "x",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "pong_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "x",
                                                                                            ),
                                                                                            op: Add,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "PAs",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: FuncCall(
                                                                    FuncCall {
                                                                        target: "NoPAs",
                                                                        args: [],
                                                                    },
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "PING",
                                                                                    args: [
                                                                                        Term(
                                                                                            Term {
                                                                                                lhs: Var(
                                                                                                    "x",
                                                                                                ),
                                                                                                op: Add,
                                                                                                rhs: Nat(
                                                                                                    "1",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        Var(
                                                                                            "pid",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                        value: Some(
                                                                            Nat(
                                                                                "1",
                                                                            ),
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "pong_channel",
                                                                    subscripts: [
                                                                        [
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                        ],
                                                                    ],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Term(
                                                                    Term {
                                                                        lhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "pong_channel",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Nat(
                                                                                                "0",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Add,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "PAs",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "NoPAs",
                                                                        args: [],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "PONG",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "y",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "PONG",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ping_channel",
                            "pong_channel",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "y",
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "pid",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "pong_id",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "m",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "pong_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "m",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Logical(
                                                            LogicalExpr {
                                                                lhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Var(
                                                                            "m",
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: Var(
                                                                            "y",
                                                                        ),
                                                                    },
                                                                ),
                                                                op: Or,
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Var(
                                                                            "m",
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: Nat(
                                                                            "0",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: Rel(
                                                        RelExpr {
                                                            lhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "pong_channel",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "y",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            op: Gt,
                                                            rhs: Nat(
                                                                "0",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "pong_channel",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "y",
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "pong_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "y",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "ping_channel",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "y",
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "ping_channel",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "y",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "PAs",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: FuncCall(
                                                                    FuncCall {
                                                                        target: "NoPAs",
                                                                        args: [],
                                                                    },
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "PONG",
                                                                                    args: [
                                                                                        Term(
                                                                                            Term {
                                                                                                lhs: Var(
                                                                                                    "y",
                                                                                                ),
                                                                                                op: Add,
                                                                                                rhs: Nat(
                                                                                                    "1",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        Var(
                                                                                            "pid",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                        value: Some(
                                                                            Nat(
                                                                                "1",
                                                                            ),
                                                                        ),
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Claim(
                                                        ClaimCmd {
                                                            kind: Assume,
                                                            attrs: [],
                                                            proposition: Rel(
                                                                RelExpr {
                                                                    lhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "pong_channel",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Nat(
                                                                                            "0",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Gt,
                                                                    rhs: Nat(
                                                                        "0",
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                ),
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "pong_channel",
                                                                    subscripts: [
                                                                        [
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                        ],
                                                                    ],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Term(
                                                                    Term {
                                                                        lhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "pong_channel",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Nat(
                                                                                                "0",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Sub,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "PAs",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "NoPAs",
                                                                        args: [],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "MAIN",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "main",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "ping_pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pong_pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "send_pong_channel",
                                        params: [
                                            Nat(
                                                "1",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "ping",
                                        params: [
                                            Nat(
                                                "1",
                                            ),
                                            Var(
                                                "ping_pid",
                                            ),
                                        ],
                                    },
                                    is_async: true,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "pong",
                                        params: [
                                            Nat(
                                                "1",
                                            ),
                                            Var(
                                                "pong_pid",
                                            ),
                                        ],
                                    },
                                    is_async: true,
                                    is_free: false,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "PING",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "ping",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "x",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x'",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "x'",
                                        ],
                                        target: "receive_ping_channel",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "assert_eq",
                                        params: [
                                            Var(
                                                "x'",
                                            ),
                                            Var(
                                                "x",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [],
                                                        target: "send_pong_channel",
                                                        params: [
                                                            Term(
                                                                Term {
                                                                    lhs: Var(
                                                                        "x'",
                                                                    ),
                                                                    op: Add,
                                                                    rhs: Nat(
                                                                        "1",
                                                                    ),
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                    is_async: false,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [],
                                                        target: "ping",
                                                        params: [
                                                            Term(
                                                                Term {
                                                                    lhs: Var(
                                                                        "x'",
                                                                    ),
                                                                    op: Add,
                                                                    rhs: Nat(
                                                                        "1",
                                                                    ),
                                                                },
                                                            ),
                                                            Var(
                                                                "pid",
                                                            ),
                                                        ],
                                                    },
                                                    is_async: true,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Call(
                                                        CallCmd {
                                                            attrs: [],
                                                            call_params: CallParams {
                                                                returns: [],
                                                                target: "send_pong_channel",
                                                                params: [
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                ],
                                                            },
                                                            is_async: false,
                                                            is_free: false,
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "PONG",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "pong",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "y",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "y'",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "y'",
                                        ],
                                        target: "receive_pong_channel",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "y'",
                                                ),
                                                op: Neq,
                                                rhs: Nat(
                                                    "0",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [],
                                                        target: "assert_eq",
                                                        params: [
                                                            Var(
                                                                "y'",
                                                            ),
                                                            Var(
                                                                "y",
                                                            ),
                                                        ],
                                                    },
                                                    is_async: false,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [],
                                                        target: "send_ping_channel",
                                                        params: [
                                                            Var(
                                                                "y'",
                                                            ),
                                                        ],
                                                    },
                                                    is_async: false,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [],
                                                        target: "pong",
                                                        params: [
                                                            Term(
                                                                Term {
                                                                    lhs: Var(
                                                                        "y'",
                                                                    ),
                                                                    op: Add,
                                                                    rhs: Nat(
                                                                        "1",
                                                                    ),
                                                                },
                                                            ),
                                                            Var(
                                                                "pid",
                                                            ),
                                                        ],
                                                    },
                                                    is_async: true,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "left",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "SEND_PING_CHANNEL",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "m",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ping_channel",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "ping_channel",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "m",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "ping_channel",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "m",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "left",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "SEND_PONG_CHANNEL",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "m",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "pong_channel",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "pong_channel",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "m",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "pong_channel",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "m",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "right",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "RECEIVE_PING_CHANNEL",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "m",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ping_channel",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "ping_channel",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "m",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "ping_channel",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "m",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "ping_channel",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "m",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "right",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "RECEIVE_PONG_CHANNEL",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "m",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "pong_channel",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "pong_channel",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "m",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "pong_channel",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "m",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "pong_channel",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "m",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "both",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "ASSERT_EQ",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "a",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "b",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "a",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "b",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "SEND_PING_CHANNEL",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "send_ping_channel",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "m",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "SEND_PONG_CHANNEL",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "send_pong_channel",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "m",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "RECEIVE_PING_CHANNEL",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "receive_ping_channel",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "m",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "RECEIVE_PONG_CHANNEL",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "receive_pong_channel",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "m",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "ASSERT_EQ",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "assert_eq",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "a",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "b",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
]

[Printed]
type {:linear "pid"} Pid = int;

var {:layer 0, 3} ping_channel: [int]int;

var {:layer 0, 3} pong_channel: [int]int;

const unique ping_id: int;

const unique pong_id: int;

type {:pending_async} {:datatype} PA;

function {:constructor} PING(x: int, pid: int): PA;

function {:constructor} PONG(x: int, pid: int): PA;

function {:inline} NoPAs(): [PA]int {
  (lambda pa: PA :: 0)
}

function {:inline} EmptyChannel(): [int]int {
  (lambda m: int :: 0)
}

procedure {:atomic} {:layer 3} MAIN'({:linear_in "pid"} ping_pid: int, {:linear_in "pid"} pong_pid: int) {
  assert ping_pid == ping_id;
  assert pong_pid == pong_id;
  assert ping_channel == EmptyChannel();
  assert pong_channel == EmptyChannel();
}

procedure {:IS_invariant} {:layer 2} INV({:linear_in "pid"} ping_pid: int, {:linear_in "pid"} pong_pid: int) returns ({:pending_async "PING", "PONG"} PAs: [PA]int, {:choice} choice: PA)
  modifies ping_channel, pong_channel;
{
  var {:pool "INV"} c: int;

  assert ping_pid == ping_id;
  assert pong_pid == pong_id;
  assert ping_channel == EmptyChannel();
  assert pong_channel == EmptyChannel();
  assume {:add_to_pool "INV", c, c + 1} 0 < c;
  if (*) {
    pong_channel := EmptyChannel()[c := 1];
    ping_channel := EmptyChannel();
    PAs := NoPAs()[PONG(c, pong_pid) := 1][PING(c, ping_pid) := 1];
    choice := PONG(c, pong_pid);
  } else if (*) {
    pong_channel := EmptyChannel()[0 := 1];
    ping_channel := EmptyChannel();
    PAs := NoPAs()[PONG(c, pong_pid) := 1];
    choice := PONG(c, pong_pid);
  } else if (*) {
    ping_channel := EmptyChannel()[c := 1];
    pong_channel := EmptyChannel();
    PAs := NoPAs()[PONG(c + 1, pong_pid) := 1][PING(c, ping_pid) := 1];
    choice := PING(c, ping_pid);
  } else {
    ping_channel := EmptyChannel();
    pong_channel := EmptyChannel();
    PAs := NoPAs();
  }
}

procedure {:IS_abstraction} {:layer 2} PING'(x: int, {:linear_in "pid"} pid: int) returns ({:pending_async "PING"} PAs: [PA]int)
  modifies ping_channel, pong_channel;
{
  assert x > 0;
  assert pid == ping_id;
  assert (forall m: int :: ping_channel[m] > 0 ==> m == x);
  assert (exists {:pool "INV"} m: int :: ping_channel[m] > 0) && (forall m: int :: pong_channel[m] == 0);
  assume ping_channel[x] > 0;
  ping_channel[x] := ping_channel[x] - 1;
  if (*) {
    pong_channel[x + 1] := pong_channel[x + 1] + 1;
    PAs := NoPAs()[PING(x + 1, pid) := 1];
  } else {
    pong_channel[0] := pong_channel[0] + 1;
    PAs := NoPAs();
  }
}

procedure {:IS_abstraction} {:layer 2} PONG'(y: int, {:linear_in "pid"} pid: int) returns ({:pending_async "PONG"} PAs: [PA]int)
  modifies ping_channel, pong_channel;
{
  assert y > 0;
  assert pid == pong_id;
  assert (forall m: int :: pong_channel[m] > 0 ==> m == y || m == 0);
  assert (exists {:pool "INV"} m: int :: pong_channel[m] > 0) && (forall m: int :: ping_channel[m] == 0);
  if (*) {
    assume pong_channel[y] > 0;
    pong_channel[y] := pong_channel[y] - 1;
    ping_channel[y] := ping_channel[y] + 1;
    PAs := NoPAs()[PONG(y + 1, pid) := 1];
  } else {
    assume pong_channel[0] > 0;
    pong_channel[0] := pong_channel[0] - 1;
    PAs := NoPAs();
  }
}

procedure {:atomic} {:layer 2} {:IS "MAIN'", "INV"} {:elim "PING", "PING'"} {:elim "PONG", "PONG'"} MAIN({:linear_in "pid"} ping_pid: int, {:linear_in "pid"} pong_pid: int) returns ({:pending_async "PING", "PONG"} PAs: [PA]int)
  modifies pong_channel;
{
  assert ping_pid == ping_id;
  assert pong_pid == pong_id;
  assert ping_channel == EmptyChannel();
  assert pong_channel == EmptyChannel();
  pong_channel[1] := pong_channel[1] + 1;
  PAs := NoPAs()[PING(1, ping_pid) := 1][PONG(1, pong_pid) := 1];
}

procedure {:atomic} {:layer 2} PING(x: int, {:linear_in "pid"} pid: int) returns ({:pending_async "PING"} PAs: [PA]int)
  modifies ping_channel, pong_channel;
{
  assert x > 0;
  assert pid == ping_id;
  assert (forall m: int :: ping_channel[m] > 0 ==> m == x);
  assume ping_channel[x] > 0;
  ping_channel[x] := ping_channel[x] - 1;
  if (*) {
    pong_channel[x + 1] := pong_channel[x + 1] + 1;
    PAs := NoPAs()[PING(x + 1, pid) := 1];
  } else {
    pong_channel[0] := pong_channel[0] + 1;
    PAs := NoPAs();
  }
}

procedure {:atomic} {:layer 2} PONG(y: int, {:linear_in "pid"} pid: int) returns ({:pending_async "PONG"} PAs: [PA]int)
  modifies ping_channel, pong_channel;
{
  assert y > 0;
  assert pid == pong_id;
  assert (forall m: int :: pong_channel[m] > 0 ==> m == y || m == 0);
  if (*) {
    assume pong_channel[y] > 0;
    pong_channel[y] := pong_channel[y] - 1;
    ping_channel[y] := ping_channel[y] + 1;
    PAs := NoPAs()[PONG(y + 1, pid) := 1];
  } else {
    assume pong_channel[0] > 0;
    pong_channel[0] := pong_channel[0] - 1;
    PAs := NoPAs();
  }
}

procedure {:yields} {:layer 1} {:refines "MAIN"} main({:linear_in "pid"} ping_pid: int, {:linear_in "pid"} pong_pid: int) {
  call send_pong_channel(1);
  async call ping(1, ping_pid);
  async call pong(1, pong_pid);
}

procedure {:yields} {:layer 1} {:refines "PING"} ping(x: int, {:linear_in "pid"} pid: int) {
  var x': int;

  call x' := receive_ping_channel();
  call assert_eq(x', x);
  if (*) {
    call send_pong_channel(x' + 1);
    async call ping(x' + 1, pid);
  } else {
    call send_pong_channel(0);
  }
}

procedure {:yields} {:layer 1} {:refines "PONG"} pong(y: int, {:linear_in "pid"} pid: int) {
  var y': int;

  call y' := receive_pong_channel();
  if (y' != 0) {
    call assert_eq(y', y);
    call send_ping_channel(y');
    async call pong(y' + 1, pid);
  }
}

procedure {:left} {:layer 1} SEND_PING_CHANNEL(m: int)
  modifies ping_channel;
{
  ping_channel[m] := ping_channel[m] + 1;
}

procedure {:left} {:layer 1} SEND_PONG_CHANNEL(m: int)
  modifies pong_channel;
{
  pong_channel[m] := pong_channel[m] + 1;
}

procedure {:right} {:layer 1} RECEIVE_PING_CHANNEL() returns (m: int)
  modifies ping_channel;
{
  assume ping_channel[m] > 0;
  ping_channel[m] := ping_channel[m] - 1;
}

procedure {:right} {:layer 1} RECEIVE_PONG_CHANNEL() returns (m: int)
  modifies pong_channel;
{
  assume pong_channel[m] > 0;
  pong_channel[m] := pong_channel[m] - 1;
}

procedure {:both} {:layer 1} ASSERT_EQ(a: int, b: int) {
  assert a == b;
}

procedure {:yields} {:layer 0} {:refines "SEND_PING_CHANNEL"} send_ping_channel(m: int);

procedure {:yields} {:layer 0} {:refines "SEND_PONG_CHANNEL"} send_pong_channel(m: int);

procedure {:yields} {:layer 0} {:refines "RECEIVE_PING_CHANNEL"} receive_ping_channel() returns (m: int);

procedure {:yields} {:layer 0} {:refines "RECEIVE_PONG_CHANNEL"} receive_pong_channel() returns (m: int);

procedure {:yields} {:layer 0} {:refines "ASSERT_EQ"} assert_eq(a: int, b: int);

[Input - ../../vendor/boogie/Test/civl/inductive-sequentialization/PingPong.bpl]
// RUN: %boogie "%s" > "%t"
// RUN: %diff "%s.expect" "%t"

type {:linear "pid"} Pid = int;
var {:layer 0,3} ping_channel:[int]int; // Incoming channel of Ping
var {:layer 0,3} pong_channel:[int]int; // Incoming channel of Pong

const unique ping_id:int;
const unique pong_id:int;

type {:pending_async}{:datatype} PA;
function {:constructor} PING(x:int, pid:int) : PA;
function {:constructor} PONG(x:int, pid:int) : PA;

function {:inline} NoPAs () : [PA]int
{ (lambda pa:PA :: 0) }

function {:inline} EmptyChannel () : [int]int
{ (lambda m:int :: 0) }

////////////////////////////////////////////////////////////////////////////////

procedure {:atomic}{:layer 3}
MAIN' ({:linear_in "pid"} ping_pid:int, {:linear_in "pid"} pong_pid:int)
{
  assert ping_pid == ping_id;
  assert pong_pid == pong_id;
  assert ping_channel == EmptyChannel();
  assert pong_channel == EmptyChannel();
}

procedure {:IS_invariant}{:layer 2}
INV ({:linear_in "pid"} ping_pid:int, {:linear_in "pid"} pong_pid:int)
returns ({:pending_async "PING","PONG"} PAs:[PA]int, {:choice} choice:PA)
modifies ping_channel, pong_channel;
{
   var {:pool "INV"} c: int;

  assert ping_pid == ping_id;
  assert pong_pid == pong_id;
  assert ping_channel == EmptyChannel();
  assert pong_channel == EmptyChannel();

  assume
    {:add_to_pool "INV", c, c+1}
    0 < c;
  if (*) {
    pong_channel := EmptyChannel()[c := 1];
    ping_channel := EmptyChannel();
    PAs := NoPAs()[PONG(c, pong_pid) := 1][PING(c, ping_pid) := 1];
    choice := PONG(c, pong_pid);
  } else if (*) {
    pong_channel := EmptyChannel()[0 := 1];
    ping_channel := EmptyChannel();
    PAs := NoPAs()[PONG(c, pong_pid) := 1];
    choice := PONG(c, pong_pid);
  } else if (*) {
    ping_channel := EmptyChannel()[c := 1];
    pong_channel := EmptyChannel();
    PAs := NoPAs()[PONG(c+1, pong_pid) := 1][PING(c, ping_pid) := 1];
    choice := PING(c, ping_pid);
  } else {
    ping_channel := EmptyChannel();
    pong_channel := EmptyChannel();
    PAs := NoPAs();
  }
}

////////////////////////////////////////////////////////////////////////////////

procedure {:IS_abstraction}{:layer 2}
PING' (x:int, {:linear_in "pid"} pid:int)
returns ({:pending_async "PING"} PAs:[PA]int)
modifies ping_channel, pong_channel;
{
  assert x > 0;
  assert pid == ping_id;
  assert (forall m:int :: ping_channel[m] > 0 ==> m == x);
  assert (exists {:pool "INV"} m:int :: ping_channel[m] > 0) && (forall m:int :: pong_channel[m] == 0);

  assume ping_channel[x] > 0;
  ping_channel[x] := ping_channel[x] - 1;

  if (*)
  {
    pong_channel[x+1] := pong_channel[x+1] + 1;
    PAs := NoPAs()[PING(x+1, pid) := 1];
  }
  else
  {
    pong_channel[0] := pong_channel[0] + 1;
    PAs := NoPAs();
  }
}

procedure {:IS_abstraction}{:layer 2}
PONG' (y:int, {:linear_in "pid"} pid:int)
returns ({:pending_async "PONG"} PAs:[PA]int)
modifies ping_channel, pong_channel;
{
  assert y > 0;
  assert pid == pong_id;
  assert (forall m:int :: pong_channel[m] > 0 ==> m == y || m == 0);
  assert (exists {:pool "INV"} m:int :: pong_channel[m] > 0) && (forall m:int :: ping_channel[m] == 0);

  if (*)
  {
    assume pong_channel[y] > 0;
    pong_channel[y] := pong_channel[y] - 1;
    ping_channel[y] := ping_channel[y] + 1;
    PAs := NoPAs()[PONG(y+1, pid) := 1];
  }
  else
  {
    assume pong_channel[0] > 0;
    pong_channel[0] := pong_channel[0] - 1;
    PAs := NoPAs();
  }
}

////////////////////////////////////////////////////////////////////////////////

procedure {:atomic}{:layer 2}
{:IS "MAIN'","INV"}{:elim "PING","PING'"}{:elim "PONG","PONG'"}
MAIN ({:linear_in "pid"} ping_pid:int, {:linear_in "pid"} pong_pid:int)
returns ({:pending_async "PING","PONG"} PAs:[PA]int)
modifies pong_channel;
{
  assert ping_pid == ping_id;
  assert pong_pid == pong_id;
  assert ping_channel == EmptyChannel();
  assert pong_channel == EmptyChannel();
  pong_channel[1] := pong_channel[1] + 1;
  PAs := NoPAs()[PING(1, ping_pid) := 1][PONG(1, pong_pid) := 1];
}

procedure {:atomic}{:layer 2}
PING (x:int, {:linear_in "pid"} pid:int)
returns ({:pending_async "PING"} PAs:[PA]int)
modifies ping_channel, pong_channel;
{
  assert x > 0;
  assert pid == ping_id;
  assert (forall m:int :: ping_channel[m] > 0 ==> m == x); // assertion to discharge

  assume ping_channel[x] > 0;
  ping_channel[x] := ping_channel[x] - 1;

  if (*)
  {
    pong_channel[x+1] := pong_channel[x+1] + 1;
    PAs := NoPAs()[PING(x+1, pid) := 1];
  }
  else
  {
    pong_channel[0] := pong_channel[0] + 1;
    PAs := NoPAs();
  }
}

procedure {:atomic}{:layer 2}
PONG (y:int, {:linear_in "pid"} pid:int)
returns ({:pending_async "PONG"} PAs:[PA]int)
modifies ping_channel, pong_channel;
{
  assert y > 0;
  assert pid == pong_id;
  assert (forall m:int :: pong_channel[m] > 0 ==> m == y || m == 0); // assertion to discharge

  if (*)
  {
    assume pong_channel[y] > 0;
    pong_channel[y] := pong_channel[y] - 1;
    ping_channel[y] := ping_channel[y] + 1;
    PAs := NoPAs()[PONG(y+1, pid) := 1];
  }
  else
  {
    assume pong_channel[0] > 0;
    pong_channel[0] := pong_channel[0] - 1;
    PAs := NoPAs();
  }
}

////////////////////////////////////////////////////////////////////////////////

procedure {:yields}{:layer 1}{:refines "MAIN"}
main ({:linear_in "pid"} ping_pid:int, {:linear_in "pid"} pong_pid:int)
{
  call send_pong_channel(1);
  async call ping(1, ping_pid);
  async call pong(1, pong_pid);
}

procedure {:yields}{:layer 1}{:refines "PING"}
ping (x:int, {:linear_in "pid"} pid:int)
{
  var x':int;

  call x' := receive_ping_channel();
  call assert_eq(x', x); // low-level assertion to discharge
  if (*)
  {
    call send_pong_channel(x'+1);
    async call ping(x'+1, pid);
  }
  else
  {
    call send_pong_channel(0);
  }
}

procedure {:yields}{:layer 1}{:refines "PONG"}
pong (y:int, {:linear_in "pid"} pid:int)
{
  var y':int;

  call y' := receive_pong_channel();
  if (y' != 0)
  {
    call assert_eq(y', y); // low-level assertion to discharge
    call send_ping_channel(y');
    async call pong(y'+1, pid);
  }
}

////////////////////////////////////////////////////////////////////////////////

procedure {:left}{:layer 1} SEND_PING_CHANNEL (m:int)
modifies ping_channel;
{
  ping_channel[m] := ping_channel[m] + 1;
}

procedure {:left}{:layer 1} SEND_PONG_CHANNEL (m:int)
modifies pong_channel;
{
  pong_channel[m] := pong_channel[m] + 1;
}

procedure {:right}{:layer 1} RECEIVE_PING_CHANNEL () returns (m:int)
modifies ping_channel;
{
  assume ping_channel[m] > 0;
  ping_channel[m] := ping_channel[m] - 1;
}

procedure {:right}{:layer 1} RECEIVE_PONG_CHANNEL () returns (m:int)
modifies pong_channel;
{
  assume pong_channel[m] > 0;
  pong_channel[m] := pong_channel[m] - 1;
}

procedure {:both}{:layer 1} ASSERT_EQ (a:int, b:int)
{
  assert a == b;
}

procedure {:yields}{:layer 0}{:refines "SEND_PING_CHANNEL"} send_ping_channel (m:int);
procedure {:yields}{:layer 0}{:refines "SEND_PONG_CHANNEL"} send_pong_channel (m:int);
procedure {:yields}{:layer 0}{:refines "RECEIVE_PING_CHANNEL"} receive_ping_channel () returns (m:int);
procedure {:yields}{:layer 0}{:refines "RECEIVE_PONG_CHANNEL"} receive_pong_channel () returns (m:int);
procedure {:yields}{:layer 0}{:refines "ASSERT_EQ"} assert_eq (a:int, b:int);
