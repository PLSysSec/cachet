---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "checksum",
                        params: [
                            String(
                                StringLit {
                                    text: "1",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "PlusOne",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "n",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "n",
                        ),
                        op: Add,
                        rhs: Nat(
                            "1",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "checksum",
                        params: [
                            String(
                                StringLit {
                                    text: "0",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "F",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "n",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "F",
                                            args: [
                                                Var(
                                                    "n",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "F",
                                        args: [
                                            Var(
                                                "n",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "PlusOne",
                                        args: [
                                            Var(
                                                "n",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "checksum",
                            params: [
                                String(
                                    StringLit {
                                        text: "2",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "M",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Impl(
        ImplDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "id",
                            params: [
                                String(
                                    StringLit {
                                        text: "M",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "checksum",
                            params: [
                                String(
                                    StringLit {
                                        text: "3",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "M",
                type_params: [],
                var_params: [],
                returns: [],
            },
            impl_body: ImplBody {
                local_vars: [],
                stmt_list: [
                    LabelOrCmd(
                        Claim(
                            ClaimCmd {
                                kind: Assert,
                                attrs: [],
                                proposition: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "F",
                                                args: [
                                                    Nat(
                                                        "0",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: Nat(
                                            "1",
                                        ),
                                    },
                                ),
                            },
                        ),
                    ),
                ],
            },
        },
    ),
]

[Printed]
function {:checksum "1"} PlusOne(n: int): int {
  n + 1
}

function {:checksum "0"} F(n: int): int;

axiom (forall n: int :: {F(n)} F(n) == PlusOne(n));

procedure {:checksum "2"} M();

implementation {:id "M"} {:checksum "3"} M() {
  assert F(0) == 1;
}

[Input - ../../vendor/boogie/Test/snapshots/Snapshots16.v0.bpl]
function {:checksum "1"} PlusOne(n: int) : int
{
    n + 1
}

function {:checksum "0"} F(n: int) : int;

axiom (forall n: int :: { F(n) } F(n) == PlusOne(n));

procedure {:checksum "2"} M();

implementation {:id "M"} {:checksum "3"} M()
{
    assert F(0) == 1;
}
