---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex0",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "i",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "i",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Var(
                                                                        "i",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "A",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex1",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "i",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: Term(
                                            Term {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "Vec_Len",
                                                        args: [
                                                            Var(
                                                                "A",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "i",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "i",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "i",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "2",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "i",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "i",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Swap",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Var(
                                                            "i",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "A",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex2",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "j",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "i",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "j",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "j",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "j",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Swap",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Var(
                                                            "i",
                                                        ),
                                                        Var(
                                                            "j",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "A",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex3",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "j",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "i",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "j",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "j",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "i",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Var(
                                                                        "i",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "j",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Var(
                                                                        "j",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex4",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "e",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Element",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "i",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "i",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: Var(
                                    "B",
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "A'",
                                            "B'",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Vec",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "Element",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "A'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Append",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                    Var(
                                                        "e",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Append",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                    Var(
                                                        "e",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A'",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "i",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A'",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "i",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A'",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "B'",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex5",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "e",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Element",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "i",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Sub,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "i",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Sub,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "A'",
                                            "B'",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Vec",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "Element",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "A'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Append",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                    Var(
                                                        "e",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Swap",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Append",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Var(
                                                                    "e",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Term(
                                                        Term {
                                                            lhs: FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Len",
                                                                    args: [
                                                                        Var(
                                                                            "B",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            op: Sub,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "x",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [
                                                    Attr(
                                                        AttrContent {
                                                            ident: "skolem_add_to_pool",
                                                            params: [
                                                                String(
                                                                    StringLit {
                                                                        text: "Slice",
                                                                    },
                                                                ),
                                                                Expr(
                                                                    Var(
                                                                        "x",
                                                                    ),
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                expr: Rel(
                                                    RelExpr {
                                                        lhs: FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Nth",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Concat",
                                                                            args: [
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "Vec_Slice",
                                                                                        args: [
                                                                                            Var(
                                                                                                "A'",
                                                                                            ),
                                                                                            Nat(
                                                                                                "0",
                                                                                            ),
                                                                                            Var(
                                                                                                "i",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "Vec_Slice",
                                                                                        args: [
                                                                                            Var(
                                                                                                "A'",
                                                                                            ),
                                                                                            Term(
                                                                                                Term {
                                                                                                    lhs: Var(
                                                                                                        "i",
                                                                                                    ),
                                                                                                    op: Add,
                                                                                                    rhs: Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "Vec_Len",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "A'",
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Var(
                                                                        "x",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        op: Eq,
                                                        rhs: FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Nth",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Slice",
                                                                            args: [
                                                                                Var(
                                                                                    "B'",
                                                                                ),
                                                                                Nat(
                                                                                    "0",
                                                                                ),
                                                                                Term(
                                                                                    Term {
                                                                                        lhs: FuncCall(
                                                                                            FuncCall {
                                                                                                target: "Vec_Len",
                                                                                                args: [
                                                                                                    Var(
                                                                                                        "B'",
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                        op: Sub,
                                                                                        rhs: Nat(
                                                                                            "1",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Var(
                                                                        "x",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex6a",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "e",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Element",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "i",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Sub,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "i",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Sub,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "A'",
                                            "B'",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Vec",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "Element",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "A'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Append",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                    Var(
                                                        "e",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Swap",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Append",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Var(
                                                                    "e",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Term(
                                                        Term {
                                                            lhs: FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Len",
                                                                    args: [
                                                                        Var(
                                                                            "B",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            op: Sub,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Nth",
                                                    args: [
                                                        Var(
                                                            "A'",
                                                        ),
                                                        Var(
                                                            "i",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Nth",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Len",
                                                                        args: [
                                                                            Var(
                                                                                "B'",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex6b",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "e",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Element",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "i",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Sub,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "i",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Sub,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "A'",
                                            "B'",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Vec",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "Element",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "A'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Append",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                    Var(
                                                        "e",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Swap",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Append",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Var(
                                                                    "e",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Term(
                                                        Term {
                                                            lhs: FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Len",
                                                                    args: [
                                                                        Var(
                                                                            "B",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            op: Sub,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "x",
                                        ],
                                        target: "Vec_Ext",
                                        params: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A'",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "i",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A'",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "i",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A'",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Len",
                                                                        args: [
                                                                            Var(
                                                                                "B'",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "Slice",
                                                        },
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "x",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A'",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "i",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A'",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "i",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A'",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Len",
                                                                        args: [
                                                                            Var(
                                                                                "B'",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex7a",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "j",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Nat(
                                                    "0",
                                                ),
                                                op: Le,
                                                rhs: Var(
                                                    "j",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "j",
                                                ),
                                                op: Le,
                                                rhs: Var(
                                                    "i",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: Term(
                                            Term {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "Vec_Len",
                                                        args: [
                                                            Var(
                                                                "A",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "j",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "j",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "i",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "B",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "i",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "B'",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Vec",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "Element",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i'",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Swap",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                    Var(
                                                        "i",
                                                    ),
                                                    Term(
                                                        Term {
                                                            lhs: Var(
                                                                "i",
                                                            ),
                                                            op: Add,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "i",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Nth",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Var(
                                                            "i'",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Nth",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Var(
                                                            "j",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex7b",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "j",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Nat(
                                                    "0",
                                                ),
                                                op: Le,
                                                rhs: Var(
                                                    "j",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "j",
                                                ),
                                                op: Le,
                                                rhs: Var(
                                                    "i",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: Term(
                                            Term {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "Vec_Len",
                                                        args: [
                                                            Var(
                                                                "A",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "j",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "j",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "i",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "B",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "i",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "B'",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Vec",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "Element",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i'",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Swap",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                    Var(
                                                        "i",
                                                    ),
                                                    Term(
                                                        Term {
                                                            lhs: Var(
                                                                "i",
                                                            ),
                                                            op: Add,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "i",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "x",
                                        ],
                                        target: "Vec_Ext",
                                        params: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "i'",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "j",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "j",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "i'",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "Slice",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "x",
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "j",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "x",
                                                                ),
                                                                op: Sub,
                                                                rhs: Var(
                                                                    "j",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "x",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "x",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "x",
                                                                ),
                                                                op: Sub,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "i'",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "j",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "j",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "i'",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex7c",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "j",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Nat(
                                                    "0",
                                                ),
                                                op: Le,
                                                rhs: Var(
                                                    "j",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "j",
                                                ),
                                                op: Le,
                                                rhs: Var(
                                                    "i",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: Term(
                                            Term {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "Vec_Len",
                                                        args: [
                                                            Var(
                                                                "A",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "j",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "j",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "i",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "B",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "i",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "B'",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Vec",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "Element",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i'",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Swap",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                    Var(
                                                        "i",
                                                    ),
                                                    Term(
                                                        Term {
                                                            lhs: Var(
                                                                "i",
                                                            ),
                                                            op: Add,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "i",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "x",
                                        ],
                                        target: "Vec_Ext",
                                        params: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i'",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "B'",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i'",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "Slice",
                                                        },
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "x",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "x",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i'",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "B'",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i'",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex8",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "j",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B'",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i'",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Nat(
                                                    "0",
                                                ),
                                                op: Le,
                                                rhs: Var(
                                                    "j",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "j",
                                                ),
                                                op: Le,
                                                rhs: Var(
                                                    "i",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Lt,
                                        rhs: Term(
                                            Term {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "Vec_Len",
                                                        args: [
                                                            Var(
                                                                "A",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "j",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "j",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "i",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "B",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "i",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i'",
                                ),
                                op: Eq,
                                rhs: Term(
                                    Term {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Add,
                                        rhs: Nat(
                                            "1",
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "B'",
                                            ),
                                            Var(
                                                "i'",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "j",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B'",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                            Var(
                                                "i'",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "j",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i'",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B'",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "i'",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "i'",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x",
                                            "y",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Swap",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                    Var(
                                                        "i",
                                                    ),
                                                    Term(
                                                        Term {
                                                            lhs: Var(
                                                                "i",
                                                            ),
                                                            op: Add,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "i",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Nth",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Var(
                                                            "i'",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Nth",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Var(
                                                            "j",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "x",
                                        ],
                                        target: "Vec_Ext",
                                        params: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "i'",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "j",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "j",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "i'",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "Slice",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "x",
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "j",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "x",
                                                                ),
                                                                op: Sub,
                                                                rhs: Var(
                                                                    "j",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "x",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "x",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "x",
                                                                ),
                                                                op: Sub,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "i'",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "j",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "j",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "i'",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "y",
                                        ],
                                        target: "Vec_Ext",
                                        params: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i'",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "B'",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i'",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "Slice",
                                                        },
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "y",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "y",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "B'",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i'",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "B'",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i'",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Ex9",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "j",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "e",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Element",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "j",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "j",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Var(
                                    "e",
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "j",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Var(
                                    "B",
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "j",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x",
                                            "y",
                                            "z",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "A",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "j",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            While(
                                WhileCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "i",
                                                ),
                                                op: Lt,
                                                rhs: Term(
                                                    Term {
                                                        lhs: FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        op: Sub,
                                                        rhs: Nat(
                                                            "1",
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                    invariants: [
                                        Invariant {
                                            attrs: [],
                                            expr: Logical(
                                                LogicalExpr {
                                                    lhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "j",
                                                            ),
                                                            op: Le,
                                                            rhs: Var(
                                                                "i",
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "i",
                                                            ),
                                                            op: Le,
                                                            rhs: Term(
                                                                Term {
                                                                    lhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Sub,
                                                                    rhs: Nat(
                                                                        "1",
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Nth",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Var(
                                                                    "i",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Nth",
                                                            args: [
                                                                Var(
                                                                    "A",
                                                                ),
                                                                Var(
                                                                    "j",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Slice",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Nat(
                                                                    "0",
                                                                ),
                                                                Var(
                                                                    "i",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Concat",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Slice",
                                                                        args: [
                                                                            Var(
                                                                                "A",
                                                                            ),
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                            Var(
                                                                                "j",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Slice",
                                                                        args: [
                                                                            Var(
                                                                                "A",
                                                                            ),
                                                                            Term(
                                                                                Term {
                                                                                    lhs: Var(
                                                                                        "j",
                                                                                    ),
                                                                                    op: Add,
                                                                                    rhs: Nat(
                                                                                        "1",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            Term(
                                                                                Term {
                                                                                    lhs: Var(
                                                                                        "i",
                                                                                    ),
                                                                                    op: Add,
                                                                                    rhs: Nat(
                                                                                        "1",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Slice",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "i",
                                                                        ),
                                                                        op: Add,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Len",
                                                                        args: [
                                                                            Var(
                                                                                "B",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Slice",
                                                            args: [
                                                                Var(
                                                                    "A",
                                                                ),
                                                                Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "i",
                                                                        ),
                                                                        op: Add,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Len",
                                                                        args: [
                                                                            Var(
                                                                                "A",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                    ],
                                    body: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "split_here",
                                                                params: [],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: BoolLit(
                                                        true,
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [
                                                            "B",
                                                            "i",
                                                        ],
                                                        target: "Ex8",
                                                        params: [
                                                            Var(
                                                                "A",
                                                            ),
                                                            Var(
                                                                "j",
                                                            ),
                                                            Var(
                                                                "B",
                                                            ),
                                                            Var(
                                                                "i",
                                                            ),
                                                        ],
                                                    },
                                                    is_async: false,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "e",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Nth",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                    Term(
                                                        Term {
                                                            lhs: FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Len",
                                                                    args: [
                                                                        Var(
                                                                            "A",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            op: Sub,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Remove",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "z",
                                        ],
                                        target: "Vec_Ext",
                                        params: [
                                            Var(
                                                "B",
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "j",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "j",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "Slice",
                                                        },
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "z",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "j",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Sub,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "split_here",
                                                params: [],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "remove",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "j",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "e",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Element",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "j",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "j",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Var(
                                    "e",
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "j",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Var(
                                    "B",
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "j",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Slice",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x",
                                            "y",
                                            "z",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "A",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "j",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            While(
                                WhileCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "i",
                                                ),
                                                op: Lt,
                                                rhs: Term(
                                                    Term {
                                                        lhs: FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        op: Sub,
                                                        rhs: Nat(
                                                            "1",
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                    invariants: [
                                        Invariant {
                                            attrs: [],
                                            expr: Logical(
                                                LogicalExpr {
                                                    lhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "j",
                                                            ),
                                                            op: Le,
                                                            rhs: Var(
                                                                "i",
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "i",
                                                            ),
                                                            op: Le,
                                                            rhs: Term(
                                                                Term {
                                                                    lhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Sub,
                                                                    rhs: Nat(
                                                                        "1",
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Nth",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Var(
                                                                    "i",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Nth",
                                                            args: [
                                                                Var(
                                                                    "A",
                                                                ),
                                                                Var(
                                                                    "j",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Slice",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Nat(
                                                                    "0",
                                                                ),
                                                                Var(
                                                                    "i",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Concat",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Slice",
                                                                        args: [
                                                                            Var(
                                                                                "A",
                                                                            ),
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                            Var(
                                                                                "j",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Slice",
                                                                        args: [
                                                                            Var(
                                                                                "A",
                                                                            ),
                                                                            Term(
                                                                                Term {
                                                                                    lhs: Var(
                                                                                        "j",
                                                                                    ),
                                                                                    op: Add,
                                                                                    rhs: Nat(
                                                                                        "1",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            Term(
                                                                                Term {
                                                                                    lhs: Var(
                                                                                        "i",
                                                                                    ),
                                                                                    op: Add,
                                                                                    rhs: Nat(
                                                                                        "1",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Slice",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "i",
                                                                        ),
                                                                        op: Add,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Len",
                                                                        args: [
                                                                            Var(
                                                                                "B",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Slice",
                                                            args: [
                                                                Var(
                                                                    "A",
                                                                ),
                                                                Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "i",
                                                                        ),
                                                                        op: Add,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Len",
                                                                        args: [
                                                                            Var(
                                                                                "A",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                    ],
                                    body: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "split_here",
                                                                params: [],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: BoolLit(
                                                        true,
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "add_to_pool",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "Slice",
                                                                        },
                                                                    ),
                                                                    Expr(
                                                                        Var(
                                                                            "i",
                                                                        ),
                                                                    ),
                                                                    Expr(
                                                                        Var(
                                                                            "j",
                                                                        ),
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: BoolLit(
                                                        true,
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "B",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Swap",
                                                                args: [
                                                                    Var(
                                                                        "B",
                                                                    ),
                                                                    Var(
                                                                        "i",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "i",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "i",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "add_to_pool",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "Slice",
                                                                        },
                                                                    ),
                                                                    Expr(
                                                                        Var(
                                                                            "i",
                                                                        ),
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: BoolLit(
                                                        true,
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [
                                                            "x",
                                                        ],
                                                        target: "Vec_Ext",
                                                        params: [
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Slice",
                                                                    args: [
                                                                        Var(
                                                                            "B",
                                                                        ),
                                                                        Nat(
                                                                            "0",
                                                                        ),
                                                                        Var(
                                                                            "i",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Concat",
                                                                    args: [
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Slice",
                                                                                args: [
                                                                                    Var(
                                                                                        "A",
                                                                                    ),
                                                                                    Nat(
                                                                                        "0",
                                                                                    ),
                                                                                    Var(
                                                                                        "j",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Slice",
                                                                                args: [
                                                                                    Var(
                                                                                        "A",
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "j",
                                                                                            ),
                                                                                            op: Add,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "i",
                                                                                            ),
                                                                                            op: Add,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                    is_async: false,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "add_to_pool",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "Slice",
                                                                        },
                                                                    ),
                                                                    Expr(
                                                                        Nat(
                                                                            "0",
                                                                        ),
                                                                    ),
                                                                    Expr(
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "x",
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Var(
                                                                                    "j",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ),
                                                                    Expr(
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "x",
                                                                                ),
                                                                                op: Sub,
                                                                                rhs: Var(
                                                                                    "j",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ),
                                                                    Expr(
                                                                        Var(
                                                                            "x",
                                                                        ),
                                                                    ),
                                                                    Expr(
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "x",
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ),
                                                                    Expr(
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "x",
                                                                                ),
                                                                                op: Sub,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: BoolLit(
                                                        true,
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [
                                                            "y",
                                                        ],
                                                        target: "Vec_Ext",
                                                        params: [
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Slice",
                                                                    args: [
                                                                        Var(
                                                                            "B",
                                                                        ),
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "i",
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Len",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Slice",
                                                                    args: [
                                                                        Var(
                                                                            "A",
                                                                        ),
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "i",
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Len",
                                                                                args: [
                                                                                    Var(
                                                                                        "A",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                    is_async: false,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "add_to_pool",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "Slice",
                                                                        },
                                                                    ),
                                                                    Expr(
                                                                        Var(
                                                                            "y",
                                                                        ),
                                                                    ),
                                                                    Expr(
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "y",
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: BoolLit(
                                                        true,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "e",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Nth",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                    Term(
                                                        Term {
                                                            lhs: FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Len",
                                                                    args: [
                                                                        Var(
                                                                            "A",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            op: Sub,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Remove",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "z",
                                        ],
                                        target: "Vec_Ext",
                                        params: [
                                            Var(
                                                "B",
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Concat",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Nat(
                                                                        "0",
                                                                    ),
                                                                    Var(
                                                                        "j",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Slice",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: Var(
                                                                                "j",
                                                                            ),
                                                                            op: Add,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "Slice",
                                                        },
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "z",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "j",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Sub,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "split_here",
                                                params: [],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "swap_remove",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "j",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "j",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "j",
                                        ),
                                        op: Lt,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                            Var(
                                                "j",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                            Var(
                                                "j",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "j",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "B",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Slice",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "j",
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                            FuncCall(
                                                FuncCall {
                                                    target: "Vec_Len",
                                                    args: [
                                                        Var(
                                                            "B",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                            Var(
                                                "j",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Nth",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Term(
                                                Term {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "A",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Sub,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "last_idx",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "last_idx",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "Vec_Len",
                                                        args: [
                                                            Var(
                                                                "A",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Swap",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                    Var(
                                                        "j",
                                                    ),
                                                    Var(
                                                        "last_idx",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Remove",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "Slice",
                                                        },
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "j",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "reverse",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Len",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Len",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Quant(
                            QuantExpr {
                                kind: ForAll,
                                body: QuantBody {
                                    type_params: [],
                                    bound_vars: [
                                        AttrTypedIdentsWhere {
                                            attrs: [],
                                            typed_idents_where: TypedIdentsWhere {
                                                typed_idents: TypedIdents {
                                                    idents: [
                                                        "x",
                                                    ],
                                                    type_: Atom(
                                                        Int,
                                                    ),
                                                },
                                                where_: None,
                                            },
                                        },
                                    ],
                                    attrs: [],
                                    expr: Implies(
                                        ImpliesExpr {
                                            lhs: Logical(
                                                LogicalExpr {
                                                    lhs: Rel(
                                                        RelExpr {
                                                            lhs: Nat(
                                                                "0",
                                                            ),
                                                            op: Le,
                                                            rhs: Var(
                                                                "x",
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "x",
                                                            ),
                                                            op: Lt,
                                                            rhs: FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Len",
                                                                    args: [
                                                                        Var(
                                                                            "A",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            rhs: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Nth",
                                                            args: [
                                                                Var(
                                                                    "A",
                                                                ),
                                                                Var(
                                                                    "x",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Nth",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Term(
                                                                    Term {
                                                                        lhs: Term(
                                                                            Term {
                                                                                lhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "Vec_Len",
                                                                                        args: [
                                                                                            Var(
                                                                                                "A",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Sub,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        op: Sub,
                                                                        rhs: Var(
                                                                            "x",
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "len",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "front_index",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "back_index",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "A",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "len",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "len",
                                                ),
                                                op: Eq,
                                                rhs: Nat(
                                                    "0",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        TransferCmd(
                                            Return(
                                                ReturnCmd,
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "front_index",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "0",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "back_index",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "len",
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            While(
                                WhileCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "front_index",
                                                ),
                                                op: Lt,
                                                rhs: Var(
                                                    "back_index",
                                                ),
                                            },
                                        ),
                                    ),
                                    invariants: [
                                        Invariant {
                                            attrs: [],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Term(
                                                        Term {
                                                            lhs: Var(
                                                                "front_index",
                                                            ),
                                                            op: Add,
                                                            rhs: Var(
                                                                "back_index",
                                                            ),
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: Term(
                                                        Term {
                                                            lhs: Var(
                                                                "len",
                                                            ),
                                                            op: Sub,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "A",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Quant(
                                                QuantExpr {
                                                    kind: ForAll,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "x",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Implies(
                                                            ImpliesExpr {
                                                                lhs: Logical(
                                                                    LogicalExpr {
                                                                        lhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Nat(
                                                                                    "0",
                                                                                ),
                                                                                op: Le,
                                                                                rhs: Var(
                                                                                    "x",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Var(
                                                                                    "x",
                                                                                ),
                                                                                op: Lt,
                                                                                rhs: Var(
                                                                                    "front_index",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "A",
                                                                                    ),
                                                                                    Var(
                                                                                        "x",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Term(
                                                                                                Term {
                                                                                                    lhs: FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "Vec_Len",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "A",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                    op: Sub,
                                                                                                    rhs: Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            op: Sub,
                                                                                            rhs: Var(
                                                                                                "x",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Quant(
                                                QuantExpr {
                                                    kind: ForAll,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "x",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Implies(
                                                            ImpliesExpr {
                                                                lhs: Logical(
                                                                    LogicalExpr {
                                                                        lhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Var(
                                                                                    "back_index",
                                                                                ),
                                                                                op: Lt,
                                                                                rhs: Var(
                                                                                    "x",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Var(
                                                                                    "x",
                                                                                ),
                                                                                op: Lt,
                                                                                rhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "Vec_Len",
                                                                                        args: [
                                                                                            Var(
                                                                                                "A",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "A",
                                                                                    ),
                                                                                    Var(
                                                                                        "x",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Term(
                                                                                                Term {
                                                                                                    lhs: FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "Vec_Len",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "A",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                    op: Sub,
                                                                                                    rhs: Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            op: Sub,
                                                                                            rhs: Var(
                                                                                                "x",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Quant(
                                                QuantExpr {
                                                    kind: ForAll,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "x",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Implies(
                                                            ImpliesExpr {
                                                                lhs: Logical(
                                                                    LogicalExpr {
                                                                        lhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Var(
                                                                                    "front_index",
                                                                                ),
                                                                                op: Le,
                                                                                rhs: Var(
                                                                                    "x",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Var(
                                                                                    "x",
                                                                                ),
                                                                                op: Le,
                                                                                rhs: Var(
                                                                                    "back_index",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "A",
                                                                                    ),
                                                                                    Var(
                                                                                        "x",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                    Var(
                                                                                        "x",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                            is_free: false,
                                        },
                                    ],
                                    body: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "B",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Swap",
                                                                args: [
                                                                    Var(
                                                                        "B",
                                                                    ),
                                                                    Var(
                                                                        "front_index",
                                                                    ),
                                                                    Var(
                                                                        "back_index",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "front_index",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "front_index",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "back_index",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "back_index",
                                                                ),
                                                                op: Sub,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "append",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "C",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Var(
                                    "C",
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Concat",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                            Var(
                                                "B",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "R",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Vec",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "Element",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "e",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Element",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "y",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "C",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "A",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "R",
                                        ],
                                        target: "reverse",
                                        params: [
                                            Var(
                                                "B",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        StructuredCmd(
                            While(
                                WhileCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Nat(
                                                    "0",
                                                ),
                                                op: Lt,
                                                rhs: FuncCall(
                                                    FuncCall {
                                                        target: "Vec_Len",
                                                        args: [
                                                            Var(
                                                                "R",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                    invariants: [
                                        Invariant {
                                            attrs: [],
                                            expr: Quant(
                                                QuantExpr {
                                                    kind: ForAll,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [
                                                                    Attr(
                                                                        AttrContent {
                                                                            ident: "pool",
                                                                            params: [
                                                                                String(
                                                                                    StringLit {
                                                                                        text: "L",
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "x",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [
                                                            Attr(
                                                                AttrContent {
                                                                    ident: "skolem_add_to_pool",
                                                                    params: [
                                                                        String(
                                                                            StringLit {
                                                                                text: "L",
                                                                            },
                                                                        ),
                                                                        Expr(
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                        ),
                                                                        Expr(
                                                                            Term(
                                                                                Term {
                                                                                    lhs: Var(
                                                                                        "x",
                                                                                    ),
                                                                                    op: Add,
                                                                                    rhs: Nat(
                                                                                        "1",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                        expr: Implies(
                                                            ImpliesExpr {
                                                                lhs: Logical(
                                                                    LogicalExpr {
                                                                        lhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Nat(
                                                                                    "0",
                                                                                ),
                                                                                op: Le,
                                                                                rhs: Var(
                                                                                    "x",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Var(
                                                                                    "x",
                                                                                ),
                                                                                op: Lt,
                                                                                rhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "Vec_Len",
                                                                                        args: [
                                                                                            Var(
                                                                                                "R",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Term(
                                                                                                Term {
                                                                                                    lhs: Var(
                                                                                                        "x",
                                                                                                    ),
                                                                                                    op: Add,
                                                                                                    rhs: FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "Vec_Len",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "B",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            op: Sub,
                                                                                            rhs: FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "Vec_Len",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "R",
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "R",
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Term(
                                                                                                Term {
                                                                                                    lhs: FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "Vec_Len",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "R",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                    op: Sub,
                                                                                                    rhs: Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            op: Sub,
                                                                                            rhs: Var(
                                                                                                "x",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "C",
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Concat",
                                                            args: [
                                                                Var(
                                                                    "A",
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Slice",
                                                                        args: [
                                                                            Var(
                                                                                "B",
                                                                            ),
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                            Term(
                                                                                Term {
                                                                                    lhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "Vec_Len",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "B",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                    op: Sub,
                                                                                    rhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "Vec_Len",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "R",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                    ],
                                    body: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "e",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Nth",
                                                                args: [
                                                                    Var(
                                                                        "R",
                                                                    ),
                                                                    Term(
                                                                        Term {
                                                                            lhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "Vec_Len",
                                                                                    args: [
                                                                                        Var(
                                                                                            "R",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            op: Sub,
                                                                            rhs: Nat(
                                                                                "1",
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "C",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Append",
                                                                args: [
                                                                    Var(
                                                                        "C",
                                                                    ),
                                                                    Var(
                                                                        "e",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "R",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Remove",
                                                                args: [
                                                                    Var(
                                                                        "R",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [],
                                                    proposition: Rel(
                                                        RelExpr {
                                                            lhs: FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Len",
                                                                    args: [
                                                                        Var(
                                                                            "C",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            op: Eq,
                                                            rhs: FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Len",
                                                                    args: [
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Concat",
                                                                                args: [
                                                                                    Var(
                                                                                        "A",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "Vec_Slice",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "B",
                                                                                                ),
                                                                                                Nat(
                                                                                                    "0",
                                                                                                ),
                                                                                                Term(
                                                                                                    Term {
                                                                                                        lhs: FuncCall(
                                                                                                            FuncCall {
                                                                                                                target: "Vec_Len",
                                                                                                                args: [
                                                                                                                    Var(
                                                                                                                        "B",
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                        op: Sub,
                                                                                                        rhs: FuncCall(
                                                                                                            FuncCall {
                                                                                                                target: "Vec_Len",
                                                                                                                args: [
                                                                                                                    Var(
                                                                                                                        "R",
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [
                                                            "y",
                                                        ],
                                                        target: "Vec_Ext",
                                                        params: [
                                                            Var(
                                                                "C",
                                                            ),
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Concat",
                                                                    args: [
                                                                        Var(
                                                                            "A",
                                                                        ),
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Slice",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                    Nat(
                                                                                        "0",
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "Vec_Len",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "B",
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                            op: Sub,
                                                                                            rhs: FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "Vec_Len",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "R",
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                    is_async: false,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "add_to_pool",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "Slice",
                                                                        },
                                                                    ),
                                                                    Expr(
                                                                        Var(
                                                                            "y",
                                                                        ),
                                                                    ),
                                                                    Expr(
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "y",
                                                                                ),
                                                                                op: Sub,
                                                                                rhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "Vec_Len",
                                                                                        args: [
                                                                                            Var(
                                                                                                "A",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: BoolLit(
                                                        true,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "contains",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "e",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Element",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "found",
                                ],
                                type_: Atom(
                                    Bool,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Equiv(
                            EquivExpr {
                                lhs: Neg(
                                    NegExpr {
                                        op: Logical,
                                        expr: Var(
                                            "found",
                                        ),
                                    },
                                ),
                                rhs: Quant(
                                    QuantExpr {
                                        kind: ForAll,
                                        body: QuantBody {
                                            type_params: [],
                                            bound_vars: [
                                                AttrTypedIdentsWhere {
                                                    attrs: [],
                                                    typed_idents_where: TypedIdentsWhere {
                                                        typed_idents: TypedIdents {
                                                            idents: [
                                                                "x",
                                                            ],
                                                            type_: Atom(
                                                                Int,
                                                            ),
                                                        },
                                                        where_: None,
                                                    },
                                                },
                                            ],
                                            attrs: [],
                                            expr: Implies(
                                                ImpliesExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Rel(
                                                                RelExpr {
                                                                    lhs: Nat(
                                                                        "0",
                                                                    ),
                                                                    op: Le,
                                                                    rhs: Var(
                                                                        "x",
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: Var(
                                                                        "x",
                                                                    ),
                                                                    op: Lt,
                                                                    rhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Len",
                                                                            args: [
                                                                                Var(
                                                                                    "A",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: FuncCall(
                                                                FuncCall {
                                                                    target: "Vec_Nth",
                                                                    args: [
                                                                        Var(
                                                                            "A",
                                                                        ),
                                                                        Var(
                                                                            "x",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            op: Neq,
                                                            rhs: Var(
                                                                "e",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "len",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "found",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "0",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "len",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            While(
                                WhileCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "i",
                                                ),
                                                op: Lt,
                                                rhs: Var(
                                                    "len",
                                                ),
                                            },
                                        ),
                                    ),
                                    invariants: [
                                        Invariant {
                                            attrs: [],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Nat(
                                                        "0",
                                                    ),
                                                    op: Le,
                                                    rhs: Var(
                                                        "i",
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Quant(
                                                QuantExpr {
                                                    kind: ForAll,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "x",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Implies(
                                                            ImpliesExpr {
                                                                lhs: Logical(
                                                                    LogicalExpr {
                                                                        lhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Nat(
                                                                                    "0",
                                                                                ),
                                                                                op: Le,
                                                                                rhs: Var(
                                                                                    "x",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Var(
                                                                                    "x",
                                                                                ),
                                                                                op: Lt,
                                                                                rhs: Var(
                                                                                    "i",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "A",
                                                                                    ),
                                                                                    Var(
                                                                                        "x",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Neq,
                                                                        rhs: Var(
                                                                            "e",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                            is_free: false,
                                        },
                                    ],
                                    body: [
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Expr(
                                                        Rel(
                                                            RelExpr {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Nth",
                                                                        args: [
                                                                            Var(
                                                                                "A",
                                                                            ),
                                                                            Var(
                                                                                "i",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Eq,
                                                                rhs: Var(
                                                                    "e",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    then: [
                                                        LabelOrCmd(
                                                            Assign(
                                                                AssignCmd {
                                                                    lhs: [
                                                                        AssignLhs {
                                                                            ident: "found",
                                                                            subscripts: [],
                                                                        },
                                                                    ],
                                                                    rhs: [
                                                                        BoolLit(
                                                                            true,
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ),
                                                        TransferCmd(
                                                            Return(
                                                                ReturnCmd,
                                                            ),
                                                        ),
                                                    ],
                                                    else_: None,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "i",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "index_of",
                type_params: [
                    "Element",
                ],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "Element",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "e",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Element",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "found",
                                ],
                                type_: Atom(
                                    Bool,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pos",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Implies(
                            ImpliesExpr {
                                lhs: Var(
                                    "found",
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "Vec_Nth",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                    Var(
                                                        "pos",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: Var(
                                            "e",
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Implies(
                            ImpliesExpr {
                                lhs: Neg(
                                    NegExpr {
                                        op: Logical,
                                        expr: Var(
                                            "found",
                                        ),
                                    },
                                ),
                                rhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "pos",
                                                ),
                                                op: Eq,
                                                rhs: Nat(
                                                    "0",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Quant(
                                            QuantExpr {
                                                kind: ForAll,
                                                body: QuantBody {
                                                    type_params: [],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "x",
                                                                    ],
                                                                    type_: Atom(
                                                                        Int,
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: Implies(
                                                        ImpliesExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Nat(
                                                                                "0",
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Var(
                                                                                "x",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "x",
                                                                            ),
                                                                            op: Lt,
                                                                            rhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "Vec_Len",
                                                                                    args: [
                                                                                        Var(
                                                                                            "A",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Nth",
                                                                            args: [
                                                                                Var(
                                                                                    "A",
                                                                                ),
                                                                                Var(
                                                                                    "x",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Neq,
                                                                    rhs: Var(
                                                                        "e",
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "len",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "found",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "pos",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                        Nat(
                                            "0",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "0",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "len",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            While(
                                WhileCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "i",
                                                ),
                                                op: Lt,
                                                rhs: Var(
                                                    "len",
                                                ),
                                            },
                                        ),
                                    ),
                                    invariants: [
                                        Invariant {
                                            attrs: [],
                                            expr: Quant(
                                                QuantExpr {
                                                    kind: ForAll,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "x",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Implies(
                                                            ImpliesExpr {
                                                                lhs: Logical(
                                                                    LogicalExpr {
                                                                        lhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Nat(
                                                                                    "0",
                                                                                ),
                                                                                op: Le,
                                                                                rhs: Var(
                                                                                    "x",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Var(
                                                                                    "x",
                                                                                ),
                                                                                op: Lt,
                                                                                rhs: Var(
                                                                                    "i",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "A",
                                                                                    ),
                                                                                    Var(
                                                                                        "x",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Neq,
                                                                        rhs: Var(
                                                                            "e",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                            is_free: false,
                                        },
                                    ],
                                    body: [
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Expr(
                                                        Rel(
                                                            RelExpr {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Nth",
                                                                        args: [
                                                                            Var(
                                                                                "A",
                                                                            ),
                                                                            Var(
                                                                                "i",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Eq,
                                                                rhs: Var(
                                                                    "e",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    then: [
                                                        LabelOrCmd(
                                                            Assign(
                                                                AssignCmd {
                                                                    lhs: [
                                                                        AssignLhs {
                                                                            ident: "found",
                                                                            subscripts: [],
                                                                        },
                                                                        AssignLhs {
                                                                            ident: "pos",
                                                                            subscripts: [],
                                                                        },
                                                                    ],
                                                                    rhs: [
                                                                        BoolLit(
                                                                            true,
                                                                        ),
                                                                        Var(
                                                                            "i",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ),
                                                        TransferCmd(
                                                            Return(
                                                                ReturnCmd,
                                                            ),
                                                        ),
                                                    ],
                                                    else_: None,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "i",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
procedure Ex0<Element>(A: Vec Element, i: int)
  requires 0 <= i && i < Vec_Len(A);
{
  assert Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i, Vec_Len(A))) == A;
}

procedure Ex1<Element>(A: Vec Element, i: int)
  requires 0 <= i && i < Vec_Len(A) - 1;
  requires Vec_Nth(A, i) == Vec_Nth(A, i + 1);
{
  assert Vec_Concat(Vec_Slice(A, 0, i + 1), Vec_Slice(A, i + 2, Vec_Len(A))) == Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i + 1, Vec_Len(A)));
  assert Vec_Swap(A, i, i + 1) == A;
}

procedure Ex2<Element>(A: Vec Element, i: int, j: int)
  requires 0 <= i && i < Vec_Len(A);
  requires 0 <= j && j < Vec_Len(A);
  requires Vec_Nth(A, i) == Vec_Nth(A, j);
{
  assert Vec_Swap(A, i, j) == A;
}

procedure Ex3<Element>(A: Vec Element, i: int, j: int)
  requires 0 <= i && i < Vec_Len(A);
  requires 0 <= j && j < Vec_Len(A);
{
  assert Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i, Vec_Len(A))) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j, Vec_Len(A)));
}

procedure Ex4<Element>(A: Vec Element, B: Vec Element, i: int, e: Element)
  requires 0 <= i && i < Vec_Len(A);
  requires Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i + 1, Vec_Len(A))) == B;
{
  var A', B': Vec Element;

  A' := Vec_Append(A, e);
  B' := Vec_Append(B, e);
  assert Vec_Concat(Vec_Slice(A', 0, i), Vec_Slice(A', i + 1, Vec_Len(A'))) == B';
}

procedure Ex5<Element>(A: Vec Element, B: Vec Element, i: int, e: Element)
  requires 0 <= i && i < Vec_Len(A);
  requires Vec_Nth(A, i) == Vec_Nth(B, Vec_Len(B) - 1);
  requires Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i + 1, Vec_Len(A))) == Vec_Slice(B, 0, Vec_Len(B) - 1);
{
  var A', B': Vec Element;

  A' := Vec_Append(A, e);
  B' := Vec_Swap(Vec_Append(B, e), Vec_Len(B) - 1, Vec_Len(B));
  assert (forall x: int :: {:skolem_add_to_pool "Slice", x} Vec_Nth(Vec_Concat(Vec_Slice(A', 0, i), Vec_Slice(A', i + 1, Vec_Len(A'))), x) == Vec_Nth(Vec_Slice(B', 0, Vec_Len(B') - 1), x));
}

procedure Ex6a<Element>(A: Vec Element, B: Vec Element, i: int, e: Element)
  requires 0 <= i && i < Vec_Len(A);
  requires Vec_Nth(A, i) == Vec_Nth(B, Vec_Len(B) - 1);
  requires Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i + 1, Vec_Len(A))) == Vec_Slice(B, 0, Vec_Len(B) - 1);
{
  var A', B': Vec Element;

  A' := Vec_Append(A, e);
  B' := Vec_Swap(Vec_Append(B, e), Vec_Len(B) - 1, Vec_Len(B));
  assert Vec_Nth(A', i) == Vec_Nth(B', Vec_Len(B') - 1);
}

procedure Ex6b<Element>(A: Vec Element, B: Vec Element, i: int, e: Element)
  requires 0 <= i && i < Vec_Len(A);
  requires Vec_Nth(A, i) == Vec_Nth(B, Vec_Len(B) - 1);
  requires Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i + 1, Vec_Len(A))) == Vec_Slice(B, 0, Vec_Len(B) - 1);
{
  var A', B': Vec Element;
  var x: int;

  A' := Vec_Append(A, e);
  B' := Vec_Swap(Vec_Append(B, e), Vec_Len(B) - 1, Vec_Len(B));
  call x := Vec_Ext(Vec_Concat(Vec_Slice(A', 0, i), Vec_Slice(A', i + 1, Vec_Len(A'))), Vec_Slice(B', 0, Vec_Len(B') - 1));
  assert {:add_to_pool "Slice", x} Vec_Concat(Vec_Slice(A', 0, i), Vec_Slice(A', i + 1, Vec_Len(A'))) == Vec_Slice(B', 0, Vec_Len(B') - 1);
}

procedure Ex7a<Element>(A: Vec Element, j: int, B: Vec Element, i: int)
  requires 0 <= j && j <= i && i < Vec_Len(A) - 1;
  requires Vec_Nth(B, i) == Vec_Nth(A, j);
  requires Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
  requires Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
{
  var B': Vec Element;
  var i': int;

  B' := Vec_Swap(B, i, i + 1);
  i' := i + 1;
  assert Vec_Nth(B', i') == Vec_Nth(A, j);
}

procedure Ex7b<Element>(A: Vec Element, j: int, B: Vec Element, i: int)
  requires 0 <= j && j <= i && i < Vec_Len(A) - 1;
  requires Vec_Nth(B, i) == Vec_Nth(A, j);
  requires Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
  requires Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
{
  var B': Vec Element;
  var i': int;
  var x: int;

  B' := Vec_Swap(B, i, i + 1);
  i' := i + 1;
  call x := Vec_Ext(Vec_Slice(B', 0, i'), Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i' + 1)));
  assert {:add_to_pool "Slice", 0, x + j, x - j, x, x + 1, x - 1} Vec_Slice(B', 0, i') == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i' + 1));
}

procedure Ex7c<Element>(A: Vec Element, j: int, B: Vec Element, i: int)
  requires 0 <= j && j <= i && i < Vec_Len(A) - 1;
  requires Vec_Nth(B, i) == Vec_Nth(A, j);
  requires Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
  requires Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
{
  var B': Vec Element;
  var i': int;
  var x: int;

  B' := Vec_Swap(B, i, i + 1);
  i' := i + 1;
  call x := Vec_Ext(Vec_Slice(B', i' + 1, Vec_Len(B')), Vec_Slice(A, i' + 1, Vec_Len(A)));
  assert {:add_to_pool "Slice", x, x + 1} Vec_Slice(B', i' + 1, Vec_Len(B')) == Vec_Slice(A, i' + 1, Vec_Len(A));
}

procedure Ex8<Element>(A: Vec Element, j: int, B: Vec Element, i: int) returns (B': Vec Element, i': int)
  requires 0 <= j && j <= i && i < Vec_Len(A) - 1;
  requires Vec_Nth(B, i) == Vec_Nth(A, j);
  requires Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
  requires Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
  ensures i' == i + 1;
  ensures Vec_Nth(B', i') == Vec_Nth(A, j);
  ensures Vec_Slice(B', 0, i') == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i' + 1));
  ensures Vec_Slice(B', i' + 1, Vec_Len(B')) == Vec_Slice(A, i' + 1, Vec_Len(A));
{
  var x, y: int;

  B' := Vec_Swap(B, i, i + 1);
  i' := i + 1;
  assert Vec_Nth(B', i') == Vec_Nth(A, j);
  call x := Vec_Ext(Vec_Slice(B', 0, i'), Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i' + 1)));
  assert {:add_to_pool "Slice", 0, x + j, x - j, x, x + 1, x - 1} Vec_Slice(B', 0, i') == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i' + 1));
  call y := Vec_Ext(Vec_Slice(B', i' + 1, Vec_Len(B')), Vec_Slice(A, i' + 1, Vec_Len(A)));
  assert {:add_to_pool "Slice", y, y + 1} Vec_Slice(B', i' + 1, Vec_Len(B')) == Vec_Slice(A, i' + 1, Vec_Len(A));
}

procedure Ex9<Element>(A: Vec Element, j: int) returns (B: Vec Element, e: Element)
  requires 0 <= j && j < Vec_Len(A);
  ensures e == Vec_Nth(A, j);
  ensures B == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, Vec_Len(A)));
{
  var i: int;
  var x, y, z: int;

  B := A;
  i := j;
  while (i < Vec_Len(A) - 1)
    invariant j <= i && i <= Vec_Len(A) - 1;
    invariant Vec_Nth(B, i) == Vec_Nth(A, j);
    invariant Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
    invariant Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
  {
    assert {:split_here} true;
    call B, i := Ex8(A, j, B, i);
  }
  e := Vec_Nth(B, Vec_Len(A) - 1);
  B := Vec_Remove(B);
  call z := Vec_Ext(B, Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, Vec_Len(A))));
  assume {:add_to_pool "Slice", z, j, j + 1, j - 1} true;
  assert {:split_here} true;
}

procedure remove<Element>(A: Vec Element, j: int) returns (B: Vec Element, e: Element)
  requires 0 <= j && j < Vec_Len(A);
  ensures e == Vec_Nth(A, j);
  ensures B == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, Vec_Len(A)));
{
  var i: int;
  var x, y, z: int;

  B := A;
  i := j;
  while (i < Vec_Len(A) - 1)
    invariant j <= i && i <= Vec_Len(A) - 1;
    invariant Vec_Nth(B, i) == Vec_Nth(A, j);
    invariant Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
    invariant Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
  {
    assert {:split_here} true;
    assume {:add_to_pool "Slice", i, j} true;
    B := Vec_Swap(B, i, i + 1);
    i := i + 1;
    assume {:add_to_pool "Slice", i} true;
    call x := Vec_Ext(Vec_Slice(B, 0, i), Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1)));
    assume {:add_to_pool "Slice", 0, x + j, x - j, x, x + 1, x - 1} true;
    call y := Vec_Ext(Vec_Slice(B, i + 1, Vec_Len(B)), Vec_Slice(A, i + 1, Vec_Len(A)));
    assume {:add_to_pool "Slice", y, y + 1} true;
  }
  e := Vec_Nth(B, Vec_Len(A) - 1);
  B := Vec_Remove(B);
  call z := Vec_Ext(B, Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, Vec_Len(A))));
  assume {:add_to_pool "Slice", z, j, j + 1, j - 1} true;
  assert {:split_here} true;
}

procedure swap_remove<Element>(A: Vec Element, j: int) returns (B: Vec Element)
  requires 0 <= j && j < Vec_Len(A);
  ensures Vec_Slice(B, 0, j) == Vec_Slice(A, 0, j);
  ensures Vec_Slice(B, j + 1, Vec_Len(B)) == Vec_Slice(A, j + 1, Vec_Len(B));
  ensures Vec_Nth(B, j) == Vec_Nth(A, Vec_Len(A) - 1);
{
  var last_idx: int;

  last_idx := Vec_Len(A) - 1;
  B := Vec_Swap(A, j, last_idx);
  B := Vec_Remove(B);
  assume {:add_to_pool "Slice", j, j + 1} true;
}

procedure reverse<Element>(A: Vec Element) returns (B: Vec Element)
  ensures Vec_Len(A) == Vec_Len(B);
  ensures (forall x: int :: 0 <= x && x < Vec_Len(A) ==> Vec_Nth(A, x) == Vec_Nth(B, Vec_Len(A) - 1 - x));
{
  var len: int;
  var front_index: int;
  var back_index: int;

  B := A;
  len := Vec_Len(A);
  if (len == 0) {
    return;
  }
  front_index := 0;
  back_index := len - 1;
  while (front_index < back_index)
    invariant front_index + back_index == len - 1;
    invariant Vec_Len(A) == Vec_Len(B);
    invariant (forall x: int :: 0 <= x && x < front_index ==> Vec_Nth(A, x) == Vec_Nth(B, Vec_Len(A) - 1 - x));
    invariant (forall x: int :: back_index < x && x < Vec_Len(A) ==> Vec_Nth(A, x) == Vec_Nth(B, Vec_Len(A) - 1 - x));
    invariant (forall x: int :: front_index <= x && x <= back_index ==> Vec_Nth(A, x) == Vec_Nth(B, x));
  {
    B := Vec_Swap(B, front_index, back_index);
    front_index := front_index + 1;
    back_index := back_index - 1;
  }
}

procedure append<Element>(A: Vec Element, B: Vec Element) returns (C: Vec Element)
  ensures C == Vec_Concat(A, B);
{
  var R: Vec Element;
  var e: Element;
  var y: int;

  C := A;
  call R := reverse(B);
  while (0 < Vec_Len(R))
    invariant (forall {:pool "L"} x: int :: {:skolem_add_to_pool "L", 0, x + 1} 0 <= x && x < Vec_Len(R) ==> Vec_Nth(B, x + Vec_Len(B) - Vec_Len(R)) == Vec_Nth(R, Vec_Len(R) - 1 - x));
    invariant C == Vec_Concat(A, Vec_Slice(B, 0, Vec_Len(B) - Vec_Len(R)));
  {
    e := Vec_Nth(R, Vec_Len(R) - 1);
    C := Vec_Append(C, e);
    R := Vec_Remove(R);
    assert Vec_Len(C) == Vec_Len(Vec_Concat(A, Vec_Slice(B, 0, Vec_Len(B) - Vec_Len(R))));
    call y := Vec_Ext(C, Vec_Concat(A, Vec_Slice(B, 0, Vec_Len(B) - Vec_Len(R))));
    assume {:add_to_pool "Slice", y, y - Vec_Len(A)} true;
  }
}

procedure contains<Element>(A: Vec Element, e: Element) returns (found: bool)
  ensures !found <==> (forall x: int :: 0 <= x && x < Vec_Len(A) ==> Vec_Nth(A, x) != e);
{
  var i: int;
  var len: int;

  found := false;
  i := 0;
  len := Vec_Len(A);
  while (i < len)
    invariant 0 <= i;
    invariant (forall x: int :: 0 <= x && x < i ==> Vec_Nth(A, x) != e);
  {
    if (Vec_Nth(A, i) == e) {
      found := true;
      return;
    }
    i := i + 1;
  }
}

procedure index_of<Element>(A: Vec Element, e: Element) returns (found: bool, pos: int)
  ensures found ==> Vec_Nth(A, pos) == e;
  ensures !found ==> pos == 0 && (forall x: int :: 0 <= x && x < Vec_Len(A) ==> Vec_Nth(A, x) != e);
{
  var i: int;
  var len: int;

  found, pos := false, 0;
  i := 0;
  len := Vec_Len(A);
  while (i < len)
    invariant (forall x: int :: 0 <= x && x < i ==> Vec_Nth(A, x) != e);
  {
    if (Vec_Nth(A, i) == e) {
      found, pos := true, i;
      return;
    }
    i := i + 1;
  }
}

[Input - ../../vendor/boogie/Test/inst/vector-generic.bpl]
// RUN: %boogie -lib "%s" > "%t"
// RUN: %diff "%s.expect" "%t"

// procedures Ex0 to Ex9 are exercises to ramp up to the "real" vector procedures
procedure Ex0<Element>(A: Vec Element, i: int)
requires 0 <= i && i < Vec_Len(A);
{
    assert Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i, Vec_Len(A))) == A;
}

procedure Ex1<Element>(A: Vec Element, i: int)
requires 0 <= i && i < Vec_Len(A) - 1;
requires Vec_Nth(A, i) == Vec_Nth(A, i + 1);
{
    assert
    Vec_Concat(Vec_Slice(A, 0, i + 1), Vec_Slice(A, i + 2, Vec_Len(A)))
    ==
    Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i + 1, Vec_Len(A)));

    assert Vec_Swap(A, i, i+1) == A;
}

procedure Ex2<Element>(A: Vec Element, i: int, j: int)
requires 0 <= i && i < Vec_Len(A);
requires 0 <= j && j < Vec_Len(A);
requires Vec_Nth(A, i) == Vec_Nth(A, j);
{
    assert Vec_Swap(A, i, j) == A;
}

procedure Ex3<Element>(A: Vec Element, i: int, j: int)
requires 0 <= i && i < Vec_Len(A);
requires 0 <= j && j < Vec_Len(A);
{
    assert
    Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i, Vec_Len(A)))
    ==
    Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j, Vec_Len(A)));
}

procedure Ex4<Element>(A: Vec Element, B: Vec Element, i: int, e: Element)
requires 0 <= i && i < Vec_Len(A);
requires Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i + 1, Vec_Len(A))) == B;
{
    var A', B': Vec Element;

    A' := Vec_Append(A, e);
    B' := Vec_Append(B, e);

    assert Vec_Concat(Vec_Slice(A', 0, i), Vec_Slice(A', i + 1, Vec_Len(A'))) == B';
}

procedure Ex5<Element>(A: Vec Element, B: Vec Element, i: int, e: Element)
requires 0 <= i && i < Vec_Len(A);
requires Vec_Nth(A, i) == Vec_Nth(B, Vec_Len(B) - 1);
requires Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i + 1, Vec_Len(A))) == Vec_Slice(B, 0, Vec_Len(B) - 1);
{
    var A', B': Vec Element;

    A' := Vec_Append(A, e);
    B' := Vec_Swap(Vec_Append(B, e), Vec_Len(B) - 1, Vec_Len(B));

    assert (forall x: int :: {:skolem_add_to_pool "Slice", x}
    Vec_Nth(Vec_Concat(Vec_Slice(A', 0, i), Vec_Slice(A', i + 1, Vec_Len(A'))), x) == Vec_Nth(Vec_Slice(B', 0, Vec_Len(B') - 1), x));
}

procedure Ex6a<Element>(A: Vec Element, B: Vec Element, i: int, e: Element)
requires 0 <= i && i < Vec_Len(A);
requires Vec_Nth(A, i) == Vec_Nth(B, Vec_Len(B) - 1);
requires Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i + 1, Vec_Len(A))) == Vec_Slice(B, 0, Vec_Len(B) - 1);
{
    var A', B': Vec Element;

    A' := Vec_Append(A, e);
    B' := Vec_Swap(Vec_Append(B, e), Vec_Len(B) - 1, Vec_Len(B));

    assert Vec_Nth(A', i) == Vec_Nth(B', Vec_Len(B') - 1);
}

procedure Ex6b<Element>(A: Vec Element, B: Vec Element, i: int, e: Element)
requires 0 <= i && i < Vec_Len(A);
requires Vec_Nth(A, i) == Vec_Nth(B, Vec_Len(B) - 1);
requires Vec_Concat(Vec_Slice(A, 0, i), Vec_Slice(A, i + 1, Vec_Len(A))) == Vec_Slice(B, 0, Vec_Len(B) - 1);
{
    var A', B': Vec Element;
    var x: int;

    A' := Vec_Append(A, e);
    B' := Vec_Swap(Vec_Append(B, e), Vec_Len(B) - 1, Vec_Len(B));

    call x := Vec_Ext(Vec_Concat(Vec_Slice(A', 0, i), Vec_Slice(A', i + 1, Vec_Len(A'))), Vec_Slice(B', 0, Vec_Len(B') - 1));
    assert {:add_to_pool "Slice", x}
    Vec_Concat(Vec_Slice(A', 0, i), Vec_Slice(A', i + 1, Vec_Len(A'))) == Vec_Slice(B', 0, Vec_Len(B') - 1);
}

procedure Ex7a<Element>(A: Vec Element, j: int, B: Vec Element, i: int)
requires 0 <= j && j <= i && i < Vec_Len(A) - 1;
requires Vec_Nth(B, i) == Vec_Nth(A, j);
requires Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
requires Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
{
    var B': Vec Element;
    var i': int;

    B' := Vec_Swap(B, i, i + 1);
    i' := i + 1;

    assert Vec_Nth(B', i') == Vec_Nth(A, j);
}

procedure Ex7b<Element>(A: Vec Element, j: int, B: Vec Element, i: int)
requires 0 <= j && j <= i && i < Vec_Len(A) - 1;
requires Vec_Nth(B, i) == Vec_Nth(A, j);
requires Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
requires Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
{
    var B': Vec Element;
    var i': int;
    var x: int;

    B' := Vec_Swap(B, i, i + 1);
    i' := i + 1;

    call x := Vec_Ext(Vec_Slice(B', 0, i'), Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i' + 1)));
    assert {:add_to_pool "Slice", 0, x + j, x - j, x, x + 1, x - 1}
    Vec_Slice(B', 0, i') == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i' + 1));
}

procedure Ex7c<Element>(A: Vec Element, j: int, B: Vec Element, i: int)
requires 0 <= j && j <= i && i < Vec_Len(A) - 1;
requires Vec_Nth(B, i) == Vec_Nth(A, j);
requires Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
requires Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
{
    var B': Vec Element;
    var i': int;
    var x: int;

    B' := Vec_Swap(B, i, i + 1);
    i' := i + 1;

    call x := Vec_Ext(Vec_Slice(B', i' + 1, Vec_Len(B')), Vec_Slice(A, i' + 1, Vec_Len(A)));
    assert {:add_to_pool "Slice", x, x + 1}
    Vec_Slice(B', i' + 1, Vec_Len(B')) == Vec_Slice(A, i' + 1, Vec_Len(A));
}

procedure Ex8<Element>(A: Vec Element, j: int, B: Vec Element, i: int)
returns (B': Vec Element, i': int)
requires 0 <= j && j <= i && i < Vec_Len(A) - 1;
requires Vec_Nth(B, i) == Vec_Nth(A, j);
requires Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
requires Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
ensures i' == i + 1;
ensures Vec_Nth(B', i') == Vec_Nth(A, j);
ensures Vec_Slice(B', 0, i') == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i' + 1));
ensures Vec_Slice(B', i' + 1, Vec_Len(B')) == Vec_Slice(A, i' + 1, Vec_Len(A));
{
    var x, y: int;

    B' := Vec_Swap(B, i, i + 1);
    i' := i + 1;

    assert Vec_Nth(B', i') == Vec_Nth(A, j);
    call x := Vec_Ext(Vec_Slice(B', 0, i'), Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i' + 1)));
    assert {:add_to_pool "Slice", 0, x + j, x - j, x, x + 1, x - 1}
    Vec_Slice(B', 0, i') == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i' + 1));
    call y := Vec_Ext(Vec_Slice(B', i' + 1, Vec_Len(B')), Vec_Slice(A, i' + 1, Vec_Len(A)));
    assert {:add_to_pool "Slice", y, y + 1}
    Vec_Slice(B', i' + 1, Vec_Len(B')) == Vec_Slice(A, i' + 1, Vec_Len(A));
}

procedure Ex9<Element>(A: Vec Element, j: int) returns (B: Vec Element, e: Element)
requires 0 <= j && j < Vec_Len(A);
ensures e == Vec_Nth(A, j);
ensures B == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, Vec_Len(A)));
{
    var i: int;
    var x, y, z: int;

    B := A;
    i := j;
    while (i < Vec_Len(A) - 1)
    invariant j <= i && i <= Vec_Len(A) - 1;
    invariant Vec_Nth(B, i) == Vec_Nth(A, j);
    invariant Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
    invariant Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
    {
        assert {:split_here} true;
        call B, i := Ex8(A, j, B, i);
    }
    e := Vec_Nth(B, Vec_Len(A) - 1);
    B := Vec_Remove(B);
    call z := Vec_Ext(B, Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, Vec_Len(A))));
    assume {:add_to_pool "Slice", z, j, j + 1, j - 1} true;
    assert {:split_here} true;
}

// "real" vector procedures start here
procedure remove<Element>(A: Vec Element, j: int) returns (B: Vec Element, e: Element)
requires 0 <= j && j < Vec_Len(A);
ensures e == Vec_Nth(A, j);
ensures B == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, Vec_Len(A)));
{
    var i: int;
    var x, y, z: int;

    B := A;
    i := j;
    while (i < Vec_Len(A) - 1)
    invariant j <= i && i <= Vec_Len(A) - 1;
    invariant Vec_Nth(B, i) == Vec_Nth(A, j);
    invariant Vec_Slice(B, 0, i) == Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1));
    invariant Vec_Slice(B, i + 1, Vec_Len(B)) == Vec_Slice(A, i + 1, Vec_Len(A));
    {
        assert {:split_here} true;
        assume {:add_to_pool "Slice", i, j} true;

        B := Vec_Swap(B, i, i + 1);
        i := i + 1;

        assume {:add_to_pool "Slice", i} true;
        call x := Vec_Ext(Vec_Slice(B, 0, i), Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, i + 1)));
        assume {:add_to_pool "Slice", 0, x + j, x - j, x, x + 1, x - 1} true;
        call y := Vec_Ext(Vec_Slice(B, i + 1, Vec_Len(B)), Vec_Slice(A, i + 1, Vec_Len(A)));
        assume {:add_to_pool "Slice", y, y + 1} true;
    }
    e := Vec_Nth(B, Vec_Len(A) - 1);
    B := Vec_Remove(B);
    call z := Vec_Ext(B, Vec_Concat(Vec_Slice(A, 0, j), Vec_Slice(A, j + 1, Vec_Len(A))));
    assume {:add_to_pool "Slice", z, j, j + 1, j - 1} true;
    assert {:split_here} true;
}

procedure swap_remove<Element>(A: Vec Element, j: int) returns (B: Vec Element)
requires 0 <= j && j < Vec_Len(A);
ensures Vec_Slice(B, 0, j) == Vec_Slice(A, 0, j);
ensures Vec_Slice(B, j+1, Vec_Len(B)) == Vec_Slice(A, j+1, Vec_Len(B));
ensures Vec_Nth(B, j) == Vec_Nth(A, Vec_Len(A) - 1);
{
    var last_idx: int;

    last_idx := Vec_Len(A) - 1;
    B := Vec_Swap(A, j, last_idx);
    B := Vec_Remove(B);
    assume {:add_to_pool "Slice", j, j + 1} true;
}

procedure reverse<Element>(A: Vec Element) returns (B: Vec Element)
ensures Vec_Len(A) == Vec_Len(B);
ensures (forall x: int :: 0 <= x && x < Vec_Len(A) ==> Vec_Nth(A, x) == Vec_Nth(B, Vec_Len(A) - 1 - x));
{
    var len: int;
    var front_index: int;
    var back_index: int;

    B := A;
    len := Vec_Len(A);
    if (len == 0) {
        return;
    }

    front_index := 0;
    back_index := len - 1;
    while (front_index < back_index)
    invariant front_index + back_index == len - 1;
    invariant Vec_Len(A) == Vec_Len(B);
    invariant (forall x: int :: 0 <= x && x < front_index ==> Vec_Nth(A, x) == Vec_Nth(B, Vec_Len(A) - 1 - x));
    invariant (forall x: int :: back_index < x && x < Vec_Len(A) ==> Vec_Nth(A, x) == Vec_Nth(B, Vec_Len(A) - 1 - x));
    invariant (forall x: int :: front_index <= x && x <= back_index ==> Vec_Nth(A, x) == Vec_Nth(B, x));
    {
        B := Vec_Swap(B, front_index, back_index);
        front_index := front_index + 1;
        back_index := back_index - 1;
    }
}

procedure append<Element>(A: Vec Element, B: Vec Element) returns (C: Vec Element)
ensures C == Vec_Concat(A, B);
{
    var R: Vec Element;
    var e: Element;
    var y: int;

    C := A;
    call R := reverse(B);
    while (0 < Vec_Len(R))
    invariant (forall {:pool "L"} x: int :: {:skolem_add_to_pool "L", 0, x + 1}
    0 <= x && x < Vec_Len(R) ==> Vec_Nth(B, x + Vec_Len(B) - Vec_Len(R)) == Vec_Nth(R, Vec_Len(R) - 1 - x));
    invariant C == Vec_Concat(A, Vec_Slice(B, 0, Vec_Len(B) - Vec_Len(R)));
    {
        e := Vec_Nth(R, Vec_Len(R) - 1);
        C := Vec_Append(C, e);
        R := Vec_Remove(R);
        assert Vec_Len(C) == Vec_Len(Vec_Concat(A, Vec_Slice(B, 0, Vec_Len(B) - Vec_Len(R))));
        call y := Vec_Ext(C, Vec_Concat(A, Vec_Slice(B, 0, Vec_Len(B) - Vec_Len(R))));
        assume {:add_to_pool "Slice", y, y - Vec_Len(A)} true;
    }
}

procedure contains<Element>(A: Vec Element, e: Element) returns (found: bool)
ensures !found <==> (forall x: int :: 0 <= x && x < Vec_Len(A) ==> Vec_Nth(A, x) != e);
{
    var i: int;
    var len: int;

    found := false;
    i := 0;
    len := Vec_Len(A);
    while (i < len)
    invariant 0 <= i;
    invariant (forall x: int :: 0 <= x && x < i ==> Vec_Nth(A, x) != e);
    {
        if (Vec_Nth(A, i) == e) {
            found := true;
            return;
        }
        i := i + 1;
    }
}

procedure index_of<Element>(A: Vec Element, e: Element) returns (found: bool, pos: int)
ensures found ==> Vec_Nth(A, pos) == e;
ensures !found ==> pos == 0 && (forall x: int :: 0 <= x && x < Vec_Len(A) ==> Vec_Nth(A, x) != e);
{
    var i: int;
    var len: int;

    found, pos := false, 0;
    i := 0;
    len := Vec_Len(A);
    while (i < len)
    invariant (forall x: int :: 0 <= x && x < i ==> Vec_Nth(A, x) != e);
    {
        if (Vec_Nth(A, i) == e) {
            found, pos := true, i;
            return;
        }
        i := i + 1;
    }
}
