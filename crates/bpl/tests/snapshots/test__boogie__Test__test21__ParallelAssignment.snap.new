---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "C",
                    type_params: [],
                    type_: None,
                },
                TypeDecl {
                    ident: "D",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "x",
                        ],
                        type_: Atom(
                            Int,
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "y",
                        ],
                        type_: Atom(
                            Int,
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "z",
                        ],
                        type_: Atom(
                            Int,
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "a",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [],
                                keys: [
                                    Atom(
                                        Int,
                                    ),
                                ],
                                value: Atom(
                                    Int,
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "b",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [],
                                keys: [
                                    Atom(
                                        Int,
                                    ),
                                ],
                                value: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "C",
                                                    tail: None,
                                                },
                                            ),
                                            App(
                                                TypeApp {
                                                    head: "D",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "P",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "j",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "m",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "C",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "n",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "D",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "x",
                            "y",
                            "a",
                            "b",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x1",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "y1",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "x",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "a",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "i",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "12",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "a",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "i",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "12",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x1",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "x",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "y1",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "y",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "y",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "y",
                                        ),
                                        Var(
                                            "x",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Logical(
                                        LogicalExpr {
                                            lhs: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "x",
                                                    ),
                                                    op: Eq,
                                                    rhs: Var(
                                                        "y1",
                                                    ),
                                                },
                                            ),
                                            op: And,
                                            rhs: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "y",
                                                    ),
                                                    op: Eq,
                                                    rhs: Var(
                                                        "x1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "x",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "x1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "a",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "i",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "x",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                        Var(
                                            "x",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Logical(
                                        LogicalExpr {
                                            lhs: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "x",
                                                    ),
                                                    op: Eq,
                                                    rhs: Term(
                                                        Term {
                                                            lhs: Var(
                                                                "y1",
                                                            ),
                                                            op: Add,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            op: And,
                                            rhs: Rel(
                                                RelExpr {
                                                    lhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "a",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "i",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: Var(
                                                        "y1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "b",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "i",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "m",
                                                    ),
                                                    Var(
                                                        "n",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "17",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "b",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "i",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "m",
                                                    ),
                                                    Var(
                                                        "n",
                                                    ),
                                                ],
                                            ],
                                        },
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "a",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "x",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                        Var(
                                            "y",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "b",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "i",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "m",
                                                                ),
                                                                Var(
                                                                    "n",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "a",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "y1",
                                                                        ),
                                                                        op: Add,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: BoolLit(
                                        false,
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Q",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "x",
                            "y",
                            "z",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "y",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "z",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "1",
                                        ),
                                        Nat(
                                            "2",
                                        ),
                                        Nat(
                                            "3",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "y",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "z",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "y",
                                        ),
                                        Var(
                                            "z",
                                        ),
                                        Var(
                                            "x",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "y",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "z",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "y",
                                        ),
                                        Var(
                                            "z",
                                        ),
                                        Var(
                                            "x",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "y",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "z",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "y",
                                        ),
                                        Var(
                                            "z",
                                        ),
                                        Var(
                                            "x",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Logical(
                                        LogicalExpr {
                                            lhs: Logical(
                                                LogicalExpr {
                                                    lhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "x",
                                                            ),
                                                            op: Eq,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "y",
                                                            ),
                                                            op: Eq,
                                                            rhs: Nat(
                                                                "2",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            op: And,
                                            rhs: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "z",
                                                    ),
                                                    op: Eq,
                                                    rhs: Nat(
                                                        "3",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "y",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "z",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "y",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "z",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "x",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "y",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "z",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "y",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "z",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "x",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "y",
                                            subscripts: [],
                                        },
                                        AssignLhs {
                                            ident: "z",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "y",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "z",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "x",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Logical(
                                        LogicalExpr {
                                            lhs: Logical(
                                                LogicalExpr {
                                                    lhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "x",
                                                            ),
                                                            op: Eq,
                                                            rhs: Nat(
                                                                "4",
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "y",
                                                            ),
                                                            op: Eq,
                                                            rhs: Nat(
                                                                "5",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            op: And,
                                            rhs: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "z",
                                                    ),
                                                    op: Eq,
                                                    rhs: Nat(
                                                        "6",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "a",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "x",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "a",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "y",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
type C,
  D;

var x: int;

var y: int;

var z: int;

var a: [int]int;

var b: [int][C, D]int;

procedure P(i: int, j: int, m: C, n: D)
  modifies x, y, a, b;
{
  var x1: int;
  var y1: int;

  x := x + 1;
  a[i] := 12;
  assert a[i] == 12;
  x1 := x;
  y1 := y;
  x, y := y, x;
  assert x == y1 && y == x1;
  assert x == x1;
  x, a[i] := x + 1, x;
  assert x == y1 + 1 && a[i] == y1;
  b[i][m, n] := 17;
  b[i][m, n], x := a[x], y;
  assert b[i][m, n] == a[y1 + 1];
  assert false;
}

procedure Q()
  modifies x, y, z;
{
  x, y, z := 1, 2, 3;
  x, y, z := y, z, x;
  x, y, z := y, z, x;
  x, y, z := y, z, x;
  assert x == 1 && y == 2 && z == 3;
  x, y, z := y + 1, z + 1, x + 1;
  x, y, z := y + 1, z + 1, x + 1;
  x, y, z := y + 1, z + 1, x + 1;
  assert x == 4 && y == 5 && z == 6;
  assert a[x] == a[y];
}

[Input - ../../vendor/boogie/Test/test21/ParallelAssignment.bpl]
// RUN: %boogie -typeEncoding:p -logPrefix:0p "%s" > "%t"
// RUN: %diff "%s.p.expect" "%t"
// RUN: %boogie -typeEncoding:a -logPrefix:0a "%s" > "%t"
// RUN: %diff "%s.a.expect" "%t"
// Examples from the Boogie2 language report

type C, D;

var x : int;
var y : int;
var z : int;
var a : [int]int;
var b : [int][C, D]int;

procedure P(i:int, j:int, m:C, n:D) returns () modifies x, y, a, b; {
  var x1 : int;
  var y1 : int;

  x := x+1;
  a[i] := 12;

  assert a[i] == 12;

  x1 := x;
  y1 := y;

  x, y := y, x;

  assert x == y1 && y == x1;
  assert x == x1;            // error

  x, a[i] := x+1, x;
  assert x == y1+1 && a[i] == y1;

  b[i][m, n] := 17;
  b[i][m, n], x := a[x], y;

  assert b[i][m, n] == a[y1+1];
  assert false;              // error
}

procedure Q() returns () modifies x, y, z; {

  x, y, z := 1, 2, 3;

  x, y, z := y, z, x;
  x, y, z := y, z, x;
  x, y, z := y, z, x;

  assert x == 1 && y == 2 && z == 3;

  x, y, z := y+1, z+1, x+1;
  x, y, z := y+1, z+1, x+1;
  x, y, z := y+1, z+1, x+1;

  assert x == 4 && y == 5 && z == 6;

  assert a[x] == a[y];    // error

}
