---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "x",
                ],
                type_: Atom(
                    Int,
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "y",
                ],
                type_: Atom(
                    Int,
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "z",
                ],
                type_: Atom(
                    Int,
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "r",
                ],
                type_: Atom(
                    Real,
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "s",
                ],
                type_: Atom(
                    Real,
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "t",
                ],
                type_: Atom(
                    Real,
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "P",
                ],
                type_: Atom(
                    Bool,
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "Q",
                ],
                type_: Atom(
                    Bool,
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "R",
                ],
                type_: Atom(
                    Bool,
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Var(
                                "x",
                            ),
                            op: Mul,
                            rhs: Term(
                                Term {
                                    lhs: Var(
                                        "y",
                                    ),
                                    op: Add,
                                    rhs: Var(
                                        "z",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Term(
                        Term {
                            lhs: Var(
                                "x",
                            ),
                            op: Add,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "y",
                                    ),
                                    op: Mul,
                                    rhs: Var(
                                        "z",
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Term(
                        Term {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Mul,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Add,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Term(
                                Term {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Add,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Mul,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Mul,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Mul,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Var(
                                "x",
                            ),
                            op: Mul,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "y",
                                    ),
                                    op: Mul,
                                    rhs: Var(
                                        "z",
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Mul,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Mul,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "z",
                                    ),
                                    op: Mul,
                                    rhs: Var(
                                        "x",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Mul,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Mul,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Div,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Div,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Var(
                                "x",
                            ),
                            op: Div,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "y",
                                    ),
                                    op: Div,
                                    rhs: Var(
                                        "z",
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Div,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Div,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "z",
                                    ),
                                    op: Div,
                                    rhs: Var(
                                        "x",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Div,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Div,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Term(
                        Term {
                            lhs: Var(
                                "x",
                            ),
                            op: Add,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "y",
                                    ),
                                    op: Mod,
                                    rhs: Var(
                                        "z",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Term(
                        Term {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "y",
                                    ),
                                    op: Mod,
                                    rhs: Var(
                                        "z",
                                    ),
                                },
                            ),
                            op: Add,
                            rhs: Var(
                                "x",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Term(
                                Term {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Add,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Mod,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Term(
                        Term {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Mod,
                                    rhs: Var(
                                        "z",
                                    ),
                                },
                            ),
                            op: Add,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "y",
                                    ),
                                    op: Mod,
                                    rhs: Var(
                                        "z",
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: RealDiv,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Var(
                                "x",
                            ),
                            op: RealDiv,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "y",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "z",
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: RealDiv,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "z",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "x",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: RealDiv,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            op: RealDiv,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Var(
                                "x",
                            ),
                            op: RealDiv,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "s",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "z",
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            op: RealDiv,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "z",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "x",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            op: RealDiv,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "r",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            op: RealDiv,
                            rhs: Var(
                                "t",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Var(
                                "r",
                            ),
                            op: RealDiv,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "s",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "t",
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "r",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            op: RealDiv,
                            rhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "t",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "r",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "r",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            op: RealDiv,
                            rhs: Var(
                                "t",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "r",
                                    ),
                                    op: Mul,
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            op: RealDiv,
                            rhs: Var(
                                "t",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "r",
                                    ),
                                    op: Mul,
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            op: RealDiv,
                            rhs: Var(
                                "t",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "r",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            op: Mul,
                            rhs: Var(
                                "t",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "r",
                                    ),
                                    op: RealDiv,
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            op: Mul,
                            rhs: Var(
                                "t",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Power(
                        Power {
                            lhs: Factor(
                                Factor {
                                    lhs: Var(
                                        "r",
                                    ),
                                    op: Mul,
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            rhs: Var(
                                "t",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Power(
                                Power {
                                    lhs: Var(
                                        "r",
                                    ),
                                    rhs: Var(
                                        "t",
                                    ),
                                },
                            ),
                            op: Mul,
                            rhs: Power(
                                Power {
                                    lhs: Var(
                                        "s",
                                    ),
                                    rhs: Var(
                                        "t",
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Power(
                        Power {
                            lhs: Var(
                                "r",
                            ),
                            rhs: Term(
                                Term {
                                    lhs: Var(
                                        "s",
                                    ),
                                    op: Add,
                                    rhs: Var(
                                        "t",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Factor(
                        Factor {
                            lhs: Power(
                                Power {
                                    lhs: Var(
                                        "r",
                                    ),
                                    rhs: Var(
                                        "s",
                                    ),
                                },
                            ),
                            op: Mul,
                            rhs: Power(
                                Power {
                                    lhs: Var(
                                        "r",
                                    ),
                                    rhs: Var(
                                        "t",
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: ArithCoercion(
                        ArithCoercionExpr {
                            kind: Int,
                            expr: ArithCoercion(
                                ArithCoercionExpr {
                                    kind: Real,
                                    expr: Var(
                                        "x",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Var(
                        "x",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Implies(
                ImpliesExpr {
                    lhs: Rel(
                        RelExpr {
                            lhs: Var(
                                "r",
                            ),
                            op: Ge,
                            rhs: Dec(
                                Dec {
                                    whole: "0",
                                    fract: Some(
                                        "0",
                                    ),
                                    exp: None,
                                },
                            ),
                        },
                    ),
                    rhs: Rel(
                        RelExpr {
                            lhs: ArithCoercion(
                                ArithCoercionExpr {
                                    kind: Real,
                                    expr: ArithCoercion(
                                        ArithCoercionExpr {
                                            kind: Int,
                                            expr: Var(
                                                "r",
                                            ),
                                        },
                                    ),
                                },
                            ),
                            op: Le,
                            rhs: Var(
                                "r",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: ArithCoercion(
                        ArithCoercionExpr {
                            kind: Int,
                            expr: Term(
                                Term {
                                    lhs: Dec(
                                        Dec {
                                            whole: "0",
                                            fract: None,
                                            exp: Some(
                                                Exp {
                                                    is_neg: true,
                                                    digits: "3",
                                                },
                                            ),
                                        },
                                    ),
                                    op: Sub,
                                    rhs: Dec(
                                        Dec {
                                            whole: "0",
                                            fract: Some(
                                                "02",
                                            ),
                                            exp: None,
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: ArithCoercion(
                        ArithCoercionExpr {
                            kind: Int,
                            expr: Term(
                                Term {
                                    lhs: Dec(
                                        Dec {
                                            whole: "0",
                                            fract: None,
                                            exp: Some(
                                                Exp {
                                                    is_neg: false,
                                                    digits: "2",
                                                },
                                            ),
                                        },
                                    ),
                                    op: Sub,
                                    rhs: Dec(
                                        Dec {
                                            whole: "3",
                                            fract: Some(
                                                "5",
                                            ),
                                            exp: Some(
                                                Exp {
                                                    is_neg: false,
                                                    digits: "1",
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Neg(
                        NegExpr {
                            op: Arith,
                            expr: Nat(
                                "35",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: ArithCoercion(
                        ArithCoercionExpr {
                            kind: Int,
                            expr: Dec(
                                Dec {
                                    whole: "27",
                                    fract: None,
                                    exp: Some(
                                        Exp {
                                            is_neg: true,
                                            digits: "1",
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "2",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Term(
                        Term {
                            lhs: Term(
                                Term {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Sub,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Sub,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Term(
                        Term {
                            lhs: Var(
                                "x",
                            ),
                            op: Sub,
                            rhs: Term(
                                Term {
                                    lhs: Var(
                                        "y",
                                    ),
                                    op: Sub,
                                    rhs: Var(
                                        "z",
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Term(
                        Term {
                            lhs: Term(
                                Term {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Sub,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Sub,
                            rhs: Term(
                                Term {
                                    lhs: Var(
                                        "z",
                                    ),
                                    op: Sub,
                                    rhs: Var(
                                        "x",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Term(
                        Term {
                            lhs: Term(
                                Term {
                                    lhs: Var(
                                        "x",
                                    ),
                                    op: Sub,
                                    rhs: Var(
                                        "y",
                                    ),
                                },
                            ),
                            op: Sub,
                            rhs: Var(
                                "z",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Term(
                        Term {
                            lhs: Term(
                                Term {
                                    lhs: Term(
                                        Term {
                                            lhs: Term(
                                                Term {
                                                    lhs: Var(
                                                        "x",
                                                    ),
                                                    op: Add,
                                                    rhs: Var(
                                                        "y",
                                                    ),
                                                },
                                            ),
                                            op: Sub,
                                            rhs: Var(
                                                "z",
                                            ),
                                        },
                                    ),
                                    op: Sub,
                                    rhs: Var(
                                        "x",
                                    ),
                                },
                            ),
                            op: Add,
                            rhs: Var(
                                "y",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Term(
                        Term {
                            lhs: Term(
                                Term {
                                    lhs: Term(
                                        Term {
                                            lhs: Term(
                                                Term {
                                                    lhs: Var(
                                                        "x",
                                                    ),
                                                    op: Add,
                                                    rhs: Var(
                                                        "y",
                                                    ),
                                                },
                                            ),
                                            op: Sub,
                                            rhs: Var(
                                                "z",
                                            ),
                                        },
                                    ),
                                    op: Sub,
                                    rhs: Var(
                                        "x",
                                    ),
                                },
                            ),
                            op: Add,
                            rhs: Var(
                                "y",
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Term(
                        Term {
                            lhs: Var(
                                "x",
                            ),
                            op: Add,
                            rhs: Term(
                                Term {
                                    lhs: Var(
                                        "y",
                                    ),
                                    op: Sub,
                                    rhs: Term(
                                        Term {
                                            lhs: Var(
                                                "z",
                                            ),
                                            op: Sub,
                                            rhs: Term(
                                                Term {
                                                    lhs: Var(
                                                        "x",
                                                    ),
                                                    op: Add,
                                                    rhs: Var(
                                                        "y",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Equiv(
                EquivExpr {
                    lhs: Implies(
                        ImpliesExpr {
                            lhs: Var(
                                "P",
                            ),
                            rhs: Implies(
                                ImpliesExpr {
                                    lhs: Var(
                                        "Q",
                                    ),
                                    rhs: Var(
                                        "R",
                                    ),
                                },
                            ),
                        },
                    ),
                    rhs: Implies(
                        ImpliesExpr {
                            lhs: Var(
                                "P",
                            ),
                            rhs: Implies(
                                ImpliesExpr {
                                    lhs: Var(
                                        "Q",
                                    ),
                                    rhs: Var(
                                        "R",
                                    ),
                                },
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Implies(
                        ImpliesExpr {
                            lhs: Implies(
                                ImpliesExpr {
                                    lhs: Var(
                                        "P",
                                    ),
                                    rhs: Var(
                                        "Q",
                                    ),
                                },
                            ),
                            rhs: Implies(
                                ImpliesExpr {
                                    lhs: Var(
                                        "R",
                                    ),
                                    rhs: Var(
                                        "P",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: Eq,
                    rhs: Implies(
                        ImpliesExpr {
                            lhs: Implies(
                                ImpliesExpr {
                                    lhs: Var(
                                        "P",
                                    ),
                                    rhs: Var(
                                        "Q",
                                    ),
                                },
                            ),
                            rhs: Var(
                                "R",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Equiv(
                EquivExpr {
                    lhs: Equiv(
                        EquivExpr {
                            lhs: Var(
                                "P",
                            ),
                            rhs: Var(
                                "Q",
                            ),
                        },
                    ),
                    rhs: Var(
                        "R",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Equiv(
                EquivExpr {
                    lhs: Equiv(
                        EquivExpr {
                            lhs: Implies(
                                ImpliesExpr {
                                    lhs: Var(
                                        "P",
                                    ),
                                    rhs: Var(
                                        "Q",
                                    ),
                                },
                            ),
                            rhs: Implies(
                                ImpliesExpr {
                                    lhs: Var(
                                        "Q",
                                    ),
                                    rhs: Var(
                                        "R",
                                    ),
                                },
                            ),
                        },
                    ),
                    rhs: Implies(
                        ImpliesExpr {
                            lhs: Var(
                                "R",
                            ),
                            rhs: Var(
                                "P",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Logical(
                LogicalExpr {
                    lhs: Logical(
                        LogicalExpr {
                            lhs: Var(
                                "P",
                            ),
                            op: And,
                            rhs: Var(
                                "Q",
                            ),
                        },
                    ),
                    op: Or,
                    rhs: Logical(
                        LogicalExpr {
                            lhs: Var(
                                "Q",
                            ),
                            op: And,
                            rhs: Var(
                                "R",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Logical(
                LogicalExpr {
                    lhs: Logical(
                        LogicalExpr {
                            lhs: Var(
                                "P",
                            ),
                            op: Or,
                            rhs: Var(
                                "Q",
                            ),
                        },
                    ),
                    op: And,
                    rhs: Logical(
                        LogicalExpr {
                            lhs: Var(
                                "Q",
                            ),
                            op: Or,
                            rhs: Var(
                                "R",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Logical(
                LogicalExpr {
                    lhs: Logical(
                        LogicalExpr {
                            lhs: Var(
                                "P",
                            ),
                            op: Or,
                            rhs: Var(
                                "Q",
                            ),
                        },
                    ),
                    op: Or,
                    rhs: Logical(
                        LogicalExpr {
                            lhs: Var(
                                "Q",
                            ),
                            op: Or,
                            rhs: Var(
                                "R",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Logical(
                LogicalExpr {
                    lhs: Logical(
                        LogicalExpr {
                            lhs: Var(
                                "P",
                            ),
                            op: And,
                            rhs: Var(
                                "Q",
                            ),
                        },
                    ),
                    op: And,
                    rhs: Logical(
                        LogicalExpr {
                            lhs: Var(
                                "Q",
                            ),
                            op: And,
                            rhs: Var(
                                "R",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "f",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "xname",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "hello",
                                            },
                                        ),
                                    ],
                                },
                            ),
                            Attr(
                                AttrContent {
                                    ident: "weight",
                                    params: [
                                        Expr(
                                            Nat(
                                                "5",
                                            ),
                                        ),
                                    ],
                                },
                            ),
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "f",
                                            args: [
                                                Term(
                                                    Term {
                                                        lhs: Var(
                                                            "x",
                                                        ),
                                                        op: Add,
                                                        rhs: Var(
                                                            "x",
                                                        ),
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                            Attr(
                                AttrContent {
                                    ident: "ValueFunc",
                                    params: [
                                        Expr(
                                            FuncCall(
                                                FuncCall {
                                                    target: "f",
                                                    args: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "x",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            ),
                            Trigger(
                                [
                                    Factor(
                                        Factor {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "f",
                                                    args: [
                                                        Var(
                                                            "x",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Mul,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "f",
                                                    args: [
                                                        Var(
                                                            "x",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                ],
                            ),
                            Attr(
                                AttrContent {
                                    ident: "nopats",
                                    params: [
                                        Expr(
                                            FuncCall(
                                                FuncCall {
                                                    target: "f",
                                                    args: [
                                                        Term(
                                                            Term {
                                                                lhs: Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "x",
                                                                        ),
                                                                        op: Add,
                                                                        rhs: Var(
                                                                            "x",
                                                                        ),
                                                                    },
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "x",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ],
                        expr: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "f",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "f",
                                                    args: [
                                                        Var(
                                                            "x",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Lt,
                                rhs: Nat(
                                    "200",
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
]

[Printed]
const x: int;

const y: int;

const z: int;

const r: real;

const s: real;

const t: real;

const P: bool;

const Q: bool;

const R: bool;

axiom x * (y + z) == x + y * z;

axiom x * y + z == (x + y) * z;

axiom x * y * z == x * (y * z);

axiom x * y * (z * x) == x * y * z;

axiom x div y div z == x div (y div z);

axiom x div y div (z div x) == x div y div z;

axiom x + y mod z == y mod z + x;

axiom (x + y) mod z == x mod z + y mod z;

axiom x / y / z == x / (y / z);

axiom x / y / (z / x) == x / y / z;

axiom x / s / z == x / (s / z);

axiom x / s / (z / x) == x / s / z;

axiom r / s / t == r / (s / t);

axiom r / s / (t / r) == r / s / t;

axiom r * s / t == r * s / t;

axiom r / s * t == r / s * t;

axiom (r * s) ** t == r ** t * s ** t;

axiom r ** (s + t) == r ** s * r ** t;

axiom int(real(x)) == x;

axiom r >= 0.0 ==> real(int(r)) <= r;

axiom int(0e-3 - 0.02) == 0;

axiom int(0e2 - 3.5e1) == -35;

axiom int(27e-1) == 2;

axiom x - y - z == x - (y - z);

axiom x - y - (z - x) == x - y - z;

axiom x + y - z - x + y == 0;

axiom x + y - z - x + y == x + (y - (z - (x + y)));

axiom P ==> Q ==> R <==> P ==> Q ==> R;

axiom ((P ==> Q) ==> R ==> P) == ((P ==> Q) ==> R);

axiom P <==> Q <==> R;

axiom P ==> Q <==> Q ==> R <==> R ==> P;

axiom (P && Q) || (Q && R);

axiom (P || Q) && (Q || R);

axiom P || Q || (Q || R);

axiom P && Q && (Q && R);

function f(int): int;

axiom (forall x: int :: {:xname "hello"} {:weight 5} {f(x + x)} {:ValueFunc f(x + 1)} {f(x) * f(x)} {:nopats f(x + x + x)} f(f(x)) < 200);

[Input - ../../vendor/boogie/Test/test0/PrettyPrint.bpl]
// RUN: %boogie -pretty:0 -noVerify -printInstrumented "%s" > "%t"
// RUN: %diff "%s.expect" "%t"
const x: int;
const y: int;
const z: int;
const r: real;
const s: real;
const t: real;
const P: bool;
const Q: bool;
const R: bool;

axiom x * (y + z) == x + (y * z);
axiom (x * y) + z == (x + y) * z;

axiom x * y * z == (x * (y * z));
axiom (x * y) * (z * x) == (x * y) * z;

axiom x div y div z == (x div (y div z));
axiom (x div y) div (z div x) == (x div y) div z;

axiom x + y mod z == ((y mod z) + x);
axiom (x + y) mod z == (x mod z) + (y mod z);

axiom x / y / z == (x / (y / z));
axiom (x / y) / (z / x) == (x / y) / z;
axiom x / s / z == (x / (s / z));
axiom (x / s) / (z / x) == (x / s) / z;
axiom r / s / t == (r / (s / t));
axiom (r / s) / (t / r) == (r / s) / t;

axiom ((r * s) / t) == r * s / t;
axiom ((r / s) * t) == (r / s) * t;

axiom (r * s) ** t == (r ** t) * (s ** t);
axiom r ** (s + t) == r ** s * r ** t;

axiom int(real(x)) == x;
axiom r >= 0.0 ==> real(int(r)) <= r;
axiom int(0e-3 - 0.02) == 0;
axiom int(0e2 - 3.5e1) == -35;
axiom int(27e-1) == 2;

axiom x - y - z == (x - (y - z));
axiom (x - y) - (z - x) == (x - y) - z;

axiom x + y - z - x + y == 0;
axiom ((((x + y) - z) - x) + y) == (x + (y - (z - (x + y))));

axiom P ==> Q ==> R <==> (P ==> (Q ==> R));
axiom ((P ==> Q) ==> (R ==> P)) == ((P ==> Q) ==> R);

axiom P <==> Q <==> R;
axiom P ==> Q <==> Q ==> R <==> R ==> P;

axiom (P && Q) || (Q && R);
axiom (P || Q) && (Q || R);
axiom (P || Q) || (Q || R);
axiom (P && Q) && (Q && R);

// -------------- quantifier key-value decorations

function f(int) returns (int);

axiom (forall x: int :: {:xname "hello"}
              {  :weight 5} {f(x+x)}   {:ValueFunc f(x+1)  }  {f(x)*f(x)} {:nopats f(x+x+x)}
         f(f(x)) < 200);
