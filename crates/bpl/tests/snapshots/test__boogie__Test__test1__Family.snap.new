---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "T",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "Heap",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [
                                    "x",
                                ],
                                keys: [
                                    App(
                                        TypeApp {
                                            head: "ref",
                                            tail: None,
                                        },
                                    ),
                                    App(
                                        TypeApp {
                                            head: "Field",
                                            tail: Some(
                                                App(
                                                    TypeApp {
                                                        head: "x",
                                                        tail: None,
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                ],
                                value: App(
                                    TypeApp {
                                        head: "x",
                                        tail: None,
                                    },
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "IsHeap",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Map(
                        MapType {
                            type_params: [
                                "x",
                            ],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                                App(
                                    TypeApp {
                                        head: "Field",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "x",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "x",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "alloc",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            AtomApp(
                                TypeApp {
                                    head: Bool,
                                    tail: None,
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "C.x",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            AtomApp(
                                TypeApp {
                                    head: Int,
                                    tail: None,
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "h",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [
                                                    "x",
                                                ],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                    App(
                                                        TypeApp {
                                                            head: "Field",
                                                            tail: Some(
                                                                App(
                                                                    TypeApp {
                                                                        head: "x",
                                                                        tail: None,
                                                                    },
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                ],
                                                value: App(
                                                    TypeApp {
                                                        head: "x",
                                                        tail: None,
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Field",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "IsHeap",
                                                args: [
                                                    Var(
                                                        "h",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: And,
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "o",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                rhs: Array(
                                    ArrayExpr {
                                        expr: Var(
                                            "h",
                                        ),
                                        subscripts: [
                                            ArraySubscript {
                                                keys: [
                                                    Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "h",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "o",
                                                                        ),
                                                                        Var(
                                                                            "f",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    Var(
                                                        "alloc",
                                                    ),
                                                ],
                                                value: None,
                                            },
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "P",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "this",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "r",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "Heap",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "start",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "r",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "Heap",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "this",
                                                            ),
                                                            Var(
                                                                "C.x",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                    Var(
                                                        "C.x",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "r",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "R",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "this",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "Heap",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "field",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "any",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "refField",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Field",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "yField",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Field",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "y",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "anyField",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Field",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "any",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "b",
                                        ],
                                        type_: Atom(
                                            Bool,
                                        ),
                                    },
                                    where_: None,
                                },
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "a",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "any",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "start",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "b",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "Heap",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "this",
                                                            ),
                                                            Var(
                                                                "C.x",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                    Var(
                                                        "C.x",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                    Var(
                                                        "refField",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "this",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                    Var(
                                                        "yField",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "2",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                    Var(
                                                        "field",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "a",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                    Var(
                                                        "field",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "b",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                    Var(
                                                        "anyField",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "a",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                    Var(
                                                        "anyField",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "b",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                    Var(
                                                        "anyField",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "anyField",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                    Var(
                                                        "anyField",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "yField",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                    Var(
                                                        "anyField",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "field",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "Field",
                    type_params: [
                        "a",
                    ],
                    type_: None,
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "y",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "ref",
                    type_params: [],
                    type_: None,
                },
                TypeDecl {
                    ident: "any",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "null",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
]

[Printed]
type T;

var Heap: <x>[ref, Field x]x;

function IsHeap(<x>[ref, Field x]x): bool;

const alloc: Field bool;

const C.x: Field int;

axiom (forall h: <x>[ref, Field x]x, f: Field ref, o: ref :: IsHeap(h) && o != null ==> h[h[o, f], alloc]);

procedure P(this: ref) returns (r: int)
  modifies Heap;
{
  start:
  r := Heap[this, C.x];
  Heap[this, C.x] := r;
  return;
}

procedure R(this: ref)
  modifies Heap;
{
  var field: any, refField: Field ref, yField: Field y, anyField: Field any;
  var b: bool, a: any;

  start:
  b := Heap[this, C.x];
  Heap[this, C.x] := true;
  Heap[this, refField] := this;
  Heap[this, yField] := 2;
  Heap[this, field] := a;
  Heap[this, field] := b;
  Heap[this, anyField] := a;
  Heap[this, anyField] := b;
  Heap[this, anyField] := anyField;
  Heap[this, anyField] := yField;
  Heap[this, anyField] := field;
  return;
}

type Field a;

type y;

type ref,
  any;

const null: ref;

[Input - ../../vendor/boogie/Test/test1/Family.bpl]
// RUN: %boogie -noVerify "%s" > "%t"
// RUN: %diff "%s.expect" "%t"
type T;

var Heap: <x>[ref,Field x]x;

function IsHeap(<x>[ref,Field x]x) returns (bool);

const alloc: Field bool;
const C.x: Field int;

axiom (forall h: <x>[ref,Field x]x, f: Field ref, o: ref :: IsHeap(h) && o != null ==> h[h[o,f], alloc]);

procedure P(this: ref) returns (r: int)
  modifies Heap;
{
  start:
    r := Heap[this, C.x];
    Heap[this, C.x] := r;
    return;
}

// -----------------

procedure R(this: ref)
  modifies Heap;
{
  var field: any, refField: Field ref, yField: Field y, anyField: Field any;
  var b: bool, a: any;

  start:
    b := Heap[this, C.x];     // type error
    Heap[this, C.x] := true;  // type error
    Heap[this, refField] := this;
    Heap[this, yField] := 2;  // type error
    Heap[this, field] := a;   // type error
    Heap[this, field] := b;   // type error
    Heap[this, anyField] := a;
    Heap[this, anyField] := b;
    Heap[this, anyField] := anyField;
    Heap[this, anyField] := yField;
    Heap[this, anyField] := field;
    return;
}

type Field a;
type y;
type ref, any;
const null : ref;
