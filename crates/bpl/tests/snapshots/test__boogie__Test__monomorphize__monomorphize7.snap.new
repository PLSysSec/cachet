---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "$Box",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: App(
                        TypeApp {
                            head: "$Value",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "$Value",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "x",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "$Box_int",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "$Value",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$Integer",
                        args: [
                            Var(
                                "x",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "$Box_bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: Atom(
                        Bool,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "$Value",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$Boolean",
                        args: [
                            Var(
                                "x",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "$Box_addr",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "$Value",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$Address",
                        args: [
                            Var(
                                "x",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "$Box_vec",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Vec",
                            tail: Some(
                                App(
                                    TypeApp {
                                        head: "$Value",
                                        tail: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "$Value",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$Vector",
                        args: [
                            Var(
                                "x",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "$Unbox",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: App(
                        TypeApp {
                            head: "$Value",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "$Value",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "x",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "$Unbox_int",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: App(
                        TypeApp {
                            head: "$Value",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "i#$Integer",
                        args: [
                            Var(
                                "x",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "$Unbox_bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: App(
                        TypeApp {
                            head: "$Value",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "b#$Boolean",
                        args: [
                            Var(
                                "x",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "$Unbox_addr",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: App(
                        TypeApp {
                            head: "$Value",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "a#$Address",
                        args: [
                            Var(
                                "x",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "$Unbox_vec",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: App(
                        TypeApp {
                            head: "$Value",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "Vec",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "$Value",
                                    tail: None,
                                },
                            ),
                        ),
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "v#$Vector",
                        args: [
                            Var(
                                "x",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Type(
        TypeDecls {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "datatype",
                        params: [],
                    },
                ),
            ],
            decls: [
                TypeDecl {
                    ident: "$Value",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "$Boolean",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "b",
                    ),
                    type_: Atom(
                        Bool,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "$Value",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "$Integer",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "$Value",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "$Address",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "a",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "$Value",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "$Vector",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "v",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Vec",
                            tail: Some(
                                App(
                                    TypeApp {
                                        head: "$Value",
                                        tail: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "$Value",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "$Error",
            type_params: [],
            var_params: [],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "$Value",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "p",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "$Unbox_vec",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "$Box_vec",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Vec_Empty",
                                                                            args: [],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Vec_Empty",
                                                    args: [],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
function {:inline} $Box(x: $Value): $Value {
  x
}

function {:inline} $Box_int(x: int): $Value {
  $Integer(x)
}

function {:inline} $Box_bool(x: bool): $Value {
  $Boolean(x)
}

function {:inline} $Box_addr(x: int): $Value {
  $Address(x)
}

function {:inline} $Box_vec(x: Vec $Value): $Value {
  $Vector(x)
}

function {:inline} $Unbox(x: $Value): $Value {
  x
}

function {:inline} $Unbox_int(x: $Value): int {
  i#$Integer(x)
}

function {:inline} $Unbox_bool(x: $Value): bool {
  b#$Boolean(x)
}

function {:inline} $Unbox_addr(x: $Value): int {
  a#$Address(x)
}

function {:inline} $Unbox_vec(x: $Value): Vec $Value {
  v#$Vector(x)
}

type {:datatype} $Value;

function {:constructor} $Boolean(b: bool): $Value;

function {:constructor} $Integer(i: int): $Value;

function {:constructor} $Address(a: int): $Value;

function {:constructor} $Vector(v: Vec $Value): $Value;

function {:constructor} $Error(): $Value;

procedure p() {
  assert $Unbox_vec($Box_vec(Vec_Empty())) == Vec_Empty();
}

[Input - ../../vendor/boogie/Test/monomorphize/monomorphize7.bpl]
// RUN: %boogie -lib "%s" > "%t"
// RUN: %diff "%s.expect" "%t"

function {:inline} $Box(x: $Value): $Value {
    x
}
function {:inline} $Box_int(x: int): $Value {
    $Integer(x)
}
function {:inline} $Box_bool(x: bool): $Value {
    $Boolean(x)
}
function {:inline} $Box_addr(x: int): $Value {
    $Address(x)
}
function {:inline} $Box_vec(x: Vec $Value): $Value {
    $Vector(x)
}

function {:inline} $Unbox(x: $Value): $Value {
    x
}
function {:inline} $Unbox_int(x: $Value): int {
    i#$Integer(x)
}
function {:inline} $Unbox_bool(x: $Value): bool {
    b#$Boolean(x)
}
function {:inline} $Unbox_addr(x: $Value): int {
    a#$Address(x)
}
function {:inline} $Unbox_vec(x: $Value): Vec $Value {
    v#$Vector(x)
}

type {:datatype} $Value;
function {:constructor} $Boolean(b: bool): $Value;
function {:constructor} $Integer(i: int): $Value;
function {:constructor} $Address(a: int): $Value;
function {:constructor} $Vector(v: Vec $Value): $Value;
function {:constructor} $Error(): $Value;

procedure p() {
    assert $Unbox_vec($Box_vec(Vec_Empty())) == Vec_Empty();
}
