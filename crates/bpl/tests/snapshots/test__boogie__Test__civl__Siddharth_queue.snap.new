---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "Method",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "Invoc",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "SeqInvoc",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Seq_append",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "s",
                    ),
                    type_: App(
                        TypeApp {
                            head: "SeqInvoc",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "o",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Invoc",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: Some(
                    "t",
                ),
                type_: App(
                    TypeApp {
                        head: "SeqInvoc",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "SetInvoc",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Set_ofSeq",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "q",
                    ),
                    type_: App(
                        TypeApp {
                            head: "SeqInvoc",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: Some(
                    "s",
                ),
                type_: App(
                    TypeApp {
                        head: "SetInvoc",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Var(
        VarDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "layer",
                        params: [
                            Expr(
                                Nat(
                                    "1",
                                ),
                            ),
                            Expr(
                                Nat(
                                    "2",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "lin",
                        ],
                        type_: App(
                            TypeApp {
                                head: "SeqInvoc",
                                tail: None,
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "layer",
                        params: [
                            Expr(
                                Nat(
                                    "1",
                                ),
                            ),
                            Expr(
                                Nat(
                                    "2",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "vis",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [],
                                keys: [
                                    App(
                                        TypeApp {
                                            head: "Invoc",
                                            tail: None,
                                        },
                                    ),
                                ],
                                value: App(
                                    TypeApp {
                                        head: "SetInvoc",
                                        tail: None,
                                    },
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "Ref",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "Key",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "intro",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "intro_readLin",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "s",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "SetInvoc",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "s",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Set_ofSeq",
                                                args: [
                                                    Var(
                                                        "lin",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "intro",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "intro_write_vis",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "n",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Invoc",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "s",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "SetInvoc",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "vis",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "vis",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "n",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "s",
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "intro",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "intro_writeLin",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "n",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Invoc",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "lin",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "lin",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Seq_append",
                                                args: [
                                                    Var(
                                                        "lin",
                                                    ),
                                                    Var(
                                                        "n",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "pop_atomic",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "this",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Invoc",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "k",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Key",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "lin",
                            "vis",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "my_vis",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "SetInvoc",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "lin",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Seq_append",
                                                args: [
                                                    Var(
                                                        "lin",
                                                    ),
                                                    Var(
                                                        "this",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "my_vis",
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Set_ofSeq",
                                                    args: [
                                                        Var(
                                                            "lin",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "vis",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "this",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "my_vis",
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "pop_atomic",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "pop",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "this",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Invoc",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "k",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Key",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [
                                Attr(
                                    AttrContent {
                                        ident: "layer",
                                        params: [
                                            Expr(
                                                Nat(
                                                    "1",
                                                ),
                                            ),
                                        ],
                                    },
                                ),
                            ],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "my_vis",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "SetInvoc",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "intro_writeLin",
                                        params: [
                                            Var(
                                                "this",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "my_vis",
                                        ],
                                        target: "intro_readLin",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "intro_write_vis",
                                        params: [
                                            Var(
                                                "this",
                                            ),
                                            Var(
                                                "my_vis",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "layer",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "my_vis",
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "Set_ofSeq",
                                                    args: [
                                                        Var(
                                                            "lin",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
type Method;

type Invoc;

type SeqInvoc;

function Seq_append(s: SeqInvoc, o: Invoc) returns (t: SeqInvoc);

type SetInvoc;

function Set_ofSeq(q: SeqInvoc) returns (s: SetInvoc);

var {:layer 1, 2} lin: SeqInvoc;

var {:layer 1, 2} vis: [Invoc]SetInvoc;

type Ref;

type Key;

procedure {:intro} {:layer 1} intro_readLin() returns (s: SetInvoc) {
  s := Set_ofSeq(lin);
}

procedure {:intro} {:layer 1} intro_write_vis(n: Invoc, s: SetInvoc)
  modifies vis;
{
  vis[n] := s;
}

procedure {:intro} {:layer 1} intro_writeLin(n: Invoc)
  modifies lin;
{
  lin := Seq_append(lin, n);
}

procedure {:atomic} {:layer 2} pop_atomic(this: Invoc) returns (k: Key)
  modifies lin, vis;
{
  var my_vis: SetInvoc;

  lin := Seq_append(lin, this);
  assume my_vis == Set_ofSeq(lin);
  vis[this] := my_vis;
}

procedure {:yields} {:layer 1} {:refines "pop_atomic"} pop(this: Invoc) returns (k: Key) {
  var {:layer 1} my_vis: SetInvoc;

  call intro_writeLin(this);
  call my_vis := intro_readLin();
  call intro_write_vis(this, my_vis);
  assert {:layer 1} my_vis == Set_ofSeq(lin);
}

[Input - ../../vendor/boogie/Test/civl/Siddharth-queue.bpl]
// RUN: %boogie "%s" > "%t"
// RUN: %diff "%s.expect" "%t"
type Method;

type Invoc;

// Sequences of invocations
type SeqInvoc;
function Seq_append(s: SeqInvoc, o: Invoc) returns (t: SeqInvoc);

// Sets of invocations
type SetInvoc;
function Set_ofSeq(q: SeqInvoc) returns (s: SetInvoc);


var {:layer 1,2} lin: SeqInvoc;
var {:layer 1,2} vis: [Invoc]SetInvoc;

type Ref;
type Key;

// ---------- Primitives for manipulating logical/abstract state

procedure {:intro} {:layer 1} intro_readLin() returns (s: SetInvoc)
{
  s := Set_ofSeq(lin);
}

procedure {:intro} {:layer 1} intro_write_vis(n: Invoc, s: SetInvoc)
  modifies vis;
{
  vis[n] := s;
}

procedure {:intro} {:layer 1} intro_writeLin(n: Invoc)
  modifies lin;
{
  lin := Seq_append(lin, n);
}

// ---------- Specification program:

procedure {:atomic} {:layer 2} pop_atomic(this: Invoc) returns (k: Key)
  modifies lin, vis;
{
  var my_vis: SetInvoc;
  lin := Seq_append(lin, this);
  assume my_vis == Set_ofSeq(lin);
  // buggy transition relation computation due to assume after assignment to lin which
  // creates difference between lin and old(lin)
  vis[this] := my_vis;
}

// ---------- Implementation:

procedure {:yields} {:layer 1} {:refines "pop_atomic"} pop(this: Invoc)
  returns (k: Key)
{
  var {:layer 1} my_vis: SetInvoc;

  call intro_writeLin(this);
  call my_vis := intro_readLin();
  call intro_write_vis(this, my_vis);
  assert {:layer 1} my_vis == Set_ofSeq(lin);  // Despite this assertion passing
}
