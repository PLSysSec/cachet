---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i1",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i5",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i6",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i8",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i16",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i24",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i32",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i40",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i48",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i56",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i64",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i80",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i88",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i96",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i128",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i160",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "i256",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "ref",
                    type_params: [],
                    type_: Some(
                        App(
                            TypeApp {
                                head: "i64",
                                tail: None,
                            },
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "float",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "$0",
                ],
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "$0",
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "$1",
                ],
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "$1",
                    ),
                    op: Eq,
                    rhs: Nat(
                        "1",
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "$0.ref",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "$0.ref",
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "$1.ref",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "$1.ref",
                    ),
                    op: Eq,
                    rhs: Nat(
                        "1",
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "$1024.ref",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "$1024.ref",
                    ),
                    op: Eq,
                    rhs: Nat(
                        "1024",
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "$GLOBALS_BOTTOM",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "$EXTERNS_BOTTOM",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "$MALLOC_TOP",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "$M.0",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [],
                                keys: [
                                    App(
                                        TypeApp {
                                            head: "ref",
                                            tail: None,
                                        },
                                    ),
                                ],
                                value: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "$M.1",
                        ],
                        type_: App(
                            TypeApp {
                                head: "ref",
                                tail: None,
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "$M.2",
                        ],
                        type_: App(
                            TypeApp {
                                head: "i32",
                                tail: None,
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "$GLOBALS_BOTTOM",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "47475",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "$EXTERNS_BOTTOM",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$add.ref",
                            args: [
                                Var(
                                    "$GLOBALS_BOTTOM",
                                ),
                                FuncCall(
                                    FuncCall {
                                        target: "$sub.ref",
                                        args: [
                                            Nat(
                                                "0",
                                            ),
                                            Nat(
                                                "32768",
                                            ),
                                        ],
                                    },
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "$MALLOC_TOP",
                    ),
                    op: Eq,
                    rhs: Nat(
                        "9223372036854775807",
                    ),
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$isExternal",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$slt.ref.bool",
                        args: [
                            Var(
                                "p",
                            ),
                            Var(
                                "$EXTERNS_BOTTOM",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "(_ int2bv 64)",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$int2bv.64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "bv64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "bv2nat",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$bv2int.64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "bv64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Add,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "i1",
                        ),
                        op: Sub,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Factor(
                    Factor {
                        lhs: Var(
                            "i1",
                        ),
                        op: Mul,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$sdiv.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "mod",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$smod.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "div",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "$udiv.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i1.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i1",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i1.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i1",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i1",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i1",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i1",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i1",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i5.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i5",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i5.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i5",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i5",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i5",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i5",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i5",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i6.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i6",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i6.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i6",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i6",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i6",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i6",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i6",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i8.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i8",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i8.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i8",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i8",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i8",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i8",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i8",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i16.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i16",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i16.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i16",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i16",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i16",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i16",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i16",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i24.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i24",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i24.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i24",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i24",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i24",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i24",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i24",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i32.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i32",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i32.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i32",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i32",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i32",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i32",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i32",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i40.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i40",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i40.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i40",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i40",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i40",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i40",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i40",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i48.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i48",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i48.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i48",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i48",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i48",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i48",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i48",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i56.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i56",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i56.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i56",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i56",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i56",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i56",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i56",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i64.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i64",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i64.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i64",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i64",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i64",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i64",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i64",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i80.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i80",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i80.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i80",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i80",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i80",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i80",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i80",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i88.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i88",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i88.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i88",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i88",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i88",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i88",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i88",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i96.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i96",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i96.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i96",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i96",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i96",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i96",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i96",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i128.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i128",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i128.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i128",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i128",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i128",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i128",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i128",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i160.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i160",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i160.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i160",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i160",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i160",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i160",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i160",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$srem.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Logical(
                            LogicalExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "$ne.i256.bool",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "$smod.i256",
                                                    args: [
                                                        Var(
                                                            "i1",
                                                        ),
                                                        Var(
                                                            "i2",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "$slt.i256.bool",
                                        args: [
                                            Var(
                                                "i1",
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "$sub.i256",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "$smod.i256",
                                            args: [
                                                Var(
                                                    "i1",
                                                ),
                                                Var(
                                                    "i2",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "$smax.i256",
                                            args: [
                                                Var(
                                                    "i2",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "$sub.i256",
                                                        args: [
                                                            Nat(
                                                                "0",
                                                            ),
                                                            Var(
                                                                "i2",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "$smod.i256",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i1",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i5",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i6",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i8",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i16",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i24",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i32",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i40",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i48",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i56",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i64",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i80",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i88",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i96",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i128",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i160",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$urem.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$smod.i256",
                        args: [
                            Var(
                                "i1",
                            ),
                            Var(
                                "i2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$shl.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$lshr.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ashr.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$and.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$or.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$xor.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$nand.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$not.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smin.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$smax.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umin.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i2",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$umax.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i2",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i1",
                                ),
                            },
                        ),
                        then: Var(
                            "i1",
                        ),
                        else_: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$and.i1",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "0",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$or.i1",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "0",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$xor.i1",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "0",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$and.i1",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "1",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$or.i1",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "1",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "1",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$xor.i1",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "1",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "1",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$and.i1",
                            args: [
                                Nat(
                                    "1",
                                ),
                                Nat(
                                    "0",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$or.i1",
                            args: [
                                Nat(
                                    "1",
                                ),
                                Nat(
                                    "0",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "1",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$xor.i1",
                            args: [
                                Nat(
                                    "1",
                                ),
                                Nat(
                                    "0",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "1",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$and.i1",
                            args: [
                                Nat(
                                    "1",
                                ),
                                Nat(
                                    "1",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "1",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$or.i1",
                            args: [
                                Nat(
                                    "1",
                                ),
                                Nat(
                                    "1",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "1",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$xor.i1",
                            args: [
                                Nat(
                                    "1",
                                ),
                                Nat(
                                    "1",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "$and.i32",
                            args: [
                                Nat(
                                    "32",
                                ),
                                Nat(
                                    "16",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i1.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i1.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i5.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i5.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i6.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i6.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i8.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i8.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i16.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i16.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i24.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i24.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i32.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i32.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i40.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i40.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i48.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i48.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i56.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i56.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i64.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i64.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i80.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i80.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i88.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i88.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i96.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i96.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i128.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i128.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i160.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i160.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i256.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i256.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i1.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i1.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i5.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i5.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i6.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i6.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i8.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i8.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i16.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i16.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i24.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i24.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i32.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i32.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i40.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i40.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i48.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i48.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i56.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i56.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i64.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i64.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i80.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i80.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i88.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i88.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i96.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i96.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i128.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i128.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i160.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i160.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i256.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i256.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i1.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i1.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i5.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i5.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i6.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i6.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i8.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i8.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i16.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i16.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i24.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i24.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i32.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i32.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i40.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i40.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i48.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i48.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i56.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i56.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i64.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i64.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i80.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i80.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i88.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i88.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i96.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i96.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i128.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i128.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i160.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i160.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i256.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i256.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i1.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i1.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i5.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i5.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i6.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i6.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i8.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i8.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i16.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i16.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i24.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i24.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i32.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i32.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i40.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i40.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i48.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i48.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i56.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i56.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i64.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i64.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i80.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i80.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i88.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i88.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i96.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i96.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i128.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i128.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i160.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i160.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i256.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i256.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i1.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i1.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i5.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i5.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i6.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i6.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i8.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i8.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i16.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i16.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i24.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i24.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i32.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i32.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i40.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i40.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i48.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i48.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i56.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i56.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i64.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i64.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i80.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i80.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i88.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i88.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i96.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i96.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i128.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i128.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i160.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i160.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i256.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Le,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i256.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i1.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i1.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i5.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i5.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i6.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i6.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i8.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i8.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i16.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i16.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i24.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i24.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i32.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i32.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i40.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i40.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i48.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i48.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i56.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i56.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i64.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i64.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i80.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i80.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i88.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i88.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i96.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i96.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i128.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i128.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i160.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i160.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i256.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Lt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i256.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i1.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i1.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i5.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i5.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i6.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i6.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i8.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i8.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i16.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i16.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i24.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i24.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i32.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i32.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i40.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i40.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i48.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i48.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i56.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i56.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i64.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i64.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i80.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i80.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i88.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i88.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i96.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i96.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i128.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i128.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i160.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i160.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i256.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Ge,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i256.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i1.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i1.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i5.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i5.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i6.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i6.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i8.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i8.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i16.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i16.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i24.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i24.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i32.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i32.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i40.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i40.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i48.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i48.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i56.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i56.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i64.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i64.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i80.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i80.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i88.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i88.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i96.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i96.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i128.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i128.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i160.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i160.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i256.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Gt,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i256.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i1.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i1.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i5.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i5.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i6.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i6.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i8.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i8.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i16.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i16.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i24.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i24.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i32.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i32.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i40.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i40.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i48.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i48.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i56.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i56.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i64.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i64.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i80.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i80.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i88.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i88.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i96.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i96.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i128.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i128.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i160.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i160.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i256.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Eq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i256.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i1.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i1.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i5.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i5.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i6.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i6.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i8.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i8.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i16.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i16.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i24.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i24.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i32.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i32.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i40.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i40.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i48.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i48.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i56.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i56.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i64.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i64.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i80.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i80.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i88.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i88.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i96.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i96.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i128.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i128.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i160.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i160.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i256.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "i1",
                        ),
                        op: Neq,
                        rhs: Var(
                            "i2",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i256.bool",
                                args: [
                                    Var(
                                        "i1",
                                    ),
                                    Var(
                                        "i2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i1",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i1",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i1",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i5",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i5",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i5",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i6",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i6",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i6",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i8",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i8",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i8",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i16",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i16",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i16",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i24",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i24",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i24",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i32",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i32",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i32",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i40",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i40",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i40",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i48",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i48",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i48",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i56",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i56",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i56",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i64",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i64",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i64",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i80",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i80",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i80",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i88",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i88",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i88",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i96",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i96",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i96",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i128",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i128",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i128",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i160",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i160",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i160",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i256",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i256",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i256",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i5.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i6.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i8.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i16.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i24.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i32.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i40.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i48.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i56.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i64.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i80.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i6.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i8.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i16.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i24.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i32.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i40.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i48.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i56.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i64.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i80.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i8.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i16.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i24.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i32.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i40.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i48.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i56.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i64.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i80.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i16.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i24.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i32.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i40.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i48.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i56.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i64.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i80.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i24.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i32.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i40.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i48.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i56.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i64.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i80.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i32.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i40.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i48.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i56.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i64.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i80.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i40.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i48.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i56.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i64.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i80.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i48.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i56.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i64.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i80.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i56.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i64.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i80.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i64.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i80.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i80.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i88.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i96.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i128.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i160.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$trunc.i256.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i1.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i5.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i6.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i8.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i16.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i24.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i24.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i24.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i24.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i24.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i24.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i24.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i24.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i24.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i24.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i24.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i32.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i32.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i32.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i32.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i32.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i32.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i32.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i32.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i32.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i32.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i40.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i40.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i40.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i40.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i40.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i40.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i40.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i40.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i40.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i48.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i48.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i48.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i48.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i48.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i48.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i48.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i48.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i56.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i56.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i56.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i56.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i56.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i56.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i56.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i64.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i64.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i64.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i64.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i64.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i64.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i80.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i80.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i80.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i80.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i80.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i88.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i88.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i88.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i88.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i96.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i96.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i96.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i128.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i128.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sext.i160.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i1.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i5.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i6.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i8.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i16.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i24.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i24.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i24.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i24.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i24.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i24.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i24.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i24.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i24.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i24.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i24.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i32.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i32.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i32.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i32.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i32.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i32.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i32.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i32.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i32.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i32.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i40.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i40.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i40.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i40.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i40.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i40.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i40.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i40.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i40.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i48.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i48.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i48.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i48.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i48.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i48.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i48.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i48.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i56.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i56.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i56.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i56.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i56.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i56.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i56.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i64.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i64.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i64.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i64.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i64.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i64.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i80.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i80.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i80.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i80.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i80.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i88.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i88.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i88.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i88.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i96.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i96.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i96.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i128.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i128.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$zext.i160.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$add.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$add.i64",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sub.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$sub.i64",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$mul.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$mul.i64",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$eq.i64.bool",
                                args: [
                                    Var(
                                        "p1",
                                    ),
                                    Var(
                                        "p2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$eq.ref.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$eq.i64.bool",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ne.i64.bool",
                                args: [
                                    Var(
                                        "p1",
                                    ),
                                    Var(
                                        "p2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ne.ref.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$ne.i64.bool",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ugt.i64.bool",
                                args: [
                                    Var(
                                        "p1",
                                    ),
                                    Var(
                                        "p2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ugt.ref.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$ugt.i64.bool",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$uge.i64.bool",
                                args: [
                                    Var(
                                        "p1",
                                    ),
                                    Var(
                                        "p2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$uge.ref.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$uge.i64.bool",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ult.i64.bool",
                                args: [
                                    Var(
                                        "p1",
                                    ),
                                    Var(
                                        "p2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ult.ref.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$ult.i64.bool",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$ule.i64.bool",
                                args: [
                                    Var(
                                        "p1",
                                    ),
                                    Var(
                                        "p2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$ule.ref.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$ule.i64.bool",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sgt.i64.bool",
                                args: [
                                    Var(
                                        "p1",
                                    ),
                                    Var(
                                        "p2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sgt.ref.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$sgt.i64.bool",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sge.i64.bool",
                                args: [
                                    Var(
                                        "p1",
                                    ),
                                    Var(
                                        "p2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sge.ref.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$sge.i64.bool",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$slt.i64.bool",
                                args: [
                                    Var(
                                        "p1",
                                    ),
                                    Var(
                                        "p2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$slt.ref.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$slt.i64.bool",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: FuncCall(
                            FuncCall {
                                target: "$sle.i64.bool",
                                args: [
                                    Var(
                                        "p1",
                                    ),
                                    Var(
                                        "p2",
                                    ),
                                ],
                            },
                        ),
                        then: Nat(
                            "1",
                        ),
                        else_: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$sle.ref.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$sle.i64.bool",
                        args: [
                            Var(
                                "p1",
                            ),
                            Var(
                                "p2",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "ref",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "i",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$bitcast.ref.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "p",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$p2i.ref.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$trunc.i64.i8",
                        args: [
                            Var(
                                "p",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$i2p.i8.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$zext.i8.i64",
                        args: [
                            Var(
                                "i",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$p2i.ref.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$trunc.i64.i16",
                        args: [
                            Var(
                                "p",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$i2p.i16.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$zext.i16.i64",
                        args: [
                            Var(
                                "i",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$p2i.ref.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$trunc.i64.i32",
                        args: [
                            Var(
                                "p",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$i2p.i32.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$zext.i32.i64",
                        args: [
                            Var(
                                "i",
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$p2i.ref.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "p",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$i2p.i64.ref",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Var(
                    "i",
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "ipart",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "fpart",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "epart",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$abs.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$round.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$sqrt.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fadd.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fsub.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fmul.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fdiv.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$frem.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$min.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$max.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fma.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f3",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$foeq.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fole.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$folt.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$foge.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fogt.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fone.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ford.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fueq.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fugt.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fuge.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fult.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fule.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fune.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$funo.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ffalse.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ftrue.float.bool",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$bitcast.float.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$bitcast.float.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$bitcast.float.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$bitcast.float.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$bitcast.float.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$bitcast.i8.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$bitcast.i16.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$bitcast.i32.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$bitcast.i64.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$bitcast.i80.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2si.float.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i1",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i1",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i5",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i5",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i6",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i6",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i8",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i16",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i16",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i24",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i24",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i32",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i40",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i40",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i48",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i48",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i56",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i56",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i64",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i80",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i80",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i88",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i88",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i96",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i96",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i128",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i128",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i160",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i160",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fp2ui.float.i256",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "i256",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i1.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i5.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i6.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i8.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i16.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i24.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i32.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i40.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i48.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i56.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i64.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i80.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i88.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i96.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i128.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i160.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$si2fp.i256.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i1.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i1",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i5.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i5",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i6.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i6",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i8.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i16.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i16",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i24.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i24",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i32.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i40.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i40",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i48.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i48",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i56.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i56",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i64.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i80.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i80",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i88.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i88",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i96.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i96",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i128.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i128",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i160.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i160",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$ui2fp.i256.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: App(
                        TypeApp {
                            head: "i256",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fpext.float.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$fptrunc.float.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "float",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: None,
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "float",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "float",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    Var(
                                        "f",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$load.unsafe.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i8",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "$bitcast.i8.float",
                        args: [
                            Array(
                                ArrayExpr {
                                    expr: Var(
                                        "M",
                                    ),
                                    subscripts: [
                                        ArraySubscript {
                                            keys: [
                                                Var(
                                                    "p",
                                                ),
                                            ],
                                            value: None,
                                        },
                                    ],
                                },
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "define",
                        params: [],
                    },
                ),
            ],
            ident: "$store.unsafe.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "M",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: App(
                                TypeApp {
                                    head: "i8",
                                    tail: None,
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f",
                    ),
                    type_: App(
                        TypeApp {
                            head: "float",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: App(
                            TypeApp {
                                head: "i8",
                                tail: None,
                            },
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: Var(
                            "M",
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "p",
                                    ),
                                ],
                                value: Some(
                                    FuncCall(
                                        FuncCall {
                                            target: "$bitcast.float.i8",
                                            args: [
                                                Var(
                                                    "f",
                                                ),
                                            ],
                                        },
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "$extractvalue.float",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "count",
                        params: [
                            Expr(
                                Nat(
                                    "14",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    ".str.2",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        ".str.2",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "1038",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "env_value_str",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "env_value_str",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "2070",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "count",
                        params: [
                            Expr(
                                Nat(
                                    "3",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    ".str.1.3",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        ".str.1.3",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "3097",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "count",
                        params: [
                            Expr(
                                Nat(
                                    "14",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    ".str.20",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        ".str.20",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "4135",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "errno_global",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "errno_global",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "5163",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "resetArray",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "resetArray",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "6195",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "resetArray",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$p0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i2",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i1",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i3",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i64",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p4",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i5",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb0",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "16",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "8",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "16",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "8",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i1",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "0",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb1",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb1",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "16",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "17",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i2",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$slt.i32",
                                                args: [
                                                    Var(
                                                        "$i1",
                                                    ),
                                                    Nat(
                                                        "10",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "16",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "branchcond",
                                                params: [
                                                    Expr(
                                                        Var(
                                                            "$i2",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb2",
                                        "$bb3",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb2",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "$i2",
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "17",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i3",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$sext.i32.i64",
                                                args: [
                                                    Var(
                                                        "$i1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "17",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$p4",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$add.ref",
                                                args: [
                                                    Var(
                                                        "$p0",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "$mul.ref",
                                                            args: [
                                                                Var(
                                                                    "$i3",
                                                                ),
                                                                Nat(
                                                                    "4",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "17",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "14",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$M.0",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$store.i32",
                                                args: [
                                                    Var(
                                                        "$M.0",
                                                    ),
                                                    Var(
                                                        "$p4",
                                                    ),
                                                    Nat(
                                                        "0",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "18",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb4",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb3",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Neg(
                                        NegExpr {
                                            op: Logical,
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "$i2",
                                                    ),
                                                    op: Eq,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "19",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$exn",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb4",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "16",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i5",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$add.i32",
                                                args: [
                                                    Var(
                                                        "$i1",
                                                    ),
                                                    Nat(
                                                        "1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "cexpr",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "i",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "boogie_si_record_i32",
                                        params: [
                                            Var(
                                                "$i5",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "16",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i1",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "$i5",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb1",
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "setArray",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "setArray",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "7227",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "setArray",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$p0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i2",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i1",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i3",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i64",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p4",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i5",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb0",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "24",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "8",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "24",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "8",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i1",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "0",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb1",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb1",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "24",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "17",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i2",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$slt.i32",
                                                args: [
                                                    Var(
                                                        "$i1",
                                                    ),
                                                    Nat(
                                                        "10",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "24",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "branchcond",
                                                params: [
                                                    Expr(
                                                        Var(
                                                            "$i2",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb2",
                                        "$bb3",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb2",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "$i2",
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "25",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i3",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$sext.i32.i64",
                                                args: [
                                                    Var(
                                                        "$i1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "25",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$p4",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$add.ref",
                                                args: [
                                                    Var(
                                                        "$p0",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "$mul.ref",
                                                            args: [
                                                                Var(
                                                                    "$i3",
                                                                ),
                                                                Nat(
                                                                    "4",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "25",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "14",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$M.0",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$store.i32",
                                                args: [
                                                    Var(
                                                        "$M.0",
                                                    ),
                                                    Var(
                                                        "$p4",
                                                    ),
                                                    Nat(
                                                        "1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "26",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb4",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb3",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Neg(
                                        NegExpr {
                                            op: Logical,
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "$i2",
                                                    ),
                                                    op: Eq,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "27",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$exn",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb4",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "24",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i5",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$add.i32",
                                                args: [
                                                    Var(
                                                        "$i1",
                                                    ),
                                                    Nat(
                                                        "1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "cexpr",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "i",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "boogie_si_record_i32",
                                        params: [
                                            Var(
                                                "$i5",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "24",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i1",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "$i5",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb1",
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "main",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "main",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "8259",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "entrypoint",
                            params: [],
                        },
                    ),
                ],
                ident: "main",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p0",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p2",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p3",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i4",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i5",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i1",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i6",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i64",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p7",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i8",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i9",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i1",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i10",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i64",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p11",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i12",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i13",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i1",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i14",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i15",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i16",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i1",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i17",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i64",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p18",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i19",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i20",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i1",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i21",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i64",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p22",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i23",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i24",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i1",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$i25",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "i32",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p26",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "$p27",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb0",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "$initialize",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "31",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "26",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "cexpr",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "smack:entry:main",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "boogie_si_record_ref",
                                        params: [
                                            Var(
                                                "main",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "31",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "26",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "$p0",
                                        ],
                                        target: "malloc",
                                        params: [
                                            Nat(
                                                "40",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "31",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "19",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$p1",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$bitcast.ref.ref",
                                                args: [
                                                    Var(
                                                        "$p0",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "32",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "26",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "$p2",
                                        ],
                                        target: "malloc",
                                        params: [
                                            Nat(
                                                "40",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "32",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "19",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$p3",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$bitcast.ref.ref",
                                                args: [
                                                    Var(
                                                        "$p2",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "34",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "resetArray",
                                        params: [
                                            Var(
                                                "$p1",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "35",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "setArray",
                                        params: [
                                            Var(
                                                "$p3",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "37",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "8",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i4",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "0",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb1",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb1",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "37",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "17",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i5",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$slt.i32",
                                                args: [
                                                    Var(
                                                        "$i4",
                                                    ),
                                                    Nat(
                                                        "10",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "37",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "branchcond",
                                                params: [
                                                    Expr(
                                                        Var(
                                                            "$i5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb2",
                                        "$bb3",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb2",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "$i5",
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "38",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb4",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb3",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Neg(
                                        NegExpr {
                                            op: Logical,
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "$i5",
                                                    ),
                                                    op: Eq,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "42",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "setArray",
                                        params: [
                                            Var(
                                                "$p1",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "43",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "resetArray",
                                        params: [
                                            Var(
                                                "$p3",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "45",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "8",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i15",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "0",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb15",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb4",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "38",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i6",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$sext.i32.i64",
                                                args: [
                                                    Var(
                                                        "$i4",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "38",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$p7",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$add.ref",
                                                args: [
                                                    Var(
                                                        "$p1",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "$mul.ref",
                                                            args: [
                                                                Var(
                                                                    "$i6",
                                                                ),
                                                                Nat(
                                                                    "4",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "38",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i8",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$load.i32",
                                                args: [
                                                    Var(
                                                        "$M.0",
                                                    ),
                                                    Var(
                                                        "$p7",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "38",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i9",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$eq.i32",
                                                args: [
                                                    Var(
                                                        "$i8",
                                                    ),
                                                    Nat(
                                                        "0",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "38",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "branchcond",
                                                params: [
                                                    Expr(
                                                        Var(
                                                            "$i9",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb5",
                                        "$bb7",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb5",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "38",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "$i9",
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb6",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb6",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "38",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb8",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb7",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Neg(
                                        NegExpr {
                                            op: Logical,
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "$i9",
                                                    ),
                                                    op: Eq,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "38",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "__VERIFIER_assert",
                                        params: [
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "38",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb6",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb8",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "39",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb9",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb9",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "39",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i10",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$sext.i32.i64",
                                                args: [
                                                    Var(
                                                        "$i4",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "39",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$p11",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$add.ref",
                                                args: [
                                                    Var(
                                                        "$p3",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "$mul.ref",
                                                            args: [
                                                                Var(
                                                                    "$i10",
                                                                ),
                                                                Nat(
                                                                    "4",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "39",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i12",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$load.i32",
                                                args: [
                                                    Var(
                                                        "$M.0",
                                                    ),
                                                    Var(
                                                        "$p11",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "39",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i13",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$eq.i32",
                                                args: [
                                                    Var(
                                                        "$i12",
                                                    ),
                                                    Nat(
                                                        "1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "39",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "branchcond",
                                                params: [
                                                    Expr(
                                                        Var(
                                                            "$i13",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb10",
                                        "$bb12",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb10",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "39",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "$i13",
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb11",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb11",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "39",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb13",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb12",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Neg(
                                        NegExpr {
                                            op: Logical,
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "$i13",
                                                    ),
                                                    op: Eq,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "39",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "__VERIFIER_assert",
                                        params: [
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "39",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb11",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb13",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "40",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb14",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb14",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "37",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i14",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$add.i32",
                                                args: [
                                                    Var(
                                                        "$i4",
                                                    ),
                                                    Nat(
                                                        "1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "cexpr",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "i",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "boogie_si_record_i32",
                                        params: [
                                            Var(
                                                "$i14",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "37",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i4",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "$i14",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb1",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb15",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "45",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "17",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i16",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$slt.i32",
                                                args: [
                                                    Var(
                                                        "$i15",
                                                    ),
                                                    Nat(
                                                        "10",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "45",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "branchcond",
                                                params: [
                                                    Expr(
                                                        Var(
                                                            "$i16",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb16",
                                        "$bb17",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb16",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "$i16",
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "46",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb18",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb17",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Neg(
                                        NegExpr {
                                            op: Logical,
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "$i16",
                                                    ),
                                                    op: Eq,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "50",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "8",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$p26",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$bitcast.ref.ref",
                                                args: [
                                                    Var(
                                                        "$p1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "50",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "free_",
                                        params: [
                                            Var(
                                                "$p26",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "51",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "8",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$p27",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$bitcast.ref.ref",
                                                args: [
                                                    Var(
                                                        "$p3",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "51",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "free_",
                                        params: [
                                            Var(
                                                "$p27",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "52",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$r",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "0",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$exn",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb18",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "46",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i17",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$sext.i32.i64",
                                                args: [
                                                    Var(
                                                        "$i15",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "46",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$p18",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$add.ref",
                                                args: [
                                                    Var(
                                                        "$p1",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "$mul.ref",
                                                            args: [
                                                                Var(
                                                                    "$i17",
                                                                ),
                                                                Nat(
                                                                    "4",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "46",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i19",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$load.i32",
                                                args: [
                                                    Var(
                                                        "$M.0",
                                                    ),
                                                    Var(
                                                        "$p18",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "46",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i20",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$eq.i32",
                                                args: [
                                                    Var(
                                                        "$i19",
                                                    ),
                                                    Nat(
                                                        "1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "46",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "branchcond",
                                                params: [
                                                    Expr(
                                                        Var(
                                                            "$i20",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb19",
                                        "$bb21",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb19",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "46",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "$i20",
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb20",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb20",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "46",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb22",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb21",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Neg(
                                        NegExpr {
                                            op: Logical,
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "$i20",
                                                    ),
                                                    op: Eq,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "46",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "__VERIFIER_assert",
                                        params: [
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "46",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb20",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb22",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "47",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb23",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb23",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "47",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i21",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$sext.i32.i64",
                                                args: [
                                                    Var(
                                                        "$i15",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "47",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$p22",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$add.ref",
                                                args: [
                                                    Var(
                                                        "$p3",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "$mul.ref",
                                                            args: [
                                                                Var(
                                                                    "$i21",
                                                                ),
                                                                Nat(
                                                                    "4",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "47",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i23",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$load.i32",
                                                args: [
                                                    Var(
                                                        "$M.0",
                                                    ),
                                                    Var(
                                                        "$p22",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "47",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i24",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$eq.i32",
                                                args: [
                                                    Var(
                                                        "$i23",
                                                    ),
                                                    Nat(
                                                        "0",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "47",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "branchcond",
                                                params: [
                                                    Expr(
                                                        Var(
                                                            "$i24",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb24",
                                        "$bb26",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb24",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "47",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "$i24",
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb25",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb25",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "47",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb27",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb26",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Neg(
                                        NegExpr {
                                            op: Logical,
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "$i24",
                                                    ),
                                                    op: Eq,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "47",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "__VERIFIER_assert",
                                        params: [
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "47",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "5",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb25",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb27",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "48",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb28",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb28",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "45",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i25",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "$add.i32",
                                                args: [
                                                    Var(
                                                        "$i15",
                                                    ),
                                                    Nat(
                                                        "1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "cexpr",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "i",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "boogie_si_record_i32",
                                        params: [
                                            Var(
                                                "$i25",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "two_arrays.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "45",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$i15",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "$i25",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Goto(
                                GotoCmd {
                                    labels: [
                                        "$bb15",
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "malloc",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "malloc",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "9291",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "malloc",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$i0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "$r",
                                        ],
                                        target: "$malloc",
                                        params: [
                                            Var(
                                                "$i0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "free_",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "free_",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "10323",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "free_",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$p0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "$free",
                                        params: [
                                            Var(
                                                "$p0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__VERIFIER_assume",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__VERIFIER_assume",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "11355",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__VERIFIER_assume",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$i0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb0",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "258",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "cexpr",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "__VERIFIER_assume:arg:x",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "boogie_si_record_i32",
                                        params: [
                                            Var(
                                                "$i0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "258",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "38",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "$i0",
                                            ),
                                            op: Neq,
                                            rhs: Var(
                                                "$0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "39",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$exn",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_code",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_code",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "12387",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_code.ref",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$p0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_code.ref.i32",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$p0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "p.1",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_dummy",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_dummy",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "13419",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_dummy",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$i0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb0",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "258",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "cexpr",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "__SMACK_dummy:arg:v",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "boogie_si_record_i32",
                                        params: [
                                            Var(
                                                "$i0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "258",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "258",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "59",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$exn",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__VERIFIER_assert",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__VERIFIER_assert",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "14451",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__VERIFIER_assert",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$i0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb0",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "258",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "cexpr",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "__VERIFIER_assert:arg:x",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "boogie_si_record_i32",
                                        params: [
                                            Var(
                                                "$i0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "258",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "45",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "$i0",
                                            ),
                                            op: Neq,
                                            rhs: Var(
                                                "$0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "47",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$exn",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_check_overflow",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_check_overflow",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "15483",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_check_overflow",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$i0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb0",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "258",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "cexpr",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "__SMACK_check_overflow:arg:flag",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "boogie_si_record_i32",
                                        params: [
                                            Var(
                                                "$i0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "258",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "29",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "63",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "overflow",
                                                params: [],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "$i0",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "$0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "64",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$exn",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_char",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_char",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "16515",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_char",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i8",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_signed_char",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_signed_char",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "17547",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_signed_char",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i8",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_unsigned_char",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_unsigned_char",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "18579",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_unsigned_char",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i8",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_short",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_short",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "19611",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_short",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i16",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_signed_short",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_signed_short",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "20643",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_signed_short",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i16",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_signed_short_int",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_signed_short_int",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "21675",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_signed_short_int",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i16",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_unsigned_short",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_unsigned_short",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "22707",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_unsigned_short",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i16",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_unsigned_short_int",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_unsigned_short_int",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "23739",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_unsigned_short_int",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i16",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_int",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_int",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "24771",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_int",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_signed_int",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_signed_int",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "25803",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_signed_int",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_unsigned",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_unsigned",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "26835",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_unsigned",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_unsigned_int",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_unsigned_int",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "27867",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_unsigned_int",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_long",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_long",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "28899",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_long",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_long_int",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_long_int",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "29931",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_long_int",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_signed_long",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_signed_long",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "30963",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_signed_long",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_signed_long_int",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_signed_long_int",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "31995",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_signed_long_int",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_unsigned_long",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_unsigned_long",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "33027",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_unsigned_long",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_unsigned_long_int",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_unsigned_long_int",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "34059",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_unsigned_long_int",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_long_long",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_long_long",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "35091",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_long_long",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_long_long_int",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_long_long_int",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "36123",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_long_long_int",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_signed_long_long",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_signed_long_long",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "37155",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_signed_long_long",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_signed_long_long_int",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_signed_long_long_int",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "38187",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_signed_long_long_int",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_unsigned_long_long",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_unsigned_long_long",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "39219",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_unsigned_long_long",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_nondet_unsigned_long_long_int",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_nondet_unsigned_long_long_int",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "40251",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_nondet_unsigned_long_long_int",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i64",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_decls",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_decls",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "41283",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "$mop",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "boogie_si_record_mop",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "m",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "$mop",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "$MOP",
                ],
                type_: App(
                    TypeApp {
                        head: "$mop",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "$exn",
                        ],
                        type_: Atom(
                            Bool,
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "$exnv",
                        ],
                        type_: Atom(
                            Int,
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "corral_atomic_begin",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "corral_atomic_end",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "$alloc",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "n",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "p",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "corral_atomic_begin",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "p",
                                        ],
                                        target: "$$alloc",
                                        params: [
                                            Var(
                                                "n",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "corral_atomic_end",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "$malloc",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "n",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "p",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "corral_atomic_begin",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "p",
                                        ],
                                        target: "$$alloc",
                                        params: [
                                            Var(
                                                "n",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "corral_atomic_end",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "$CurrAddr",
                        ],
                        type_: App(
                            TypeApp {
                                head: "ref",
                                tail: None,
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "$$alloc",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "n",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "p",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "$CurrAddr",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "$sge.ref.bool",
                                            args: [
                                                Var(
                                                    "n",
                                                ),
                                                Var(
                                                    "$0.ref",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        FuncCall(
                                            FuncCall {
                                                target: "$sgt.ref.bool",
                                                args: [
                                                    Var(
                                                        "n",
                                                    ),
                                                    Var(
                                                        "$0.ref",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "p",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "$CurrAddr",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "$CurrAddr",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "$sge.ref.bool",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "$sub.ref",
                                                                        args: [
                                                                            Var(
                                                                                "$CurrAddr",
                                                                            ),
                                                                            Var(
                                                                                "n",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Var(
                                                                    "p",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: Logical(
                                                        LogicalExpr {
                                                            lhs: FuncCall(
                                                                FuncCall {
                                                                    target: "$sgt.ref.bool",
                                                                    args: [
                                                                        Var(
                                                                            "$CurrAddr",
                                                                        ),
                                                                        Var(
                                                                            "$0.ref",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: FuncCall(
                                                                FuncCall {
                                                                    target: "$slt.ref.bool",
                                                                    args: [
                                                                        Var(
                                                                            "$CurrAddr",
                                                                        ),
                                                                        Var(
                                                                            "$MALLOC_TOP",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "p",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Var(
                                                                    "$0.ref",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "$free",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "p",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_top_decl",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_top_decl",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "42315",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_top_decl.ref",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$p0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_init_func_memory_model",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_init_func_memory_model",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "43347",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_init_func_memory_model",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb0",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "539",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "539",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "3",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$CurrAddr",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "$1024.ref",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "544",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$exn",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__VERIFIER_atomic_begin",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__VERIFIER_atomic_begin",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "44379",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__VERIFIER_atomic_begin",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb0",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "546",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "34",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "546",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "34",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "corral_atomic_begin",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "546",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "79",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$exn",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__VERIFIER_atomic_end",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__VERIFIER_atomic_end",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "45411",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__VERIFIER_atomic_end",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb0",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "548",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "32",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "548",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "32",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "corral_atomic_end",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "sourceloc",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "/usr/local/share/smack/lib/smack.c",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "548",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "75",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "verifier.code",
                                                params: [
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: BoolLit(
                                        true,
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$exn",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "llvm.dbg.value",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "llvm.dbg.value",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "46443",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "llvm.dbg.value",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$p0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$p1",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "$p2",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "__SMACK_static_init",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "__SMACK_static_init",
                    ),
                    op: Eq,
                    rhs: FuncCall(
                        FuncCall {
                            target: "$sub.ref",
                            args: [
                                Nat(
                                    "0",
                                ),
                                Nat(
                                    "47475",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "__SMACK_static_init",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "$bb0",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$M.1",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            ".str.1.3",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$M.2",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "0",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "cexpr",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "errno_global",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "boogie_si_record_i32",
                                        params: [
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "$exn",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "boogie_si_record_i32",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "x",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "i32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "boogie_si_record_ref",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "x",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "inline",
                            params: [
                                Expr(
                                    Nat(
                                        "11",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "$initialize",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "__SMACK_static_init",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "__SMACK_init_func_memory_model",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
type i1 = int;

type i5 = int;

type i6 = int;

type i8 = int;

type i16 = int;

type i24 = int;

type i32 = int;

type i40 = int;

type i48 = int;

type i56 = int;

type i64 = int;

type i80 = int;

type i88 = int;

type i96 = int;

type i128 = int;

type i160 = int;

type i256 = int;

type ref = i64;

type float;

const $0: i32;

axiom $0 == 0;

const $1: i32;

axiom $1 == 1;

const $0.ref: ref;

axiom $0.ref == 0;

const $1.ref: ref;

axiom $1.ref == 1;

const $1024.ref: ref;

axiom $1024.ref == 1024;

const $GLOBALS_BOTTOM: ref;

const $EXTERNS_BOTTOM: ref;

const $MALLOC_TOP: ref;

var $M.0: [ref]i32;

var $M.1: ref;

var $M.2: i32;

axiom $GLOBALS_BOTTOM == $sub.ref(0, 47475);

axiom $EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32768));

axiom $MALLOC_TOP == 9223372036854775807;

function {:define} $isExternal(p: ref): bool {
  $slt.ref.bool(p, $EXTERNS_BOTTOM)
}

function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64): bv64;

function {:builtin "bv2nat"} $bv2int.64(i: bv64): i64;

function {:define} $add.i1(i1: i1, i2: i1): i1 {
  i1 + i2
}

function {:define} $add.i5(i1: i5, i2: i5): i5 {
  i1 + i2
}

function {:define} $add.i6(i1: i6, i2: i6): i6 {
  i1 + i2
}

function {:define} $add.i8(i1: i8, i2: i8): i8 {
  i1 + i2
}

function {:define} $add.i16(i1: i16, i2: i16): i16 {
  i1 + i2
}

function {:define} $add.i24(i1: i24, i2: i24): i24 {
  i1 + i2
}

function {:define} $add.i32(i1: i32, i2: i32): i32 {
  i1 + i2
}

function {:define} $add.i40(i1: i40, i2: i40): i40 {
  i1 + i2
}

function {:define} $add.i48(i1: i48, i2: i48): i48 {
  i1 + i2
}

function {:define} $add.i56(i1: i56, i2: i56): i56 {
  i1 + i2
}

function {:define} $add.i64(i1: i64, i2: i64): i64 {
  i1 + i2
}

function {:define} $add.i80(i1: i80, i2: i80): i80 {
  i1 + i2
}

function {:define} $add.i88(i1: i88, i2: i88): i88 {
  i1 + i2
}

function {:define} $add.i96(i1: i96, i2: i96): i96 {
  i1 + i2
}

function {:define} $add.i128(i1: i128, i2: i128): i128 {
  i1 + i2
}

function {:define} $add.i160(i1: i160, i2: i160): i160 {
  i1 + i2
}

function {:define} $add.i256(i1: i256, i2: i256): i256 {
  i1 + i2
}

function {:define} $sub.i1(i1: i1, i2: i1): i1 {
  i1 - i2
}

function {:define} $sub.i5(i1: i5, i2: i5): i5 {
  i1 - i2
}

function {:define} $sub.i6(i1: i6, i2: i6): i6 {
  i1 - i2
}

function {:define} $sub.i8(i1: i8, i2: i8): i8 {
  i1 - i2
}

function {:define} $sub.i16(i1: i16, i2: i16): i16 {
  i1 - i2
}

function {:define} $sub.i24(i1: i24, i2: i24): i24 {
  i1 - i2
}

function {:define} $sub.i32(i1: i32, i2: i32): i32 {
  i1 - i2
}

function {:define} $sub.i40(i1: i40, i2: i40): i40 {
  i1 - i2
}

function {:define} $sub.i48(i1: i48, i2: i48): i48 {
  i1 - i2
}

function {:define} $sub.i56(i1: i56, i2: i56): i56 {
  i1 - i2
}

function {:define} $sub.i64(i1: i64, i2: i64): i64 {
  i1 - i2
}

function {:define} $sub.i80(i1: i80, i2: i80): i80 {
  i1 - i2
}

function {:define} $sub.i88(i1: i88, i2: i88): i88 {
  i1 - i2
}

function {:define} $sub.i96(i1: i96, i2: i96): i96 {
  i1 - i2
}

function {:define} $sub.i128(i1: i128, i2: i128): i128 {
  i1 - i2
}

function {:define} $sub.i160(i1: i160, i2: i160): i160 {
  i1 - i2
}

function {:define} $sub.i256(i1: i256, i2: i256): i256 {
  i1 - i2
}

function {:define} $mul.i1(i1: i1, i2: i1): i1 {
  i1 * i2
}

function {:define} $mul.i5(i1: i5, i2: i5): i5 {
  i1 * i2
}

function {:define} $mul.i6(i1: i6, i2: i6): i6 {
  i1 * i2
}

function {:define} $mul.i8(i1: i8, i2: i8): i8 {
  i1 * i2
}

function {:define} $mul.i16(i1: i16, i2: i16): i16 {
  i1 * i2
}

function {:define} $mul.i24(i1: i24, i2: i24): i24 {
  i1 * i2
}

function {:define} $mul.i32(i1: i32, i2: i32): i32 {
  i1 * i2
}

function {:define} $mul.i40(i1: i40, i2: i40): i40 {
  i1 * i2
}

function {:define} $mul.i48(i1: i48, i2: i48): i48 {
  i1 * i2
}

function {:define} $mul.i56(i1: i56, i2: i56): i56 {
  i1 * i2
}

function {:define} $mul.i64(i1: i64, i2: i64): i64 {
  i1 * i2
}

function {:define} $mul.i80(i1: i80, i2: i80): i80 {
  i1 * i2
}

function {:define} $mul.i88(i1: i88, i2: i88): i88 {
  i1 * i2
}

function {:define} $mul.i96(i1: i96, i2: i96): i96 {
  i1 * i2
}

function {:define} $mul.i128(i1: i128, i2: i128): i128 {
  i1 * i2
}

function {:define} $mul.i160(i1: i160, i2: i160): i160 {
  i1 * i2
}

function {:define} $mul.i256(i1: i256, i2: i256): i256 {
  i1 * i2
}

function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1): i1;

function {:builtin "div"} $sdiv.i5(i1: i5, i2: i5): i5;

function {:builtin "div"} $sdiv.i6(i1: i6, i2: i6): i6;

function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8): i8;

function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16): i16;

function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24): i24;

function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32): i32;

function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40): i40;

function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48): i48;

function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56): i56;

function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64): i64;

function {:builtin "div"} $sdiv.i80(i1: i80, i2: i80): i80;

function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88): i88;

function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96): i96;

function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128): i128;

function {:builtin "div"} $sdiv.i160(i1: i160, i2: i160): i160;

function {:builtin "div"} $sdiv.i256(i1: i256, i2: i256): i256;

function {:builtin "mod"} $smod.i1(i1: i1, i2: i1): i1;

function {:builtin "mod"} $smod.i5(i1: i5, i2: i5): i5;

function {:builtin "mod"} $smod.i6(i1: i6, i2: i6): i6;

function {:builtin "mod"} $smod.i8(i1: i8, i2: i8): i8;

function {:builtin "mod"} $smod.i16(i1: i16, i2: i16): i16;

function {:builtin "mod"} $smod.i24(i1: i24, i2: i24): i24;

function {:builtin "mod"} $smod.i32(i1: i32, i2: i32): i32;

function {:builtin "mod"} $smod.i40(i1: i40, i2: i40): i40;

function {:builtin "mod"} $smod.i48(i1: i48, i2: i48): i48;

function {:builtin "mod"} $smod.i56(i1: i56, i2: i56): i56;

function {:builtin "mod"} $smod.i64(i1: i64, i2: i64): i64;

function {:builtin "mod"} $smod.i80(i1: i80, i2: i80): i80;

function {:builtin "mod"} $smod.i88(i1: i88, i2: i88): i88;

function {:builtin "mod"} $smod.i96(i1: i96, i2: i96): i96;

function {:builtin "mod"} $smod.i128(i1: i128, i2: i128): i128;

function {:builtin "mod"} $smod.i160(i1: i160, i2: i160): i160;

function {:builtin "mod"} $smod.i256(i1: i256, i2: i256): i256;

function {:builtin "div"} $udiv.i1(i1: i1, i2: i1): i1;

function {:builtin "div"} $udiv.i5(i1: i5, i2: i5): i5;

function {:builtin "div"} $udiv.i6(i1: i6, i2: i6): i6;

function {:builtin "div"} $udiv.i8(i1: i8, i2: i8): i8;

function {:builtin "div"} $udiv.i16(i1: i16, i2: i16): i16;

function {:builtin "div"} $udiv.i24(i1: i24, i2: i24): i24;

function {:builtin "div"} $udiv.i32(i1: i32, i2: i32): i32;

function {:builtin "div"} $udiv.i40(i1: i40, i2: i40): i40;

function {:builtin "div"} $udiv.i48(i1: i48, i2: i48): i48;

function {:builtin "div"} $udiv.i56(i1: i56, i2: i56): i56;

function {:builtin "div"} $udiv.i64(i1: i64, i2: i64): i64;

function {:builtin "div"} $udiv.i80(i1: i80, i2: i80): i80;

function {:builtin "div"} $udiv.i88(i1: i88, i2: i88): i88;

function {:builtin "div"} $udiv.i96(i1: i96, i2: i96): i96;

function {:builtin "div"} $udiv.i128(i1: i128, i2: i128): i128;

function {:builtin "div"} $udiv.i160(i1: i160, i2: i160): i160;

function {:builtin "div"} $udiv.i256(i1: i256, i2: i256): i256;

function {:define} $srem.i1(i1: i1, i2: i1): i1 {
  if $ne.i1.bool($smod.i1(i1, i2), 0) && $slt.i1.bool(i1, 0) then $sub.i1($smod.i1(i1, i2), $smax.i1(i2, $sub.i1(0, i2))) else $smod.i1(i1, i2)
}

function {:define} $srem.i5(i1: i5, i2: i5): i5 {
  if $ne.i5.bool($smod.i5(i1, i2), 0) && $slt.i5.bool(i1, 0) then $sub.i5($smod.i5(i1, i2), $smax.i5(i2, $sub.i5(0, i2))) else $smod.i5(i1, i2)
}

function {:define} $srem.i6(i1: i6, i2: i6): i6 {
  if $ne.i6.bool($smod.i6(i1, i2), 0) && $slt.i6.bool(i1, 0) then $sub.i6($smod.i6(i1, i2), $smax.i6(i2, $sub.i6(0, i2))) else $smod.i6(i1, i2)
}

function {:define} $srem.i8(i1: i8, i2: i8): i8 {
  if $ne.i8.bool($smod.i8(i1, i2), 0) && $slt.i8.bool(i1, 0) then $sub.i8($smod.i8(i1, i2), $smax.i8(i2, $sub.i8(0, i2))) else $smod.i8(i1, i2)
}

function {:define} $srem.i16(i1: i16, i2: i16): i16 {
  if $ne.i16.bool($smod.i16(i1, i2), 0) && $slt.i16.bool(i1, 0) then $sub.i16($smod.i16(i1, i2), $smax.i16(i2, $sub.i16(0, i2))) else $smod.i16(i1, i2)
}

function {:define} $srem.i24(i1: i24, i2: i24): i24 {
  if $ne.i24.bool($smod.i24(i1, i2), 0) && $slt.i24.bool(i1, 0) then $sub.i24($smod.i24(i1, i2), $smax.i24(i2, $sub.i24(0, i2))) else $smod.i24(i1, i2)
}

function {:define} $srem.i32(i1: i32, i2: i32): i32 {
  if $ne.i32.bool($smod.i32(i1, i2), 0) && $slt.i32.bool(i1, 0) then $sub.i32($smod.i32(i1, i2), $smax.i32(i2, $sub.i32(0, i2))) else $smod.i32(i1, i2)
}

function {:define} $srem.i40(i1: i40, i2: i40): i40 {
  if $ne.i40.bool($smod.i40(i1, i2), 0) && $slt.i40.bool(i1, 0) then $sub.i40($smod.i40(i1, i2), $smax.i40(i2, $sub.i40(0, i2))) else $smod.i40(i1, i2)
}

function {:define} $srem.i48(i1: i48, i2: i48): i48 {
  if $ne.i48.bool($smod.i48(i1, i2), 0) && $slt.i48.bool(i1, 0) then $sub.i48($smod.i48(i1, i2), $smax.i48(i2, $sub.i48(0, i2))) else $smod.i48(i1, i2)
}

function {:define} $srem.i56(i1: i56, i2: i56): i56 {
  if $ne.i56.bool($smod.i56(i1, i2), 0) && $slt.i56.bool(i1, 0) then $sub.i56($smod.i56(i1, i2), $smax.i56(i2, $sub.i56(0, i2))) else $smod.i56(i1, i2)
}

function {:define} $srem.i64(i1: i64, i2: i64): i64 {
  if $ne.i64.bool($smod.i64(i1, i2), 0) && $slt.i64.bool(i1, 0) then $sub.i64($smod.i64(i1, i2), $smax.i64(i2, $sub.i64(0, i2))) else $smod.i64(i1, i2)
}

function {:define} $srem.i80(i1: i80, i2: i80): i80 {
  if $ne.i80.bool($smod.i80(i1, i2), 0) && $slt.i80.bool(i1, 0) then $sub.i80($smod.i80(i1, i2), $smax.i80(i2, $sub.i80(0, i2))) else $smod.i80(i1, i2)
}

function {:define} $srem.i88(i1: i88, i2: i88): i88 {
  if $ne.i88.bool($smod.i88(i1, i2), 0) && $slt.i88.bool(i1, 0) then $sub.i88($smod.i88(i1, i2), $smax.i88(i2, $sub.i88(0, i2))) else $smod.i88(i1, i2)
}

function {:define} $srem.i96(i1: i96, i2: i96): i96 {
  if $ne.i96.bool($smod.i96(i1, i2), 0) && $slt.i96.bool(i1, 0) then $sub.i96($smod.i96(i1, i2), $smax.i96(i2, $sub.i96(0, i2))) else $smod.i96(i1, i2)
}

function {:define} $srem.i128(i1: i128, i2: i128): i128 {
  if $ne.i128.bool($smod.i128(i1, i2), 0) && $slt.i128.bool(i1, 0) then $sub.i128($smod.i128(i1, i2), $smax.i128(i2, $sub.i128(0, i2))) else $smod.i128(i1, i2)
}

function {:define} $srem.i160(i1: i160, i2: i160): i160 {
  if $ne.i160.bool($smod.i160(i1, i2), 0) && $slt.i160.bool(i1, 0) then $sub.i160($smod.i160(i1, i2), $smax.i160(i2, $sub.i160(0, i2))) else $smod.i160(i1, i2)
}

function {:define} $srem.i256(i1: i256, i2: i256): i256 {
  if $ne.i256.bool($smod.i256(i1, i2), 0) && $slt.i256.bool(i1, 0) then $sub.i256($smod.i256(i1, i2), $smax.i256(i2, $sub.i256(0, i2))) else $smod.i256(i1, i2)
}

function {:define} $urem.i1(i1: i1, i2: i1): i1 {
  $smod.i1(i1, i2)
}

function {:define} $urem.i5(i1: i5, i2: i5): i5 {
  $smod.i5(i1, i2)
}

function {:define} $urem.i6(i1: i6, i2: i6): i6 {
  $smod.i6(i1, i2)
}

function {:define} $urem.i8(i1: i8, i2: i8): i8 {
  $smod.i8(i1, i2)
}

function {:define} $urem.i16(i1: i16, i2: i16): i16 {
  $smod.i16(i1, i2)
}

function {:define} $urem.i24(i1: i24, i2: i24): i24 {
  $smod.i24(i1, i2)
}

function {:define} $urem.i32(i1: i32, i2: i32): i32 {
  $smod.i32(i1, i2)
}

function {:define} $urem.i40(i1: i40, i2: i40): i40 {
  $smod.i40(i1, i2)
}

function {:define} $urem.i48(i1: i48, i2: i48): i48 {
  $smod.i48(i1, i2)
}

function {:define} $urem.i56(i1: i56, i2: i56): i56 {
  $smod.i56(i1, i2)
}

function {:define} $urem.i64(i1: i64, i2: i64): i64 {
  $smod.i64(i1, i2)
}

function {:define} $urem.i80(i1: i80, i2: i80): i80 {
  $smod.i80(i1, i2)
}

function {:define} $urem.i88(i1: i88, i2: i88): i88 {
  $smod.i88(i1, i2)
}

function {:define} $urem.i96(i1: i96, i2: i96): i96 {
  $smod.i96(i1, i2)
}

function {:define} $urem.i128(i1: i128, i2: i128): i128 {
  $smod.i128(i1, i2)
}

function {:define} $urem.i160(i1: i160, i2: i160): i160 {
  $smod.i160(i1, i2)
}

function {:define} $urem.i256(i1: i256, i2: i256): i256 {
  $smod.i256(i1, i2)
}

function $shl.i1(i1: i1, i2: i1): i1;

function $shl.i5(i1: i5, i2: i5): i5;

function $shl.i6(i1: i6, i2: i6): i6;

function $shl.i8(i1: i8, i2: i8): i8;

function $shl.i16(i1: i16, i2: i16): i16;

function $shl.i24(i1: i24, i2: i24): i24;

function $shl.i32(i1: i32, i2: i32): i32;

function $shl.i40(i1: i40, i2: i40): i40;

function $shl.i48(i1: i48, i2: i48): i48;

function $shl.i56(i1: i56, i2: i56): i56;

function $shl.i64(i1: i64, i2: i64): i64;

function $shl.i80(i1: i80, i2: i80): i80;

function $shl.i88(i1: i88, i2: i88): i88;

function $shl.i96(i1: i96, i2: i96): i96;

function $shl.i128(i1: i128, i2: i128): i128;

function $shl.i160(i1: i160, i2: i160): i160;

function $shl.i256(i1: i256, i2: i256): i256;

function $lshr.i1(i1: i1, i2: i1): i1;

function $lshr.i5(i1: i5, i2: i5): i5;

function $lshr.i6(i1: i6, i2: i6): i6;

function $lshr.i8(i1: i8, i2: i8): i8;

function $lshr.i16(i1: i16, i2: i16): i16;

function $lshr.i24(i1: i24, i2: i24): i24;

function $lshr.i32(i1: i32, i2: i32): i32;

function $lshr.i40(i1: i40, i2: i40): i40;

function $lshr.i48(i1: i48, i2: i48): i48;

function $lshr.i56(i1: i56, i2: i56): i56;

function $lshr.i64(i1: i64, i2: i64): i64;

function $lshr.i80(i1: i80, i2: i80): i80;

function $lshr.i88(i1: i88, i2: i88): i88;

function $lshr.i96(i1: i96, i2: i96): i96;

function $lshr.i128(i1: i128, i2: i128): i128;

function $lshr.i160(i1: i160, i2: i160): i160;

function $lshr.i256(i1: i256, i2: i256): i256;

function $ashr.i1(i1: i1, i2: i1): i1;

function $ashr.i5(i1: i5, i2: i5): i5;

function $ashr.i6(i1: i6, i2: i6): i6;

function $ashr.i8(i1: i8, i2: i8): i8;

function $ashr.i16(i1: i16, i2: i16): i16;

function $ashr.i24(i1: i24, i2: i24): i24;

function $ashr.i32(i1: i32, i2: i32): i32;

function $ashr.i40(i1: i40, i2: i40): i40;

function $ashr.i48(i1: i48, i2: i48): i48;

function $ashr.i56(i1: i56, i2: i56): i56;

function $ashr.i64(i1: i64, i2: i64): i64;

function $ashr.i80(i1: i80, i2: i80): i80;

function $ashr.i88(i1: i88, i2: i88): i88;

function $ashr.i96(i1: i96, i2: i96): i96;

function $ashr.i128(i1: i128, i2: i128): i128;

function $ashr.i160(i1: i160, i2: i160): i160;

function $ashr.i256(i1: i256, i2: i256): i256;

function $and.i1(i1: i1, i2: i1): i1;

function $and.i5(i1: i5, i2: i5): i5;

function $and.i6(i1: i6, i2: i6): i6;

function $and.i8(i1: i8, i2: i8): i8;

function $and.i16(i1: i16, i2: i16): i16;

function $and.i24(i1: i24, i2: i24): i24;

function $and.i32(i1: i32, i2: i32): i32;

function $and.i40(i1: i40, i2: i40): i40;

function $and.i48(i1: i48, i2: i48): i48;

function $and.i56(i1: i56, i2: i56): i56;

function $and.i64(i1: i64, i2: i64): i64;

function $and.i80(i1: i80, i2: i80): i80;

function $and.i88(i1: i88, i2: i88): i88;

function $and.i96(i1: i96, i2: i96): i96;

function $and.i128(i1: i128, i2: i128): i128;

function $and.i160(i1: i160, i2: i160): i160;

function $and.i256(i1: i256, i2: i256): i256;

function $or.i1(i1: i1, i2: i1): i1;

function $or.i5(i1: i5, i2: i5): i5;

function $or.i6(i1: i6, i2: i6): i6;

function $or.i8(i1: i8, i2: i8): i8;

function $or.i16(i1: i16, i2: i16): i16;

function $or.i24(i1: i24, i2: i24): i24;

function $or.i32(i1: i32, i2: i32): i32;

function $or.i40(i1: i40, i2: i40): i40;

function $or.i48(i1: i48, i2: i48): i48;

function $or.i56(i1: i56, i2: i56): i56;

function $or.i64(i1: i64, i2: i64): i64;

function $or.i80(i1: i80, i2: i80): i80;

function $or.i88(i1: i88, i2: i88): i88;

function $or.i96(i1: i96, i2: i96): i96;

function $or.i128(i1: i128, i2: i128): i128;

function $or.i160(i1: i160, i2: i160): i160;

function $or.i256(i1: i256, i2: i256): i256;

function $xor.i1(i1: i1, i2: i1): i1;

function $xor.i5(i1: i5, i2: i5): i5;

function $xor.i6(i1: i6, i2: i6): i6;

function $xor.i8(i1: i8, i2: i8): i8;

function $xor.i16(i1: i16, i2: i16): i16;

function $xor.i24(i1: i24, i2: i24): i24;

function $xor.i32(i1: i32, i2: i32): i32;

function $xor.i40(i1: i40, i2: i40): i40;

function $xor.i48(i1: i48, i2: i48): i48;

function $xor.i56(i1: i56, i2: i56): i56;

function $xor.i64(i1: i64, i2: i64): i64;

function $xor.i80(i1: i80, i2: i80): i80;

function $xor.i88(i1: i88, i2: i88): i88;

function $xor.i96(i1: i96, i2: i96): i96;

function $xor.i128(i1: i128, i2: i128): i128;

function $xor.i160(i1: i160, i2: i160): i160;

function $xor.i256(i1: i256, i2: i256): i256;

function $nand.i1(i1: i1, i2: i1): i1;

function $nand.i5(i1: i5, i2: i5): i5;

function $nand.i6(i1: i6, i2: i6): i6;

function $nand.i8(i1: i8, i2: i8): i8;

function $nand.i16(i1: i16, i2: i16): i16;

function $nand.i24(i1: i24, i2: i24): i24;

function $nand.i32(i1: i32, i2: i32): i32;

function $nand.i40(i1: i40, i2: i40): i40;

function $nand.i48(i1: i48, i2: i48): i48;

function $nand.i56(i1: i56, i2: i56): i56;

function $nand.i64(i1: i64, i2: i64): i64;

function $nand.i80(i1: i80, i2: i80): i80;

function $nand.i88(i1: i88, i2: i88): i88;

function $nand.i96(i1: i96, i2: i96): i96;

function $nand.i128(i1: i128, i2: i128): i128;

function $nand.i160(i1: i160, i2: i160): i160;

function $nand.i256(i1: i256, i2: i256): i256;

function $not.i1(i: i1): i1;

function $not.i5(i: i5): i5;

function $not.i6(i: i6): i6;

function $not.i8(i: i8): i8;

function $not.i16(i: i16): i16;

function $not.i24(i: i24): i24;

function $not.i32(i: i32): i32;

function $not.i40(i: i40): i40;

function $not.i48(i: i48): i48;

function $not.i56(i: i56): i56;

function $not.i64(i: i64): i64;

function $not.i80(i: i80): i80;

function $not.i88(i: i88): i88;

function $not.i96(i: i96): i96;

function $not.i128(i: i128): i128;

function $not.i160(i: i160): i160;

function $not.i256(i: i256): i256;

function {:define} $smin.i1(i1: i1, i2: i1): i1 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i5(i1: i5, i2: i5): i5 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i6(i1: i6, i2: i6): i6 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i8(i1: i8, i2: i8): i8 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i16(i1: i16, i2: i16): i16 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i24(i1: i24, i2: i24): i24 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i32(i1: i32, i2: i32): i32 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i40(i1: i40, i2: i40): i40 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i48(i1: i48, i2: i48): i48 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i56(i1: i56, i2: i56): i56 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i64(i1: i64, i2: i64): i64 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i80(i1: i80, i2: i80): i80 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i88(i1: i88, i2: i88): i88 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i96(i1: i96, i2: i96): i96 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i128(i1: i128, i2: i128): i128 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i160(i1: i160, i2: i160): i160 {
  if i1 < i2 then i1 else i2
}

function {:define} $smin.i256(i1: i256, i2: i256): i256 {
  if i1 < i2 then i1 else i2
}

function {:define} $smax.i1(i1: i1, i2: i1): i1 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i5(i1: i5, i2: i5): i5 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i6(i1: i6, i2: i6): i6 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i8(i1: i8, i2: i8): i8 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i16(i1: i16, i2: i16): i16 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i24(i1: i24, i2: i24): i24 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i32(i1: i32, i2: i32): i32 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i40(i1: i40, i2: i40): i40 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i48(i1: i48, i2: i48): i48 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i56(i1: i56, i2: i56): i56 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i64(i1: i64, i2: i64): i64 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i80(i1: i80, i2: i80): i80 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i88(i1: i88, i2: i88): i88 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i96(i1: i96, i2: i96): i96 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i128(i1: i128, i2: i128): i128 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i160(i1: i160, i2: i160): i160 {
  if i2 < i1 then i1 else i2
}

function {:define} $smax.i256(i1: i256, i2: i256): i256 {
  if i2 < i1 then i1 else i2
}

function {:define} $umin.i1(i1: i1, i2: i1): i1 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i5(i1: i5, i2: i5): i5 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i6(i1: i6, i2: i6): i6 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i8(i1: i8, i2: i8): i8 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i16(i1: i16, i2: i16): i16 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i24(i1: i24, i2: i24): i24 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i32(i1: i32, i2: i32): i32 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i40(i1: i40, i2: i40): i40 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i48(i1: i48, i2: i48): i48 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i56(i1: i56, i2: i56): i56 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i64(i1: i64, i2: i64): i64 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i80(i1: i80, i2: i80): i80 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i88(i1: i88, i2: i88): i88 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i96(i1: i96, i2: i96): i96 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i128(i1: i128, i2: i128): i128 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i160(i1: i160, i2: i160): i160 {
  if i1 < i2 then i1 else i2
}

function {:define} $umin.i256(i1: i256, i2: i256): i256 {
  if i1 < i2 then i1 else i2
}

function {:define} $umax.i1(i1: i1, i2: i1): i1 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i5(i1: i5, i2: i5): i5 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i6(i1: i6, i2: i6): i6 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i8(i1: i8, i2: i8): i8 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i16(i1: i16, i2: i16): i16 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i24(i1: i24, i2: i24): i24 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i32(i1: i32, i2: i32): i32 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i40(i1: i40, i2: i40): i40 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i48(i1: i48, i2: i48): i48 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i56(i1: i56, i2: i56): i56 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i64(i1: i64, i2: i64): i64 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i80(i1: i80, i2: i80): i80 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i88(i1: i88, i2: i88): i88 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i96(i1: i96, i2: i96): i96 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i128(i1: i128, i2: i128): i128 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i160(i1: i160, i2: i160): i160 {
  if i2 < i1 then i1 else i2
}

function {:define} $umax.i256(i1: i256, i2: i256): i256 {
  if i2 < i1 then i1 else i2
}

axiom $and.i1(0, 0) == 0;

axiom $or.i1(0, 0) == 0;

axiom $xor.i1(0, 0) == 0;

axiom $and.i1(0, 1) == 0;

axiom $or.i1(0, 1) == 1;

axiom $xor.i1(0, 1) == 1;

axiom $and.i1(1, 0) == 0;

axiom $or.i1(1, 0) == 1;

axiom $xor.i1(1, 0) == 1;

axiom $and.i1(1, 1) == 1;

axiom $or.i1(1, 1) == 1;

axiom $xor.i1(1, 1) == 0;

axiom $and.i32(32, 16) == 0;

function {:define} $ule.i1.bool(i1: i1, i2: i1): bool {
  i1 <= i2
}

function {:define} $ule.i1(i1: i1, i2: i1): i1 {
  if $ule.i1.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i5.bool(i1: i5, i2: i5): bool {
  i1 <= i2
}

function {:define} $ule.i5(i1: i5, i2: i5): i1 {
  if $ule.i5.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i6.bool(i1: i6, i2: i6): bool {
  i1 <= i2
}

function {:define} $ule.i6(i1: i6, i2: i6): i1 {
  if $ule.i6.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i8.bool(i1: i8, i2: i8): bool {
  i1 <= i2
}

function {:define} $ule.i8(i1: i8, i2: i8): i1 {
  if $ule.i8.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i16.bool(i1: i16, i2: i16): bool {
  i1 <= i2
}

function {:define} $ule.i16(i1: i16, i2: i16): i1 {
  if $ule.i16.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i24.bool(i1: i24, i2: i24): bool {
  i1 <= i2
}

function {:define} $ule.i24(i1: i24, i2: i24): i1 {
  if $ule.i24.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i32.bool(i1: i32, i2: i32): bool {
  i1 <= i2
}

function {:define} $ule.i32(i1: i32, i2: i32): i1 {
  if $ule.i32.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i40.bool(i1: i40, i2: i40): bool {
  i1 <= i2
}

function {:define} $ule.i40(i1: i40, i2: i40): i1 {
  if $ule.i40.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i48.bool(i1: i48, i2: i48): bool {
  i1 <= i2
}

function {:define} $ule.i48(i1: i48, i2: i48): i1 {
  if $ule.i48.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i56.bool(i1: i56, i2: i56): bool {
  i1 <= i2
}

function {:define} $ule.i56(i1: i56, i2: i56): i1 {
  if $ule.i56.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i64.bool(i1: i64, i2: i64): bool {
  i1 <= i2
}

function {:define} $ule.i64(i1: i64, i2: i64): i1 {
  if $ule.i64.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i80.bool(i1: i80, i2: i80): bool {
  i1 <= i2
}

function {:define} $ule.i80(i1: i80, i2: i80): i1 {
  if $ule.i80.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i88.bool(i1: i88, i2: i88): bool {
  i1 <= i2
}

function {:define} $ule.i88(i1: i88, i2: i88): i1 {
  if $ule.i88.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i96.bool(i1: i96, i2: i96): bool {
  i1 <= i2
}

function {:define} $ule.i96(i1: i96, i2: i96): i1 {
  if $ule.i96.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i128.bool(i1: i128, i2: i128): bool {
  i1 <= i2
}

function {:define} $ule.i128(i1: i128, i2: i128): i1 {
  if $ule.i128.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i160.bool(i1: i160, i2: i160): bool {
  i1 <= i2
}

function {:define} $ule.i160(i1: i160, i2: i160): i1 {
  if $ule.i160.bool(i1, i2) then 1 else 0
}

function {:define} $ule.i256.bool(i1: i256, i2: i256): bool {
  i1 <= i2
}

function {:define} $ule.i256(i1: i256, i2: i256): i1 {
  if $ule.i256.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i1.bool(i1: i1, i2: i1): bool {
  i1 < i2
}

function {:define} $ult.i1(i1: i1, i2: i1): i1 {
  if $ult.i1.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i5.bool(i1: i5, i2: i5): bool {
  i1 < i2
}

function {:define} $ult.i5(i1: i5, i2: i5): i1 {
  if $ult.i5.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i6.bool(i1: i6, i2: i6): bool {
  i1 < i2
}

function {:define} $ult.i6(i1: i6, i2: i6): i1 {
  if $ult.i6.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i8.bool(i1: i8, i2: i8): bool {
  i1 < i2
}

function {:define} $ult.i8(i1: i8, i2: i8): i1 {
  if $ult.i8.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i16.bool(i1: i16, i2: i16): bool {
  i1 < i2
}

function {:define} $ult.i16(i1: i16, i2: i16): i1 {
  if $ult.i16.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i24.bool(i1: i24, i2: i24): bool {
  i1 < i2
}

function {:define} $ult.i24(i1: i24, i2: i24): i1 {
  if $ult.i24.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i32.bool(i1: i32, i2: i32): bool {
  i1 < i2
}

function {:define} $ult.i32(i1: i32, i2: i32): i1 {
  if $ult.i32.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i40.bool(i1: i40, i2: i40): bool {
  i1 < i2
}

function {:define} $ult.i40(i1: i40, i2: i40): i1 {
  if $ult.i40.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i48.bool(i1: i48, i2: i48): bool {
  i1 < i2
}

function {:define} $ult.i48(i1: i48, i2: i48): i1 {
  if $ult.i48.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i56.bool(i1: i56, i2: i56): bool {
  i1 < i2
}

function {:define} $ult.i56(i1: i56, i2: i56): i1 {
  if $ult.i56.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i64.bool(i1: i64, i2: i64): bool {
  i1 < i2
}

function {:define} $ult.i64(i1: i64, i2: i64): i1 {
  if $ult.i64.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i80.bool(i1: i80, i2: i80): bool {
  i1 < i2
}

function {:define} $ult.i80(i1: i80, i2: i80): i1 {
  if $ult.i80.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i88.bool(i1: i88, i2: i88): bool {
  i1 < i2
}

function {:define} $ult.i88(i1: i88, i2: i88): i1 {
  if $ult.i88.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i96.bool(i1: i96, i2: i96): bool {
  i1 < i2
}

function {:define} $ult.i96(i1: i96, i2: i96): i1 {
  if $ult.i96.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i128.bool(i1: i128, i2: i128): bool {
  i1 < i2
}

function {:define} $ult.i128(i1: i128, i2: i128): i1 {
  if $ult.i128.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i160.bool(i1: i160, i2: i160): bool {
  i1 < i2
}

function {:define} $ult.i160(i1: i160, i2: i160): i1 {
  if $ult.i160.bool(i1, i2) then 1 else 0
}

function {:define} $ult.i256.bool(i1: i256, i2: i256): bool {
  i1 < i2
}

function {:define} $ult.i256(i1: i256, i2: i256): i1 {
  if $ult.i256.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i1.bool(i1: i1, i2: i1): bool {
  i1 >= i2
}

function {:define} $uge.i1(i1: i1, i2: i1): i1 {
  if $uge.i1.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i5.bool(i1: i5, i2: i5): bool {
  i1 >= i2
}

function {:define} $uge.i5(i1: i5, i2: i5): i1 {
  if $uge.i5.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i6.bool(i1: i6, i2: i6): bool {
  i1 >= i2
}

function {:define} $uge.i6(i1: i6, i2: i6): i1 {
  if $uge.i6.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i8.bool(i1: i8, i2: i8): bool {
  i1 >= i2
}

function {:define} $uge.i8(i1: i8, i2: i8): i1 {
  if $uge.i8.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i16.bool(i1: i16, i2: i16): bool {
  i1 >= i2
}

function {:define} $uge.i16(i1: i16, i2: i16): i1 {
  if $uge.i16.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i24.bool(i1: i24, i2: i24): bool {
  i1 >= i2
}

function {:define} $uge.i24(i1: i24, i2: i24): i1 {
  if $uge.i24.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i32.bool(i1: i32, i2: i32): bool {
  i1 >= i2
}

function {:define} $uge.i32(i1: i32, i2: i32): i1 {
  if $uge.i32.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i40.bool(i1: i40, i2: i40): bool {
  i1 >= i2
}

function {:define} $uge.i40(i1: i40, i2: i40): i1 {
  if $uge.i40.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i48.bool(i1: i48, i2: i48): bool {
  i1 >= i2
}

function {:define} $uge.i48(i1: i48, i2: i48): i1 {
  if $uge.i48.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i56.bool(i1: i56, i2: i56): bool {
  i1 >= i2
}

function {:define} $uge.i56(i1: i56, i2: i56): i1 {
  if $uge.i56.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i64.bool(i1: i64, i2: i64): bool {
  i1 >= i2
}

function {:define} $uge.i64(i1: i64, i2: i64): i1 {
  if $uge.i64.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i80.bool(i1: i80, i2: i80): bool {
  i1 >= i2
}

function {:define} $uge.i80(i1: i80, i2: i80): i1 {
  if $uge.i80.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i88.bool(i1: i88, i2: i88): bool {
  i1 >= i2
}

function {:define} $uge.i88(i1: i88, i2: i88): i1 {
  if $uge.i88.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i96.bool(i1: i96, i2: i96): bool {
  i1 >= i2
}

function {:define} $uge.i96(i1: i96, i2: i96): i1 {
  if $uge.i96.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i128.bool(i1: i128, i2: i128): bool {
  i1 >= i2
}

function {:define} $uge.i128(i1: i128, i2: i128): i1 {
  if $uge.i128.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i160.bool(i1: i160, i2: i160): bool {
  i1 >= i2
}

function {:define} $uge.i160(i1: i160, i2: i160): i1 {
  if $uge.i160.bool(i1, i2) then 1 else 0
}

function {:define} $uge.i256.bool(i1: i256, i2: i256): bool {
  i1 >= i2
}

function {:define} $uge.i256(i1: i256, i2: i256): i1 {
  if $uge.i256.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i1.bool(i1: i1, i2: i1): bool {
  i1 > i2
}

function {:define} $ugt.i1(i1: i1, i2: i1): i1 {
  if $ugt.i1.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i5.bool(i1: i5, i2: i5): bool {
  i1 > i2
}

function {:define} $ugt.i5(i1: i5, i2: i5): i1 {
  if $ugt.i5.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i6.bool(i1: i6, i2: i6): bool {
  i1 > i2
}

function {:define} $ugt.i6(i1: i6, i2: i6): i1 {
  if $ugt.i6.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i8.bool(i1: i8, i2: i8): bool {
  i1 > i2
}

function {:define} $ugt.i8(i1: i8, i2: i8): i1 {
  if $ugt.i8.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i16.bool(i1: i16, i2: i16): bool {
  i1 > i2
}

function {:define} $ugt.i16(i1: i16, i2: i16): i1 {
  if $ugt.i16.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i24.bool(i1: i24, i2: i24): bool {
  i1 > i2
}

function {:define} $ugt.i24(i1: i24, i2: i24): i1 {
  if $ugt.i24.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i32.bool(i1: i32, i2: i32): bool {
  i1 > i2
}

function {:define} $ugt.i32(i1: i32, i2: i32): i1 {
  if $ugt.i32.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i40.bool(i1: i40, i2: i40): bool {
  i1 > i2
}

function {:define} $ugt.i40(i1: i40, i2: i40): i1 {
  if $ugt.i40.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i48.bool(i1: i48, i2: i48): bool {
  i1 > i2
}

function {:define} $ugt.i48(i1: i48, i2: i48): i1 {
  if $ugt.i48.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i56.bool(i1: i56, i2: i56): bool {
  i1 > i2
}

function {:define} $ugt.i56(i1: i56, i2: i56): i1 {
  if $ugt.i56.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i64.bool(i1: i64, i2: i64): bool {
  i1 > i2
}

function {:define} $ugt.i64(i1: i64, i2: i64): i1 {
  if $ugt.i64.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i80.bool(i1: i80, i2: i80): bool {
  i1 > i2
}

function {:define} $ugt.i80(i1: i80, i2: i80): i1 {
  if $ugt.i80.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i88.bool(i1: i88, i2: i88): bool {
  i1 > i2
}

function {:define} $ugt.i88(i1: i88, i2: i88): i1 {
  if $ugt.i88.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i96.bool(i1: i96, i2: i96): bool {
  i1 > i2
}

function {:define} $ugt.i96(i1: i96, i2: i96): i1 {
  if $ugt.i96.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i128.bool(i1: i128, i2: i128): bool {
  i1 > i2
}

function {:define} $ugt.i128(i1: i128, i2: i128): i1 {
  if $ugt.i128.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i160.bool(i1: i160, i2: i160): bool {
  i1 > i2
}

function {:define} $ugt.i160(i1: i160, i2: i160): i1 {
  if $ugt.i160.bool(i1, i2) then 1 else 0
}

function {:define} $ugt.i256.bool(i1: i256, i2: i256): bool {
  i1 > i2
}

function {:define} $ugt.i256(i1: i256, i2: i256): i1 {
  if $ugt.i256.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i1.bool(i1: i1, i2: i1): bool {
  i1 <= i2
}

function {:define} $sle.i1(i1: i1, i2: i1): i1 {
  if $sle.i1.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i5.bool(i1: i5, i2: i5): bool {
  i1 <= i2
}

function {:define} $sle.i5(i1: i5, i2: i5): i1 {
  if $sle.i5.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i6.bool(i1: i6, i2: i6): bool {
  i1 <= i2
}

function {:define} $sle.i6(i1: i6, i2: i6): i1 {
  if $sle.i6.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i8.bool(i1: i8, i2: i8): bool {
  i1 <= i2
}

function {:define} $sle.i8(i1: i8, i2: i8): i1 {
  if $sle.i8.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i16.bool(i1: i16, i2: i16): bool {
  i1 <= i2
}

function {:define} $sle.i16(i1: i16, i2: i16): i1 {
  if $sle.i16.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i24.bool(i1: i24, i2: i24): bool {
  i1 <= i2
}

function {:define} $sle.i24(i1: i24, i2: i24): i1 {
  if $sle.i24.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i32.bool(i1: i32, i2: i32): bool {
  i1 <= i2
}

function {:define} $sle.i32(i1: i32, i2: i32): i1 {
  if $sle.i32.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i40.bool(i1: i40, i2: i40): bool {
  i1 <= i2
}

function {:define} $sle.i40(i1: i40, i2: i40): i1 {
  if $sle.i40.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i48.bool(i1: i48, i2: i48): bool {
  i1 <= i2
}

function {:define} $sle.i48(i1: i48, i2: i48): i1 {
  if $sle.i48.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i56.bool(i1: i56, i2: i56): bool {
  i1 <= i2
}

function {:define} $sle.i56(i1: i56, i2: i56): i1 {
  if $sle.i56.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i64.bool(i1: i64, i2: i64): bool {
  i1 <= i2
}

function {:define} $sle.i64(i1: i64, i2: i64): i1 {
  if $sle.i64.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i80.bool(i1: i80, i2: i80): bool {
  i1 <= i2
}

function {:define} $sle.i80(i1: i80, i2: i80): i1 {
  if $sle.i80.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i88.bool(i1: i88, i2: i88): bool {
  i1 <= i2
}

function {:define} $sle.i88(i1: i88, i2: i88): i1 {
  if $sle.i88.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i96.bool(i1: i96, i2: i96): bool {
  i1 <= i2
}

function {:define} $sle.i96(i1: i96, i2: i96): i1 {
  if $sle.i96.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i128.bool(i1: i128, i2: i128): bool {
  i1 <= i2
}

function {:define} $sle.i128(i1: i128, i2: i128): i1 {
  if $sle.i128.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i160.bool(i1: i160, i2: i160): bool {
  i1 <= i2
}

function {:define} $sle.i160(i1: i160, i2: i160): i1 {
  if $sle.i160.bool(i1, i2) then 1 else 0
}

function {:define} $sle.i256.bool(i1: i256, i2: i256): bool {
  i1 <= i2
}

function {:define} $sle.i256(i1: i256, i2: i256): i1 {
  if $sle.i256.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i1.bool(i1: i1, i2: i1): bool {
  i1 < i2
}

function {:define} $slt.i1(i1: i1, i2: i1): i1 {
  if $slt.i1.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i5.bool(i1: i5, i2: i5): bool {
  i1 < i2
}

function {:define} $slt.i5(i1: i5, i2: i5): i1 {
  if $slt.i5.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i6.bool(i1: i6, i2: i6): bool {
  i1 < i2
}

function {:define} $slt.i6(i1: i6, i2: i6): i1 {
  if $slt.i6.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i8.bool(i1: i8, i2: i8): bool {
  i1 < i2
}

function {:define} $slt.i8(i1: i8, i2: i8): i1 {
  if $slt.i8.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i16.bool(i1: i16, i2: i16): bool {
  i1 < i2
}

function {:define} $slt.i16(i1: i16, i2: i16): i1 {
  if $slt.i16.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i24.bool(i1: i24, i2: i24): bool {
  i1 < i2
}

function {:define} $slt.i24(i1: i24, i2: i24): i1 {
  if $slt.i24.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i32.bool(i1: i32, i2: i32): bool {
  i1 < i2
}

function {:define} $slt.i32(i1: i32, i2: i32): i1 {
  if $slt.i32.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i40.bool(i1: i40, i2: i40): bool {
  i1 < i2
}

function {:define} $slt.i40(i1: i40, i2: i40): i1 {
  if $slt.i40.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i48.bool(i1: i48, i2: i48): bool {
  i1 < i2
}

function {:define} $slt.i48(i1: i48, i2: i48): i1 {
  if $slt.i48.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i56.bool(i1: i56, i2: i56): bool {
  i1 < i2
}

function {:define} $slt.i56(i1: i56, i2: i56): i1 {
  if $slt.i56.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i64.bool(i1: i64, i2: i64): bool {
  i1 < i2
}

function {:define} $slt.i64(i1: i64, i2: i64): i1 {
  if $slt.i64.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i80.bool(i1: i80, i2: i80): bool {
  i1 < i2
}

function {:define} $slt.i80(i1: i80, i2: i80): i1 {
  if $slt.i80.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i88.bool(i1: i88, i2: i88): bool {
  i1 < i2
}

function {:define} $slt.i88(i1: i88, i2: i88): i1 {
  if $slt.i88.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i96.bool(i1: i96, i2: i96): bool {
  i1 < i2
}

function {:define} $slt.i96(i1: i96, i2: i96): i1 {
  if $slt.i96.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i128.bool(i1: i128, i2: i128): bool {
  i1 < i2
}

function {:define} $slt.i128(i1: i128, i2: i128): i1 {
  if $slt.i128.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i160.bool(i1: i160, i2: i160): bool {
  i1 < i2
}

function {:define} $slt.i160(i1: i160, i2: i160): i1 {
  if $slt.i160.bool(i1, i2) then 1 else 0
}

function {:define} $slt.i256.bool(i1: i256, i2: i256): bool {
  i1 < i2
}

function {:define} $slt.i256(i1: i256, i2: i256): i1 {
  if $slt.i256.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i1.bool(i1: i1, i2: i1): bool {
  i1 >= i2
}

function {:define} $sge.i1(i1: i1, i2: i1): i1 {
  if $sge.i1.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i5.bool(i1: i5, i2: i5): bool {
  i1 >= i2
}

function {:define} $sge.i5(i1: i5, i2: i5): i1 {
  if $sge.i5.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i6.bool(i1: i6, i2: i6): bool {
  i1 >= i2
}

function {:define} $sge.i6(i1: i6, i2: i6): i1 {
  if $sge.i6.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i8.bool(i1: i8, i2: i8): bool {
  i1 >= i2
}

function {:define} $sge.i8(i1: i8, i2: i8): i1 {
  if $sge.i8.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i16.bool(i1: i16, i2: i16): bool {
  i1 >= i2
}

function {:define} $sge.i16(i1: i16, i2: i16): i1 {
  if $sge.i16.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i24.bool(i1: i24, i2: i24): bool {
  i1 >= i2
}

function {:define} $sge.i24(i1: i24, i2: i24): i1 {
  if $sge.i24.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i32.bool(i1: i32, i2: i32): bool {
  i1 >= i2
}

function {:define} $sge.i32(i1: i32, i2: i32): i1 {
  if $sge.i32.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i40.bool(i1: i40, i2: i40): bool {
  i1 >= i2
}

function {:define} $sge.i40(i1: i40, i2: i40): i1 {
  if $sge.i40.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i48.bool(i1: i48, i2: i48): bool {
  i1 >= i2
}

function {:define} $sge.i48(i1: i48, i2: i48): i1 {
  if $sge.i48.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i56.bool(i1: i56, i2: i56): bool {
  i1 >= i2
}

function {:define} $sge.i56(i1: i56, i2: i56): i1 {
  if $sge.i56.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i64.bool(i1: i64, i2: i64): bool {
  i1 >= i2
}

function {:define} $sge.i64(i1: i64, i2: i64): i1 {
  if $sge.i64.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i80.bool(i1: i80, i2: i80): bool {
  i1 >= i2
}

function {:define} $sge.i80(i1: i80, i2: i80): i1 {
  if $sge.i80.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i88.bool(i1: i88, i2: i88): bool {
  i1 >= i2
}

function {:define} $sge.i88(i1: i88, i2: i88): i1 {
  if $sge.i88.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i96.bool(i1: i96, i2: i96): bool {
  i1 >= i2
}

function {:define} $sge.i96(i1: i96, i2: i96): i1 {
  if $sge.i96.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i128.bool(i1: i128, i2: i128): bool {
  i1 >= i2
}

function {:define} $sge.i128(i1: i128, i2: i128): i1 {
  if $sge.i128.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i160.bool(i1: i160, i2: i160): bool {
  i1 >= i2
}

function {:define} $sge.i160(i1: i160, i2: i160): i1 {
  if $sge.i160.bool(i1, i2) then 1 else 0
}

function {:define} $sge.i256.bool(i1: i256, i2: i256): bool {
  i1 >= i2
}

function {:define} $sge.i256(i1: i256, i2: i256): i1 {
  if $sge.i256.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i1.bool(i1: i1, i2: i1): bool {
  i1 > i2
}

function {:define} $sgt.i1(i1: i1, i2: i1): i1 {
  if $sgt.i1.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i5.bool(i1: i5, i2: i5): bool {
  i1 > i2
}

function {:define} $sgt.i5(i1: i5, i2: i5): i1 {
  if $sgt.i5.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i6.bool(i1: i6, i2: i6): bool {
  i1 > i2
}

function {:define} $sgt.i6(i1: i6, i2: i6): i1 {
  if $sgt.i6.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i8.bool(i1: i8, i2: i8): bool {
  i1 > i2
}

function {:define} $sgt.i8(i1: i8, i2: i8): i1 {
  if $sgt.i8.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i16.bool(i1: i16, i2: i16): bool {
  i1 > i2
}

function {:define} $sgt.i16(i1: i16, i2: i16): i1 {
  if $sgt.i16.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i24.bool(i1: i24, i2: i24): bool {
  i1 > i2
}

function {:define} $sgt.i24(i1: i24, i2: i24): i1 {
  if $sgt.i24.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i32.bool(i1: i32, i2: i32): bool {
  i1 > i2
}

function {:define} $sgt.i32(i1: i32, i2: i32): i1 {
  if $sgt.i32.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i40.bool(i1: i40, i2: i40): bool {
  i1 > i2
}

function {:define} $sgt.i40(i1: i40, i2: i40): i1 {
  if $sgt.i40.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i48.bool(i1: i48, i2: i48): bool {
  i1 > i2
}

function {:define} $sgt.i48(i1: i48, i2: i48): i1 {
  if $sgt.i48.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i56.bool(i1: i56, i2: i56): bool {
  i1 > i2
}

function {:define} $sgt.i56(i1: i56, i2: i56): i1 {
  if $sgt.i56.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i64.bool(i1: i64, i2: i64): bool {
  i1 > i2
}

function {:define} $sgt.i64(i1: i64, i2: i64): i1 {
  if $sgt.i64.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i80.bool(i1: i80, i2: i80): bool {
  i1 > i2
}

function {:define} $sgt.i80(i1: i80, i2: i80): i1 {
  if $sgt.i80.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i88.bool(i1: i88, i2: i88): bool {
  i1 > i2
}

function {:define} $sgt.i88(i1: i88, i2: i88): i1 {
  if $sgt.i88.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i96.bool(i1: i96, i2: i96): bool {
  i1 > i2
}

function {:define} $sgt.i96(i1: i96, i2: i96): i1 {
  if $sgt.i96.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i128.bool(i1: i128, i2: i128): bool {
  i1 > i2
}

function {:define} $sgt.i128(i1: i128, i2: i128): i1 {
  if $sgt.i128.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i160.bool(i1: i160, i2: i160): bool {
  i1 > i2
}

function {:define} $sgt.i160(i1: i160, i2: i160): i1 {
  if $sgt.i160.bool(i1, i2) then 1 else 0
}

function {:define} $sgt.i256.bool(i1: i256, i2: i256): bool {
  i1 > i2
}

function {:define} $sgt.i256(i1: i256, i2: i256): i1 {
  if $sgt.i256.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i1.bool(i1: i1, i2: i1): bool {
  i1 == i2
}

function {:define} $eq.i1(i1: i1, i2: i1): i1 {
  if $eq.i1.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i5.bool(i1: i5, i2: i5): bool {
  i1 == i2
}

function {:define} $eq.i5(i1: i5, i2: i5): i1 {
  if $eq.i5.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i6.bool(i1: i6, i2: i6): bool {
  i1 == i2
}

function {:define} $eq.i6(i1: i6, i2: i6): i1 {
  if $eq.i6.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i8.bool(i1: i8, i2: i8): bool {
  i1 == i2
}

function {:define} $eq.i8(i1: i8, i2: i8): i1 {
  if $eq.i8.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i16.bool(i1: i16, i2: i16): bool {
  i1 == i2
}

function {:define} $eq.i16(i1: i16, i2: i16): i1 {
  if $eq.i16.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i24.bool(i1: i24, i2: i24): bool {
  i1 == i2
}

function {:define} $eq.i24(i1: i24, i2: i24): i1 {
  if $eq.i24.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i32.bool(i1: i32, i2: i32): bool {
  i1 == i2
}

function {:define} $eq.i32(i1: i32, i2: i32): i1 {
  if $eq.i32.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i40.bool(i1: i40, i2: i40): bool {
  i1 == i2
}

function {:define} $eq.i40(i1: i40, i2: i40): i1 {
  if $eq.i40.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i48.bool(i1: i48, i2: i48): bool {
  i1 == i2
}

function {:define} $eq.i48(i1: i48, i2: i48): i1 {
  if $eq.i48.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i56.bool(i1: i56, i2: i56): bool {
  i1 == i2
}

function {:define} $eq.i56(i1: i56, i2: i56): i1 {
  if $eq.i56.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i64.bool(i1: i64, i2: i64): bool {
  i1 == i2
}

function {:define} $eq.i64(i1: i64, i2: i64): i1 {
  if $eq.i64.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i80.bool(i1: i80, i2: i80): bool {
  i1 == i2
}

function {:define} $eq.i80(i1: i80, i2: i80): i1 {
  if $eq.i80.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i88.bool(i1: i88, i2: i88): bool {
  i1 == i2
}

function {:define} $eq.i88(i1: i88, i2: i88): i1 {
  if $eq.i88.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i96.bool(i1: i96, i2: i96): bool {
  i1 == i2
}

function {:define} $eq.i96(i1: i96, i2: i96): i1 {
  if $eq.i96.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i128.bool(i1: i128, i2: i128): bool {
  i1 == i2
}

function {:define} $eq.i128(i1: i128, i2: i128): i1 {
  if $eq.i128.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i160.bool(i1: i160, i2: i160): bool {
  i1 == i2
}

function {:define} $eq.i160(i1: i160, i2: i160): i1 {
  if $eq.i160.bool(i1, i2) then 1 else 0
}

function {:define} $eq.i256.bool(i1: i256, i2: i256): bool {
  i1 == i2
}

function {:define} $eq.i256(i1: i256, i2: i256): i1 {
  if $eq.i256.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i1.bool(i1: i1, i2: i1): bool {
  i1 != i2
}

function {:define} $ne.i1(i1: i1, i2: i1): i1 {
  if $ne.i1.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i5.bool(i1: i5, i2: i5): bool {
  i1 != i2
}

function {:define} $ne.i5(i1: i5, i2: i5): i1 {
  if $ne.i5.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i6.bool(i1: i6, i2: i6): bool {
  i1 != i2
}

function {:define} $ne.i6(i1: i6, i2: i6): i1 {
  if $ne.i6.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i8.bool(i1: i8, i2: i8): bool {
  i1 != i2
}

function {:define} $ne.i8(i1: i8, i2: i8): i1 {
  if $ne.i8.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i16.bool(i1: i16, i2: i16): bool {
  i1 != i2
}

function {:define} $ne.i16(i1: i16, i2: i16): i1 {
  if $ne.i16.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i24.bool(i1: i24, i2: i24): bool {
  i1 != i2
}

function {:define} $ne.i24(i1: i24, i2: i24): i1 {
  if $ne.i24.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i32.bool(i1: i32, i2: i32): bool {
  i1 != i2
}

function {:define} $ne.i32(i1: i32, i2: i32): i1 {
  if $ne.i32.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i40.bool(i1: i40, i2: i40): bool {
  i1 != i2
}

function {:define} $ne.i40(i1: i40, i2: i40): i1 {
  if $ne.i40.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i48.bool(i1: i48, i2: i48): bool {
  i1 != i2
}

function {:define} $ne.i48(i1: i48, i2: i48): i1 {
  if $ne.i48.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i56.bool(i1: i56, i2: i56): bool {
  i1 != i2
}

function {:define} $ne.i56(i1: i56, i2: i56): i1 {
  if $ne.i56.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i64.bool(i1: i64, i2: i64): bool {
  i1 != i2
}

function {:define} $ne.i64(i1: i64, i2: i64): i1 {
  if $ne.i64.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i80.bool(i1: i80, i2: i80): bool {
  i1 != i2
}

function {:define} $ne.i80(i1: i80, i2: i80): i1 {
  if $ne.i80.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i88.bool(i1: i88, i2: i88): bool {
  i1 != i2
}

function {:define} $ne.i88(i1: i88, i2: i88): i1 {
  if $ne.i88.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i96.bool(i1: i96, i2: i96): bool {
  i1 != i2
}

function {:define} $ne.i96(i1: i96, i2: i96): i1 {
  if $ne.i96.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i128.bool(i1: i128, i2: i128): bool {
  i1 != i2
}

function {:define} $ne.i128(i1: i128, i2: i128): i1 {
  if $ne.i128.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i160.bool(i1: i160, i2: i160): bool {
  i1 != i2
}

function {:define} $ne.i160(i1: i160, i2: i160): i1 {
  if $ne.i160.bool(i1, i2) then 1 else 0
}

function {:define} $ne.i256.bool(i1: i256, i2: i256): bool {
  i1 != i2
}

function {:define} $ne.i256(i1: i256, i2: i256): i1 {
  if $ne.i256.bool(i1, i2) then 1 else 0
}

function {:define} $load.i1(M: [ref]i1, p: ref): i1 {
  M[p]
}

function {:define} $store.i1(M: [ref]i1, p: ref, i: i1): [ref]i1 {
  M[p := i]
}

function {:define} $load.i5(M: [ref]i5, p: ref): i5 {
  M[p]
}

function {:define} $store.i5(M: [ref]i5, p: ref, i: i5): [ref]i5 {
  M[p := i]
}

function {:define} $load.i6(M: [ref]i6, p: ref): i6 {
  M[p]
}

function {:define} $store.i6(M: [ref]i6, p: ref, i: i6): [ref]i6 {
  M[p := i]
}

function {:define} $load.i8(M: [ref]i8, p: ref): i8 {
  M[p]
}

function {:define} $store.i8(M: [ref]i8, p: ref, i: i8): [ref]i8 {
  M[p := i]
}

function {:define} $load.i16(M: [ref]i16, p: ref): i16 {
  M[p]
}

function {:define} $store.i16(M: [ref]i16, p: ref, i: i16): [ref]i16 {
  M[p := i]
}

function {:define} $load.i24(M: [ref]i24, p: ref): i24 {
  M[p]
}

function {:define} $store.i24(M: [ref]i24, p: ref, i: i24): [ref]i24 {
  M[p := i]
}

function {:define} $load.i32(M: [ref]i32, p: ref): i32 {
  M[p]
}

function {:define} $store.i32(M: [ref]i32, p: ref, i: i32): [ref]i32 {
  M[p := i]
}

function {:define} $load.i40(M: [ref]i40, p: ref): i40 {
  M[p]
}

function {:define} $store.i40(M: [ref]i40, p: ref, i: i40): [ref]i40 {
  M[p := i]
}

function {:define} $load.i48(M: [ref]i48, p: ref): i48 {
  M[p]
}

function {:define} $store.i48(M: [ref]i48, p: ref, i: i48): [ref]i48 {
  M[p := i]
}

function {:define} $load.i56(M: [ref]i56, p: ref): i56 {
  M[p]
}

function {:define} $store.i56(M: [ref]i56, p: ref, i: i56): [ref]i56 {
  M[p := i]
}

function {:define} $load.i64(M: [ref]i64, p: ref): i64 {
  M[p]
}

function {:define} $store.i64(M: [ref]i64, p: ref, i: i64): [ref]i64 {
  M[p := i]
}

function {:define} $load.i80(M: [ref]i80, p: ref): i80 {
  M[p]
}

function {:define} $store.i80(M: [ref]i80, p: ref, i: i80): [ref]i80 {
  M[p := i]
}

function {:define} $load.i88(M: [ref]i88, p: ref): i88 {
  M[p]
}

function {:define} $store.i88(M: [ref]i88, p: ref, i: i88): [ref]i88 {
  M[p := i]
}

function {:define} $load.i96(M: [ref]i96, p: ref): i96 {
  M[p]
}

function {:define} $store.i96(M: [ref]i96, p: ref, i: i96): [ref]i96 {
  M[p := i]
}

function {:define} $load.i128(M: [ref]i128, p: ref): i128 {
  M[p]
}

function {:define} $store.i128(M: [ref]i128, p: ref, i: i128): [ref]i128 {
  M[p := i]
}

function {:define} $load.i160(M: [ref]i160, p: ref): i160 {
  M[p]
}

function {:define} $store.i160(M: [ref]i160, p: ref, i: i160): [ref]i160 {
  M[p := i]
}

function {:define} $load.i256(M: [ref]i256, p: ref): i256 {
  M[p]
}

function {:define} $store.i256(M: [ref]i256, p: ref, i: i256): [ref]i256 {
  M[p := i]
}

function {:define} $trunc.i5.i1(i: i5): i1 {
  i
}

function {:define} $trunc.i6.i1(i: i6): i1 {
  i
}

function {:define} $trunc.i8.i1(i: i8): i1 {
  i
}

function {:define} $trunc.i16.i1(i: i16): i1 {
  i
}

function {:define} $trunc.i24.i1(i: i24): i1 {
  i
}

function {:define} $trunc.i32.i1(i: i32): i1 {
  i
}

function {:define} $trunc.i40.i1(i: i40): i1 {
  i
}

function {:define} $trunc.i48.i1(i: i48): i1 {
  i
}

function {:define} $trunc.i56.i1(i: i56): i1 {
  i
}

function {:define} $trunc.i64.i1(i: i64): i1 {
  i
}

function {:define} $trunc.i80.i1(i: i80): i1 {
  i
}

function {:define} $trunc.i88.i1(i: i88): i1 {
  i
}

function {:define} $trunc.i96.i1(i: i96): i1 {
  i
}

function {:define} $trunc.i128.i1(i: i128): i1 {
  i
}

function {:define} $trunc.i160.i1(i: i160): i1 {
  i
}

function {:define} $trunc.i256.i1(i: i256): i1 {
  i
}

function {:define} $trunc.i6.i5(i: i6): i5 {
  i
}

function {:define} $trunc.i8.i5(i: i8): i5 {
  i
}

function {:define} $trunc.i16.i5(i: i16): i5 {
  i
}

function {:define} $trunc.i24.i5(i: i24): i5 {
  i
}

function {:define} $trunc.i32.i5(i: i32): i5 {
  i
}

function {:define} $trunc.i40.i5(i: i40): i5 {
  i
}

function {:define} $trunc.i48.i5(i: i48): i5 {
  i
}

function {:define} $trunc.i56.i5(i: i56): i5 {
  i
}

function {:define} $trunc.i64.i5(i: i64): i5 {
  i
}

function {:define} $trunc.i80.i5(i: i80): i5 {
  i
}

function {:define} $trunc.i88.i5(i: i88): i5 {
  i
}

function {:define} $trunc.i96.i5(i: i96): i5 {
  i
}

function {:define} $trunc.i128.i5(i: i128): i5 {
  i
}

function {:define} $trunc.i160.i5(i: i160): i5 {
  i
}

function {:define} $trunc.i256.i5(i: i256): i5 {
  i
}

function {:define} $trunc.i8.i6(i: i8): i6 {
  i
}

function {:define} $trunc.i16.i6(i: i16): i6 {
  i
}

function {:define} $trunc.i24.i6(i: i24): i6 {
  i
}

function {:define} $trunc.i32.i6(i: i32): i6 {
  i
}

function {:define} $trunc.i40.i6(i: i40): i6 {
  i
}

function {:define} $trunc.i48.i6(i: i48): i6 {
  i
}

function {:define} $trunc.i56.i6(i: i56): i6 {
  i
}

function {:define} $trunc.i64.i6(i: i64): i6 {
  i
}

function {:define} $trunc.i80.i6(i: i80): i6 {
  i
}

function {:define} $trunc.i88.i6(i: i88): i6 {
  i
}

function {:define} $trunc.i96.i6(i: i96): i6 {
  i
}

function {:define} $trunc.i128.i6(i: i128): i6 {
  i
}

function {:define} $trunc.i160.i6(i: i160): i6 {
  i
}

function {:define} $trunc.i256.i6(i: i256): i6 {
  i
}

function {:define} $trunc.i16.i8(i: i16): i8 {
  i
}

function {:define} $trunc.i24.i8(i: i24): i8 {
  i
}

function {:define} $trunc.i32.i8(i: i32): i8 {
  i
}

function {:define} $trunc.i40.i8(i: i40): i8 {
  i
}

function {:define} $trunc.i48.i8(i: i48): i8 {
  i
}

function {:define} $trunc.i56.i8(i: i56): i8 {
  i
}

function {:define} $trunc.i64.i8(i: i64): i8 {
  i
}

function {:define} $trunc.i80.i8(i: i80): i8 {
  i
}

function {:define} $trunc.i88.i8(i: i88): i8 {
  i
}

function {:define} $trunc.i96.i8(i: i96): i8 {
  i
}

function {:define} $trunc.i128.i8(i: i128): i8 {
  i
}

function {:define} $trunc.i160.i8(i: i160): i8 {
  i
}

function {:define} $trunc.i256.i8(i: i256): i8 {
  i
}

function {:define} $trunc.i24.i16(i: i24): i16 {
  i
}

function {:define} $trunc.i32.i16(i: i32): i16 {
  i
}

function {:define} $trunc.i40.i16(i: i40): i16 {
  i
}

function {:define} $trunc.i48.i16(i: i48): i16 {
  i
}

function {:define} $trunc.i56.i16(i: i56): i16 {
  i
}

function {:define} $trunc.i64.i16(i: i64): i16 {
  i
}

function {:define} $trunc.i80.i16(i: i80): i16 {
  i
}

function {:define} $trunc.i88.i16(i: i88): i16 {
  i
}

function {:define} $trunc.i96.i16(i: i96): i16 {
  i
}

function {:define} $trunc.i128.i16(i: i128): i16 {
  i
}

function {:define} $trunc.i160.i16(i: i160): i16 {
  i
}

function {:define} $trunc.i256.i16(i: i256): i16 {
  i
}

function {:define} $trunc.i32.i24(i: i32): i24 {
  i
}

function {:define} $trunc.i40.i24(i: i40): i24 {
  i
}

function {:define} $trunc.i48.i24(i: i48): i24 {
  i
}

function {:define} $trunc.i56.i24(i: i56): i24 {
  i
}

function {:define} $trunc.i64.i24(i: i64): i24 {
  i
}

function {:define} $trunc.i80.i24(i: i80): i24 {
  i
}

function {:define} $trunc.i88.i24(i: i88): i24 {
  i
}

function {:define} $trunc.i96.i24(i: i96): i24 {
  i
}

function {:define} $trunc.i128.i24(i: i128): i24 {
  i
}

function {:define} $trunc.i160.i24(i: i160): i24 {
  i
}

function {:define} $trunc.i256.i24(i: i256): i24 {
  i
}

function {:define} $trunc.i40.i32(i: i40): i32 {
  i
}

function {:define} $trunc.i48.i32(i: i48): i32 {
  i
}

function {:define} $trunc.i56.i32(i: i56): i32 {
  i
}

function {:define} $trunc.i64.i32(i: i64): i32 {
  i
}

function {:define} $trunc.i80.i32(i: i80): i32 {
  i
}

function {:define} $trunc.i88.i32(i: i88): i32 {
  i
}

function {:define} $trunc.i96.i32(i: i96): i32 {
  i
}

function {:define} $trunc.i128.i32(i: i128): i32 {
  i
}

function {:define} $trunc.i160.i32(i: i160): i32 {
  i
}

function {:define} $trunc.i256.i32(i: i256): i32 {
  i
}

function {:define} $trunc.i48.i40(i: i48): i40 {
  i
}

function {:define} $trunc.i56.i40(i: i56): i40 {
  i
}

function {:define} $trunc.i64.i40(i: i64): i40 {
  i
}

function {:define} $trunc.i80.i40(i: i80): i40 {
  i
}

function {:define} $trunc.i88.i40(i: i88): i40 {
  i
}

function {:define} $trunc.i96.i40(i: i96): i40 {
  i
}

function {:define} $trunc.i128.i40(i: i128): i40 {
  i
}

function {:define} $trunc.i160.i40(i: i160): i40 {
  i
}

function {:define} $trunc.i256.i40(i: i256): i40 {
  i
}

function {:define} $trunc.i56.i48(i: i56): i48 {
  i
}

function {:define} $trunc.i64.i48(i: i64): i48 {
  i
}

function {:define} $trunc.i80.i48(i: i80): i48 {
  i
}

function {:define} $trunc.i88.i48(i: i88): i48 {
  i
}

function {:define} $trunc.i96.i48(i: i96): i48 {
  i
}

function {:define} $trunc.i128.i48(i: i128): i48 {
  i
}

function {:define} $trunc.i160.i48(i: i160): i48 {
  i
}

function {:define} $trunc.i256.i48(i: i256): i48 {
  i
}

function {:define} $trunc.i64.i56(i: i64): i56 {
  i
}

function {:define} $trunc.i80.i56(i: i80): i56 {
  i
}

function {:define} $trunc.i88.i56(i: i88): i56 {
  i
}

function {:define} $trunc.i96.i56(i: i96): i56 {
  i
}

function {:define} $trunc.i128.i56(i: i128): i56 {
  i
}

function {:define} $trunc.i160.i56(i: i160): i56 {
  i
}

function {:define} $trunc.i256.i56(i: i256): i56 {
  i
}

function {:define} $trunc.i80.i64(i: i80): i64 {
  i
}

function {:define} $trunc.i88.i64(i: i88): i64 {
  i
}

function {:define} $trunc.i96.i64(i: i96): i64 {
  i
}

function {:define} $trunc.i128.i64(i: i128): i64 {
  i
}

function {:define} $trunc.i160.i64(i: i160): i64 {
  i
}

function {:define} $trunc.i256.i64(i: i256): i64 {
  i
}

function {:define} $trunc.i88.i80(i: i88): i80 {
  i
}

function {:define} $trunc.i96.i80(i: i96): i80 {
  i
}

function {:define} $trunc.i128.i80(i: i128): i80 {
  i
}

function {:define} $trunc.i160.i80(i: i160): i80 {
  i
}

function {:define} $trunc.i256.i80(i: i256): i80 {
  i
}

function {:define} $trunc.i96.i88(i: i96): i88 {
  i
}

function {:define} $trunc.i128.i88(i: i128): i88 {
  i
}

function {:define} $trunc.i160.i88(i: i160): i88 {
  i
}

function {:define} $trunc.i256.i88(i: i256): i88 {
  i
}

function {:define} $trunc.i128.i96(i: i128): i96 {
  i
}

function {:define} $trunc.i160.i96(i: i160): i96 {
  i
}

function {:define} $trunc.i256.i96(i: i256): i96 {
  i
}

function {:define} $trunc.i160.i128(i: i160): i128 {
  i
}

function {:define} $trunc.i256.i128(i: i256): i128 {
  i
}

function {:define} $trunc.i256.i160(i: i256): i160 {
  i
}

function {:define} $sext.i1.i5(i: i1): i5 {
  i
}

function {:define} $sext.i1.i6(i: i1): i6 {
  i
}

function {:define} $sext.i1.i8(i: i1): i8 {
  i
}

function {:define} $sext.i1.i16(i: i1): i16 {
  i
}

function {:define} $sext.i1.i24(i: i1): i24 {
  i
}

function {:define} $sext.i1.i32(i: i1): i32 {
  i
}

function {:define} $sext.i1.i40(i: i1): i40 {
  i
}

function {:define} $sext.i1.i48(i: i1): i48 {
  i
}

function {:define} $sext.i1.i56(i: i1): i56 {
  i
}

function {:define} $sext.i1.i64(i: i1): i64 {
  i
}

function {:define} $sext.i1.i80(i: i1): i80 {
  i
}

function {:define} $sext.i1.i88(i: i1): i88 {
  i
}

function {:define} $sext.i1.i96(i: i1): i96 {
  i
}

function {:define} $sext.i1.i128(i: i1): i128 {
  i
}

function {:define} $sext.i1.i160(i: i1): i160 {
  i
}

function {:define} $sext.i1.i256(i: i1): i256 {
  i
}

function {:define} $sext.i5.i6(i: i5): i6 {
  i
}

function {:define} $sext.i5.i8(i: i5): i8 {
  i
}

function {:define} $sext.i5.i16(i: i5): i16 {
  i
}

function {:define} $sext.i5.i24(i: i5): i24 {
  i
}

function {:define} $sext.i5.i32(i: i5): i32 {
  i
}

function {:define} $sext.i5.i40(i: i5): i40 {
  i
}

function {:define} $sext.i5.i48(i: i5): i48 {
  i
}

function {:define} $sext.i5.i56(i: i5): i56 {
  i
}

function {:define} $sext.i5.i64(i: i5): i64 {
  i
}

function {:define} $sext.i5.i80(i: i5): i80 {
  i
}

function {:define} $sext.i5.i88(i: i5): i88 {
  i
}

function {:define} $sext.i5.i96(i: i5): i96 {
  i
}

function {:define} $sext.i5.i128(i: i5): i128 {
  i
}

function {:define} $sext.i5.i160(i: i5): i160 {
  i
}

function {:define} $sext.i5.i256(i: i5): i256 {
  i
}

function {:define} $sext.i6.i8(i: i6): i8 {
  i
}

function {:define} $sext.i6.i16(i: i6): i16 {
  i
}

function {:define} $sext.i6.i24(i: i6): i24 {
  i
}

function {:define} $sext.i6.i32(i: i6): i32 {
  i
}

function {:define} $sext.i6.i40(i: i6): i40 {
  i
}

function {:define} $sext.i6.i48(i: i6): i48 {
  i
}

function {:define} $sext.i6.i56(i: i6): i56 {
  i
}

function {:define} $sext.i6.i64(i: i6): i64 {
  i
}

function {:define} $sext.i6.i80(i: i6): i80 {
  i
}

function {:define} $sext.i6.i88(i: i6): i88 {
  i
}

function {:define} $sext.i6.i96(i: i6): i96 {
  i
}

function {:define} $sext.i6.i128(i: i6): i128 {
  i
}

function {:define} $sext.i6.i160(i: i6): i160 {
  i
}

function {:define} $sext.i6.i256(i: i6): i256 {
  i
}

function {:define} $sext.i8.i16(i: i8): i16 {
  i
}

function {:define} $sext.i8.i24(i: i8): i24 {
  i
}

function {:define} $sext.i8.i32(i: i8): i32 {
  i
}

function {:define} $sext.i8.i40(i: i8): i40 {
  i
}

function {:define} $sext.i8.i48(i: i8): i48 {
  i
}

function {:define} $sext.i8.i56(i: i8): i56 {
  i
}

function {:define} $sext.i8.i64(i: i8): i64 {
  i
}

function {:define} $sext.i8.i80(i: i8): i80 {
  i
}

function {:define} $sext.i8.i88(i: i8): i88 {
  i
}

function {:define} $sext.i8.i96(i: i8): i96 {
  i
}

function {:define} $sext.i8.i128(i: i8): i128 {
  i
}

function {:define} $sext.i8.i160(i: i8): i160 {
  i
}

function {:define} $sext.i8.i256(i: i8): i256 {
  i
}

function {:define} $sext.i16.i24(i: i16): i24 {
  i
}

function {:define} $sext.i16.i32(i: i16): i32 {
  i
}

function {:define} $sext.i16.i40(i: i16): i40 {
  i
}

function {:define} $sext.i16.i48(i: i16): i48 {
  i
}

function {:define} $sext.i16.i56(i: i16): i56 {
  i
}

function {:define} $sext.i16.i64(i: i16): i64 {
  i
}

function {:define} $sext.i16.i80(i: i16): i80 {
  i
}

function {:define} $sext.i16.i88(i: i16): i88 {
  i
}

function {:define} $sext.i16.i96(i: i16): i96 {
  i
}

function {:define} $sext.i16.i128(i: i16): i128 {
  i
}

function {:define} $sext.i16.i160(i: i16): i160 {
  i
}

function {:define} $sext.i16.i256(i: i16): i256 {
  i
}

function {:define} $sext.i24.i32(i: i24): i32 {
  i
}

function {:define} $sext.i24.i40(i: i24): i40 {
  i
}

function {:define} $sext.i24.i48(i: i24): i48 {
  i
}

function {:define} $sext.i24.i56(i: i24): i56 {
  i
}

function {:define} $sext.i24.i64(i: i24): i64 {
  i
}

function {:define} $sext.i24.i80(i: i24): i80 {
  i
}

function {:define} $sext.i24.i88(i: i24): i88 {
  i
}

function {:define} $sext.i24.i96(i: i24): i96 {
  i
}

function {:define} $sext.i24.i128(i: i24): i128 {
  i
}

function {:define} $sext.i24.i160(i: i24): i160 {
  i
}

function {:define} $sext.i24.i256(i: i24): i256 {
  i
}

function {:define} $sext.i32.i40(i: i32): i40 {
  i
}

function {:define} $sext.i32.i48(i: i32): i48 {
  i
}

function {:define} $sext.i32.i56(i: i32): i56 {
  i
}

function {:define} $sext.i32.i64(i: i32): i64 {
  i
}

function {:define} $sext.i32.i80(i: i32): i80 {
  i
}

function {:define} $sext.i32.i88(i: i32): i88 {
  i
}

function {:define} $sext.i32.i96(i: i32): i96 {
  i
}

function {:define} $sext.i32.i128(i: i32): i128 {
  i
}

function {:define} $sext.i32.i160(i: i32): i160 {
  i
}

function {:define} $sext.i32.i256(i: i32): i256 {
  i
}

function {:define} $sext.i40.i48(i: i40): i48 {
  i
}

function {:define} $sext.i40.i56(i: i40): i56 {
  i
}

function {:define} $sext.i40.i64(i: i40): i64 {
  i
}

function {:define} $sext.i40.i80(i: i40): i80 {
  i
}

function {:define} $sext.i40.i88(i: i40): i88 {
  i
}

function {:define} $sext.i40.i96(i: i40): i96 {
  i
}

function {:define} $sext.i40.i128(i: i40): i128 {
  i
}

function {:define} $sext.i40.i160(i: i40): i160 {
  i
}

function {:define} $sext.i40.i256(i: i40): i256 {
  i
}

function {:define} $sext.i48.i56(i: i48): i56 {
  i
}

function {:define} $sext.i48.i64(i: i48): i64 {
  i
}

function {:define} $sext.i48.i80(i: i48): i80 {
  i
}

function {:define} $sext.i48.i88(i: i48): i88 {
  i
}

function {:define} $sext.i48.i96(i: i48): i96 {
  i
}

function {:define} $sext.i48.i128(i: i48): i128 {
  i
}

function {:define} $sext.i48.i160(i: i48): i160 {
  i
}

function {:define} $sext.i48.i256(i: i48): i256 {
  i
}

function {:define} $sext.i56.i64(i: i56): i64 {
  i
}

function {:define} $sext.i56.i80(i: i56): i80 {
  i
}

function {:define} $sext.i56.i88(i: i56): i88 {
  i
}

function {:define} $sext.i56.i96(i: i56): i96 {
  i
}

function {:define} $sext.i56.i128(i: i56): i128 {
  i
}

function {:define} $sext.i56.i160(i: i56): i160 {
  i
}

function {:define} $sext.i56.i256(i: i56): i256 {
  i
}

function {:define} $sext.i64.i80(i: i64): i80 {
  i
}

function {:define} $sext.i64.i88(i: i64): i88 {
  i
}

function {:define} $sext.i64.i96(i: i64): i96 {
  i
}

function {:define} $sext.i64.i128(i: i64): i128 {
  i
}

function {:define} $sext.i64.i160(i: i64): i160 {
  i
}

function {:define} $sext.i64.i256(i: i64): i256 {
  i
}

function {:define} $sext.i80.i88(i: i80): i88 {
  i
}

function {:define} $sext.i80.i96(i: i80): i96 {
  i
}

function {:define} $sext.i80.i128(i: i80): i128 {
  i
}

function {:define} $sext.i80.i160(i: i80): i160 {
  i
}

function {:define} $sext.i80.i256(i: i80): i256 {
  i
}

function {:define} $sext.i88.i96(i: i88): i96 {
  i
}

function {:define} $sext.i88.i128(i: i88): i128 {
  i
}

function {:define} $sext.i88.i160(i: i88): i160 {
  i
}

function {:define} $sext.i88.i256(i: i88): i256 {
  i
}

function {:define} $sext.i96.i128(i: i96): i128 {
  i
}

function {:define} $sext.i96.i160(i: i96): i160 {
  i
}

function {:define} $sext.i96.i256(i: i96): i256 {
  i
}

function {:define} $sext.i128.i160(i: i128): i160 {
  i
}

function {:define} $sext.i128.i256(i: i128): i256 {
  i
}

function {:define} $sext.i160.i256(i: i160): i256 {
  i
}

function {:define} $zext.i1.i5(i: i1): i5 {
  i
}

function {:define} $zext.i1.i6(i: i1): i6 {
  i
}

function {:define} $zext.i1.i8(i: i1): i8 {
  i
}

function {:define} $zext.i1.i16(i: i1): i16 {
  i
}

function {:define} $zext.i1.i24(i: i1): i24 {
  i
}

function {:define} $zext.i1.i32(i: i1): i32 {
  i
}

function {:define} $zext.i1.i40(i: i1): i40 {
  i
}

function {:define} $zext.i1.i48(i: i1): i48 {
  i
}

function {:define} $zext.i1.i56(i: i1): i56 {
  i
}

function {:define} $zext.i1.i64(i: i1): i64 {
  i
}

function {:define} $zext.i1.i80(i: i1): i80 {
  i
}

function {:define} $zext.i1.i88(i: i1): i88 {
  i
}

function {:define} $zext.i1.i96(i: i1): i96 {
  i
}

function {:define} $zext.i1.i128(i: i1): i128 {
  i
}

function {:define} $zext.i1.i160(i: i1): i160 {
  i
}

function {:define} $zext.i1.i256(i: i1): i256 {
  i
}

function {:define} $zext.i5.i6(i: i5): i6 {
  i
}

function {:define} $zext.i5.i8(i: i5): i8 {
  i
}

function {:define} $zext.i5.i16(i: i5): i16 {
  i
}

function {:define} $zext.i5.i24(i: i5): i24 {
  i
}

function {:define} $zext.i5.i32(i: i5): i32 {
  i
}

function {:define} $zext.i5.i40(i: i5): i40 {
  i
}

function {:define} $zext.i5.i48(i: i5): i48 {
  i
}

function {:define} $zext.i5.i56(i: i5): i56 {
  i
}

function {:define} $zext.i5.i64(i: i5): i64 {
  i
}

function {:define} $zext.i5.i80(i: i5): i80 {
  i
}

function {:define} $zext.i5.i88(i: i5): i88 {
  i
}

function {:define} $zext.i5.i96(i: i5): i96 {
  i
}

function {:define} $zext.i5.i128(i: i5): i128 {
  i
}

function {:define} $zext.i5.i160(i: i5): i160 {
  i
}

function {:define} $zext.i5.i256(i: i5): i256 {
  i
}

function {:define} $zext.i6.i8(i: i6): i8 {
  i
}

function {:define} $zext.i6.i16(i: i6): i16 {
  i
}

function {:define} $zext.i6.i24(i: i6): i24 {
  i
}

function {:define} $zext.i6.i32(i: i6): i32 {
  i
}

function {:define} $zext.i6.i40(i: i6): i40 {
  i
}

function {:define} $zext.i6.i48(i: i6): i48 {
  i
}

function {:define} $zext.i6.i56(i: i6): i56 {
  i
}

function {:define} $zext.i6.i64(i: i6): i64 {
  i
}

function {:define} $zext.i6.i80(i: i6): i80 {
  i
}

function {:define} $zext.i6.i88(i: i6): i88 {
  i
}

function {:define} $zext.i6.i96(i: i6): i96 {
  i
}

function {:define} $zext.i6.i128(i: i6): i128 {
  i
}

function {:define} $zext.i6.i160(i: i6): i160 {
  i
}

function {:define} $zext.i6.i256(i: i6): i256 {
  i
}

function {:define} $zext.i8.i16(i: i8): i16 {
  i
}

function {:define} $zext.i8.i24(i: i8): i24 {
  i
}

function {:define} $zext.i8.i32(i: i8): i32 {
  i
}

function {:define} $zext.i8.i40(i: i8): i40 {
  i
}

function {:define} $zext.i8.i48(i: i8): i48 {
  i
}

function {:define} $zext.i8.i56(i: i8): i56 {
  i
}

function {:define} $zext.i8.i64(i: i8): i64 {
  i
}

function {:define} $zext.i8.i80(i: i8): i80 {
  i
}

function {:define} $zext.i8.i88(i: i8): i88 {
  i
}

function {:define} $zext.i8.i96(i: i8): i96 {
  i
}

function {:define} $zext.i8.i128(i: i8): i128 {
  i
}

function {:define} $zext.i8.i160(i: i8): i160 {
  i
}

function {:define} $zext.i8.i256(i: i8): i256 {
  i
}

function {:define} $zext.i16.i24(i: i16): i24 {
  i
}

function {:define} $zext.i16.i32(i: i16): i32 {
  i
}

function {:define} $zext.i16.i40(i: i16): i40 {
  i
}

function {:define} $zext.i16.i48(i: i16): i48 {
  i
}

function {:define} $zext.i16.i56(i: i16): i56 {
  i
}

function {:define} $zext.i16.i64(i: i16): i64 {
  i
}

function {:define} $zext.i16.i80(i: i16): i80 {
  i
}

function {:define} $zext.i16.i88(i: i16): i88 {
  i
}

function {:define} $zext.i16.i96(i: i16): i96 {
  i
}

function {:define} $zext.i16.i128(i: i16): i128 {
  i
}

function {:define} $zext.i16.i160(i: i16): i160 {
  i
}

function {:define} $zext.i16.i256(i: i16): i256 {
  i
}

function {:define} $zext.i24.i32(i: i24): i32 {
  i
}

function {:define} $zext.i24.i40(i: i24): i40 {
  i
}

function {:define} $zext.i24.i48(i: i24): i48 {
  i
}

function {:define} $zext.i24.i56(i: i24): i56 {
  i
}

function {:define} $zext.i24.i64(i: i24): i64 {
  i
}

function {:define} $zext.i24.i80(i: i24): i80 {
  i
}

function {:define} $zext.i24.i88(i: i24): i88 {
  i
}

function {:define} $zext.i24.i96(i: i24): i96 {
  i
}

function {:define} $zext.i24.i128(i: i24): i128 {
  i
}

function {:define} $zext.i24.i160(i: i24): i160 {
  i
}

function {:define} $zext.i24.i256(i: i24): i256 {
  i
}

function {:define} $zext.i32.i40(i: i32): i40 {
  i
}

function {:define} $zext.i32.i48(i: i32): i48 {
  i
}

function {:define} $zext.i32.i56(i: i32): i56 {
  i
}

function {:define} $zext.i32.i64(i: i32): i64 {
  i
}

function {:define} $zext.i32.i80(i: i32): i80 {
  i
}

function {:define} $zext.i32.i88(i: i32): i88 {
  i
}

function {:define} $zext.i32.i96(i: i32): i96 {
  i
}

function {:define} $zext.i32.i128(i: i32): i128 {
  i
}

function {:define} $zext.i32.i160(i: i32): i160 {
  i
}

function {:define} $zext.i32.i256(i: i32): i256 {
  i
}

function {:define} $zext.i40.i48(i: i40): i48 {
  i
}

function {:define} $zext.i40.i56(i: i40): i56 {
  i
}

function {:define} $zext.i40.i64(i: i40): i64 {
  i
}

function {:define} $zext.i40.i80(i: i40): i80 {
  i
}

function {:define} $zext.i40.i88(i: i40): i88 {
  i
}

function {:define} $zext.i40.i96(i: i40): i96 {
  i
}

function {:define} $zext.i40.i128(i: i40): i128 {
  i
}

function {:define} $zext.i40.i160(i: i40): i160 {
  i
}

function {:define} $zext.i40.i256(i: i40): i256 {
  i
}

function {:define} $zext.i48.i56(i: i48): i56 {
  i
}

function {:define} $zext.i48.i64(i: i48): i64 {
  i
}

function {:define} $zext.i48.i80(i: i48): i80 {
  i
}

function {:define} $zext.i48.i88(i: i48): i88 {
  i
}

function {:define} $zext.i48.i96(i: i48): i96 {
  i
}

function {:define} $zext.i48.i128(i: i48): i128 {
  i
}

function {:define} $zext.i48.i160(i: i48): i160 {
  i
}

function {:define} $zext.i48.i256(i: i48): i256 {
  i
}

function {:define} $zext.i56.i64(i: i56): i64 {
  i
}

function {:define} $zext.i56.i80(i: i56): i80 {
  i
}

function {:define} $zext.i56.i88(i: i56): i88 {
  i
}

function {:define} $zext.i56.i96(i: i56): i96 {
  i
}

function {:define} $zext.i56.i128(i: i56): i128 {
  i
}

function {:define} $zext.i56.i160(i: i56): i160 {
  i
}

function {:define} $zext.i56.i256(i: i56): i256 {
  i
}

function {:define} $zext.i64.i80(i: i64): i80 {
  i
}

function {:define} $zext.i64.i88(i: i64): i88 {
  i
}

function {:define} $zext.i64.i96(i: i64): i96 {
  i
}

function {:define} $zext.i64.i128(i: i64): i128 {
  i
}

function {:define} $zext.i64.i160(i: i64): i160 {
  i
}

function {:define} $zext.i64.i256(i: i64): i256 {
  i
}

function {:define} $zext.i80.i88(i: i80): i88 {
  i
}

function {:define} $zext.i80.i96(i: i80): i96 {
  i
}

function {:define} $zext.i80.i128(i: i80): i128 {
  i
}

function {:define} $zext.i80.i160(i: i80): i160 {
  i
}

function {:define} $zext.i80.i256(i: i80): i256 {
  i
}

function {:define} $zext.i88.i96(i: i88): i96 {
  i
}

function {:define} $zext.i88.i128(i: i88): i128 {
  i
}

function {:define} $zext.i88.i160(i: i88): i160 {
  i
}

function {:define} $zext.i88.i256(i: i88): i256 {
  i
}

function {:define} $zext.i96.i128(i: i96): i128 {
  i
}

function {:define} $zext.i96.i160(i: i96): i160 {
  i
}

function {:define} $zext.i96.i256(i: i96): i256 {
  i
}

function {:define} $zext.i128.i160(i: i128): i160 {
  i
}

function {:define} $zext.i128.i256(i: i128): i256 {
  i
}

function {:define} $zext.i160.i256(i: i160): i256 {
  i
}

function $extractvalue.i1(p: ref, i: int): i1;

function $extractvalue.i5(p: ref, i: int): i5;

function $extractvalue.i6(p: ref, i: int): i6;

function $extractvalue.i8(p: ref, i: int): i8;

function $extractvalue.i16(p: ref, i: int): i16;

function $extractvalue.i24(p: ref, i: int): i24;

function $extractvalue.i32(p: ref, i: int): i32;

function $extractvalue.i40(p: ref, i: int): i40;

function $extractvalue.i48(p: ref, i: int): i48;

function $extractvalue.i56(p: ref, i: int): i56;

function $extractvalue.i64(p: ref, i: int): i64;

function $extractvalue.i80(p: ref, i: int): i80;

function $extractvalue.i88(p: ref, i: int): i88;

function $extractvalue.i96(p: ref, i: int): i96;

function $extractvalue.i128(p: ref, i: int): i128;

function $extractvalue.i160(p: ref, i: int): i160;

function $extractvalue.i256(p: ref, i: int): i256;

function {:define} $add.ref(p1: ref, p2: ref): ref {
  $add.i64(p1, p2)
}

function {:define} $sub.ref(p1: ref, p2: ref): ref {
  $sub.i64(p1, p2)
}

function {:define} $mul.ref(p1: ref, p2: ref): ref {
  $mul.i64(p1, p2)
}

function {:define} $eq.ref(p1: ref, p2: ref): i1 {
  if $eq.i64.bool(p1, p2) then 1 else 0
}

function {:define} $eq.ref.bool(p1: ref, p2: ref): bool {
  $eq.i64.bool(p1, p2)
}

function {:define} $ne.ref(p1: ref, p2: ref): i1 {
  if $ne.i64.bool(p1, p2) then 1 else 0
}

function {:define} $ne.ref.bool(p1: ref, p2: ref): bool {
  $ne.i64.bool(p1, p2)
}

function {:define} $ugt.ref(p1: ref, p2: ref): i1 {
  if $ugt.i64.bool(p1, p2) then 1 else 0
}

function {:define} $ugt.ref.bool(p1: ref, p2: ref): bool {
  $ugt.i64.bool(p1, p2)
}

function {:define} $uge.ref(p1: ref, p2: ref): i1 {
  if $uge.i64.bool(p1, p2) then 1 else 0
}

function {:define} $uge.ref.bool(p1: ref, p2: ref): bool {
  $uge.i64.bool(p1, p2)
}

function {:define} $ult.ref(p1: ref, p2: ref): i1 {
  if $ult.i64.bool(p1, p2) then 1 else 0
}

function {:define} $ult.ref.bool(p1: ref, p2: ref): bool {
  $ult.i64.bool(p1, p2)
}

function {:define} $ule.ref(p1: ref, p2: ref): i1 {
  if $ule.i64.bool(p1, p2) then 1 else 0
}

function {:define} $ule.ref.bool(p1: ref, p2: ref): bool {
  $ule.i64.bool(p1, p2)
}

function {:define} $sgt.ref(p1: ref, p2: ref): i1 {
  if $sgt.i64.bool(p1, p2) then 1 else 0
}

function {:define} $sgt.ref.bool(p1: ref, p2: ref): bool {
  $sgt.i64.bool(p1, p2)
}

function {:define} $sge.ref(p1: ref, p2: ref): i1 {
  if $sge.i64.bool(p1, p2) then 1 else 0
}

function {:define} $sge.ref.bool(p1: ref, p2: ref): bool {
  $sge.i64.bool(p1, p2)
}

function {:define} $slt.ref(p1: ref, p2: ref): i1 {
  if $slt.i64.bool(p1, p2) then 1 else 0
}

function {:define} $slt.ref.bool(p1: ref, p2: ref): bool {
  $slt.i64.bool(p1, p2)
}

function {:define} $sle.ref(p1: ref, p2: ref): i1 {
  if $sle.i64.bool(p1, p2) then 1 else 0
}

function {:define} $sle.ref.bool(p1: ref, p2: ref): bool {
  $sle.i64.bool(p1, p2)
}

function {:define} $load.ref(M: [ref]ref, p: ref): ref {
  M[p]
}

function {:define} $store.ref(M: [ref]ref, p: ref, i: ref): [ref]ref {
  M[p := i]
}

function {:define} $bitcast.ref.ref(p: ref): ref {
  p
}

function $extractvalue.ref(p: ref, i: int): ref;

function {:define} $p2i.ref.i8(p: ref): i8 {
  $trunc.i64.i8(p)
}

function {:define} $i2p.i8.ref(i: i8): ref {
  $zext.i8.i64(i)
}

function {:define} $p2i.ref.i16(p: ref): i16 {
  $trunc.i64.i16(p)
}

function {:define} $i2p.i16.ref(i: i16): ref {
  $zext.i16.i64(i)
}

function {:define} $p2i.ref.i32(p: ref): i32 {
  $trunc.i64.i32(p)
}

function {:define} $i2p.i32.ref(i: i32): ref {
  $zext.i32.i64(i)
}

function {:define} $p2i.ref.i64(p: ref): i64 {
  p
}

function {:define} $i2p.i64.ref(i: i64): ref {
  i
}

function $fp(ipart: int, fpart: int, epart: int): float;

function $abs.float(f: float): float;

function $round.float(f: float): float;

function $sqrt.float(f: float): float;

function $fadd.float(f1: float, f2: float): float;

function $fsub.float(f1: float, f2: float): float;

function $fmul.float(f1: float, f2: float): float;

function $fdiv.float(f1: float, f2: float): float;

function $frem.float(f1: float, f2: float): float;

function $min.float(f1: float, f2: float): float;

function $max.float(f1: float, f2: float): float;

function $fma.float(f1: float, f2: float, f3: float): float;

function $foeq.float.bool(f1: float, f2: float): bool;

function $fole.float.bool(f1: float, f2: float): bool;

function $folt.float.bool(f1: float, f2: float): bool;

function $foge.float.bool(f1: float, f2: float): bool;

function $fogt.float.bool(f1: float, f2: float): bool;

function $fone.float.bool(f1: float, f2: float): bool;

function $ford.float.bool(f1: float, f2: float): bool;

function $fueq.float.bool(f1: float, f2: float): bool;

function $fugt.float.bool(f1: float, f2: float): bool;

function $fuge.float.bool(f1: float, f2: float): bool;

function $fult.float.bool(f1: float, f2: float): bool;

function $fule.float.bool(f1: float, f2: float): bool;

function $fune.float.bool(f1: float, f2: float): bool;

function $funo.float.bool(f1: float, f2: float): bool;

function $ffalse.float.bool(f1: float, f2: float): bool;

function $ftrue.float.bool(f1: float, f2: float): bool;

function $bitcast.float.i8(f: float): i8;

function $bitcast.float.i16(f: float): i16;

function $bitcast.float.i32(f: float): i32;

function $bitcast.float.i64(f: float): i64;

function $bitcast.float.i80(f: float): i80;

function $bitcast.i8.float(i: i8): float;

function $bitcast.i16.float(i: i16): float;

function $bitcast.i32.float(i: i32): float;

function $bitcast.i64.float(i: i64): float;

function $bitcast.i80.float(i: i80): float;

function $fp2si.float.i1(f: float): i1;

function $fp2si.float.i5(f: float): i5;

function $fp2si.float.i6(f: float): i6;

function $fp2si.float.i8(f: float): i8;

function $fp2si.float.i16(f: float): i16;

function $fp2si.float.i24(f: float): i24;

function $fp2si.float.i32(f: float): i32;

function $fp2si.float.i40(f: float): i40;

function $fp2si.float.i48(f: float): i48;

function $fp2si.float.i56(f: float): i56;

function $fp2si.float.i64(f: float): i64;

function $fp2si.float.i80(f: float): i80;

function $fp2si.float.i88(f: float): i88;

function $fp2si.float.i96(f: float): i96;

function $fp2si.float.i128(f: float): i128;

function $fp2si.float.i160(f: float): i160;

function $fp2si.float.i256(f: float): i256;

function $fp2ui.float.i1(f: float): i1;

function $fp2ui.float.i5(f: float): i5;

function $fp2ui.float.i6(f: float): i6;

function $fp2ui.float.i8(f: float): i8;

function $fp2ui.float.i16(f: float): i16;

function $fp2ui.float.i24(f: float): i24;

function $fp2ui.float.i32(f: float): i32;

function $fp2ui.float.i40(f: float): i40;

function $fp2ui.float.i48(f: float): i48;

function $fp2ui.float.i56(f: float): i56;

function $fp2ui.float.i64(f: float): i64;

function $fp2ui.float.i80(f: float): i80;

function $fp2ui.float.i88(f: float): i88;

function $fp2ui.float.i96(f: float): i96;

function $fp2ui.float.i128(f: float): i128;

function $fp2ui.float.i160(f: float): i160;

function $fp2ui.float.i256(f: float): i256;

function $si2fp.i1.float(i: i1): float;

function $si2fp.i5.float(i: i5): float;

function $si2fp.i6.float(i: i6): float;

function $si2fp.i8.float(i: i8): float;

function $si2fp.i16.float(i: i16): float;

function $si2fp.i24.float(i: i24): float;

function $si2fp.i32.float(i: i32): float;

function $si2fp.i40.float(i: i40): float;

function $si2fp.i48.float(i: i48): float;

function $si2fp.i56.float(i: i56): float;

function $si2fp.i64.float(i: i64): float;

function $si2fp.i80.float(i: i80): float;

function $si2fp.i88.float(i: i88): float;

function $si2fp.i96.float(i: i96): float;

function $si2fp.i128.float(i: i128): float;

function $si2fp.i160.float(i: i160): float;

function $si2fp.i256.float(i: i256): float;

function $ui2fp.i1.float(i: i1): float;

function $ui2fp.i5.float(i: i5): float;

function $ui2fp.i6.float(i: i6): float;

function $ui2fp.i8.float(i: i8): float;

function $ui2fp.i16.float(i: i16): float;

function $ui2fp.i24.float(i: i24): float;

function $ui2fp.i32.float(i: i32): float;

function $ui2fp.i40.float(i: i40): float;

function $ui2fp.i48.float(i: i48): float;

function $ui2fp.i56.float(i: i56): float;

function $ui2fp.i64.float(i: i64): float;

function $ui2fp.i80.float(i: i80): float;

function $ui2fp.i88.float(i: i88): float;

function $ui2fp.i96.float(i: i96): float;

function $ui2fp.i128.float(i: i128): float;

function $ui2fp.i160.float(i: i160): float;

function $ui2fp.i256.float(i: i256): float;

function $fpext.float.float(f: float): float;

function $fptrunc.float.float(f: float): float;

function {:define} $load.float(M: [ref]float, p: ref): float {
  M[p]
}

function {:define} $store.float(M: [ref]float, p: ref, f: float): [ref]float {
  M[p := f]
}

function {:define} $load.unsafe.float(M: [ref]i8, p: ref): float {
  $bitcast.i8.float(M[p])
}

function {:define} $store.unsafe.float(M: [ref]i8, p: ref, f: float): [ref]i8 {
  M[p := $bitcast.float.i8(f)]
}

function $extractvalue.float(p: ref, i: int): float;

const {:count 14} .str.2: ref;

axiom .str.2 == $sub.ref(0, 1038);

const env_value_str: ref;

axiom env_value_str == $sub.ref(0, 2070);

const {:count 3} .str.1.3: ref;

axiom .str.1.3 == $sub.ref(0, 3097);

const {:count 14} .str.20: ref;

axiom .str.20 == $sub.ref(0, 4135);

const errno_global: ref;

axiom errno_global == $sub.ref(0, 5163);

const resetArray: ref;

axiom resetArray == $sub.ref(0, 6195);

procedure {:inline 11} resetArray($p0: ref) {
  var $i1: i32;
  var $i2: i1;
  var $i3: i64;
  var $p4: ref;
  var $i5: i32;

  $bb0:
  assume {:sourceloc "two_arrays.c", 16, 8} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 16, 8} true;
  assume {:verifier.code 0} true;
  $i1 := 0;
  goto $bb1;
  $bb1:
  assume {:sourceloc "two_arrays.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 16, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $slt.i32($i1, 10);
  assume {:sourceloc "two_arrays.c", 16, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
  $bb2:
  assume $i2 == 1;
  assume {:sourceloc "two_arrays.c", 17, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i32.i64($i1);
  assume {:sourceloc "two_arrays.c", 17, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, $mul.ref($i3, 4));
  assume {:sourceloc "two_arrays.c", 17, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 0);
  assume {:sourceloc "two_arrays.c", 18, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
  $bb3:
  assume !($i2 == 1);
  assume {:sourceloc "two_arrays.c", 19, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
  $bb4:
  assume {:sourceloc "two_arrays.c", 16, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i32($i1, 1);
  call {:cexpr "i"} boogie_si_record_i32($i5);
  assume {:sourceloc "two_arrays.c", 16, 3} true;
  assume {:verifier.code 0} true;
  $i1 := $i5;
  goto $bb1;
}

const setArray: ref;

axiom setArray == $sub.ref(0, 7227);

procedure {:inline 11} setArray($p0: ref) {
  var $i1: i32;
  var $i2: i1;
  var $i3: i64;
  var $p4: ref;
  var $i5: i32;

  $bb0:
  assume {:sourceloc "two_arrays.c", 24, 8} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 24, 8} true;
  assume {:verifier.code 0} true;
  $i1 := 0;
  goto $bb1;
  $bb1:
  assume {:sourceloc "two_arrays.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 24, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $slt.i32($i1, 10);
  assume {:sourceloc "two_arrays.c", 24, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
  $bb2:
  assume $i2 == 1;
  assume {:sourceloc "two_arrays.c", 25, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i32.i64($i1);
  assume {:sourceloc "two_arrays.c", 25, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, $mul.ref($i3, 4));
  assume {:sourceloc "two_arrays.c", 25, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 1);
  assume {:sourceloc "two_arrays.c", 26, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
  $bb3:
  assume !($i2 == 1);
  assume {:sourceloc "two_arrays.c", 27, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
  $bb4:
  assume {:sourceloc "two_arrays.c", 24, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i32($i1, 1);
  call {:cexpr "i"} boogie_si_record_i32($i5);
  assume {:sourceloc "two_arrays.c", 24, 3} true;
  assume {:verifier.code 0} true;
  $i1 := $i5;
  goto $bb1;
}

const main: ref;

axiom main == $sub.ref(0, 8259);

procedure {:entrypoint} main() returns ($r: i32) {
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i64;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i64;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $i17: i64;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $i21: i64;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $p26: ref;
  var $p27: ref;

  $bb0:
  call $initialize();
  assume {:sourceloc "two_arrays.c", 31, 26} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "two_arrays.c", 31, 26} true;
  assume {:verifier.code 0} true;
  call $p0 := malloc(40);
  assume {:sourceloc "two_arrays.c", 31, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "two_arrays.c", 32, 26} true;
  assume {:verifier.code 0} true;
  call $p2 := malloc(40);
  assume {:sourceloc "two_arrays.c", 32, 19} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "two_arrays.c", 34, 3} true;
  assume {:verifier.code 0} true;
  call resetArray($p1);
  assume {:sourceloc "two_arrays.c", 35, 3} true;
  assume {:verifier.code 0} true;
  call setArray($p3);
  assume {:sourceloc "two_arrays.c", 37, 8} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb1;
  $bb1:
  assume {:sourceloc "two_arrays.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 37, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i4, 10);
  assume {:sourceloc "two_arrays.c", 37, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb2, $bb3;
  $bb2:
  assume $i5 == 1;
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  goto $bb4;
  $bb3:
  assume !($i5 == 1);
  assume {:sourceloc "two_arrays.c", 42, 3} true;
  assume {:verifier.code 0} true;
  call setArray($p1);
  assume {:sourceloc "two_arrays.c", 43, 3} true;
  assume {:verifier.code 0} true;
  call resetArray($p3);
  assume {:sourceloc "two_arrays.c", 45, 8} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  goto $bb15;
  $bb4:
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i4);
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, $mul.ref($i6, 4));
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 0);
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb7;
  $bb5:
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  assume $i9 == 1;
  goto $bb6;
  $bb6:
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
  $bb7:
  assume !($i9 == 1);
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assert(0);
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
  $bb8:
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
  $bb9:
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i4);
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p3, $mul.ref($i10, 4));
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 1);
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb10, $bb12;
  $bb10:
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  assume $i13 == 1;
  goto $bb11;
  $bb11:
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
  $bb12:
  assume !($i13 == 1);
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assert(0);
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
  $bb13:
  assume {:sourceloc "two_arrays.c", 40, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
  $bb14:
  assume {:sourceloc "two_arrays.c", 37, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i32($i4, 1);
  call {:cexpr "i"} boogie_si_record_i32($i14);
  assume {:sourceloc "two_arrays.c", 37, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i14;
  goto $bb1;
  $bb15:
  assume {:sourceloc "two_arrays.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 45, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $slt.i32($i15, 10);
  assume {:sourceloc "two_arrays.c", 45, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb16, $bb17;
  $bb16:
  assume $i16 == 1;
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
  $bb17:
  assume !($i16 == 1);
  assume {:sourceloc "two_arrays.c", 50, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p1);
  assume {:sourceloc "two_arrays.c", 50, 3} true;
  assume {:verifier.code 0} true;
  call free_($p26);
  assume {:sourceloc "two_arrays.c", 51, 8} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p3);
  assume {:sourceloc "two_arrays.c", 51, 3} true;
  assume {:verifier.code 0} true;
  call free_($p27);
  assume {:sourceloc "two_arrays.c", 52, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
  $bb18:
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i15);
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, $mul.ref($i17, 4));
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 1);
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb19, $bb21;
  $bb19:
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  assume $i20 == 1;
  goto $bb20;
  $bb20:
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
  $bb21:
  assume !($i20 == 1);
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assert(0);
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
  $bb22:
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
  $bb23:
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i15);
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p3, $mul.ref($i21, 4));
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 0);
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb24, $bb26;
  $bb24:
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  assume $i24 == 1;
  goto $bb25;
  $bb25:
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
  $bb26:
  assume !($i24 == 1);
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assert(0);
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
  $bb27:
  assume {:sourceloc "two_arrays.c", 48, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
  $bb28:
  assume {:sourceloc "two_arrays.c", 45, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i32($i15, 1);
  call {:cexpr "i"} boogie_si_record_i32($i25);
  assume {:sourceloc "two_arrays.c", 45, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i25;
  goto $bb15;
}

const malloc: ref;

axiom malloc == $sub.ref(0, 9291);

procedure {:inline 11} malloc($i0: i64) returns ($r: ref) {
  call $r := $malloc($i0);
}

const free_: ref;

axiom free_ == $sub.ref(0, 10323);

procedure {:inline 11} free_($p0: ref) {
  call $free($p0);
}

const __VERIFIER_assume: ref;

axiom __VERIFIER_assume == $sub.ref(0, 11355);

procedure {:inline 11} __VERIFIER_assume($i0: i32) {
  $bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 38, 3} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 39, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}

const __SMACK_code: ref;

axiom __SMACK_code == $sub.ref(0, 12387);

procedure {:inline 11} __SMACK_code.ref($p0: ref);

procedure {:inline 11} __SMACK_code.ref.i32($p0: ref, p.1: i32);

const __SMACK_dummy: ref;

axiom __SMACK_dummy == $sub.ref(0, 13419);

procedure {:inline 11} __SMACK_dummy($i0: i32) {
  $bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_dummy:arg:v"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 59} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}

const __VERIFIER_assert: ref;

axiom __VERIFIER_assert == $sub.ref(0, 14451);

procedure {:inline 11} __VERIFIER_assert($i0: i32) {
  $bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assert:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 45, 3} true;
  assume {:verifier.code 1} true;
  assert $i0 != $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 47, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}

const __SMACK_check_overflow: ref;

axiom __SMACK_check_overflow == $sub.ref(0, 15483);

procedure {:inline 11} __SMACK_check_overflow($i0: i32) {
  $bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_check_overflow:arg:flag"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 63, 3} true;
  assume {:verifier.code 1} true;
  assert {:overflow} $i0 == $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 64, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}

const __SMACK_nondet_char: ref;

axiom __SMACK_nondet_char == $sub.ref(0, 16515);

procedure {:inline 11} __SMACK_nondet_char() returns ($r: i8);

const __SMACK_nondet_signed_char: ref;

axiom __SMACK_nondet_signed_char == $sub.ref(0, 17547);

procedure {:inline 11} __SMACK_nondet_signed_char() returns ($r: i8);

const __SMACK_nondet_unsigned_char: ref;

axiom __SMACK_nondet_unsigned_char == $sub.ref(0, 18579);

procedure {:inline 11} __SMACK_nondet_unsigned_char() returns ($r: i8);

const __SMACK_nondet_short: ref;

axiom __SMACK_nondet_short == $sub.ref(0, 19611);

procedure {:inline 11} __SMACK_nondet_short() returns ($r: i16);

const __SMACK_nondet_signed_short: ref;

axiom __SMACK_nondet_signed_short == $sub.ref(0, 20643);

procedure {:inline 11} __SMACK_nondet_signed_short() returns ($r: i16);

const __SMACK_nondet_signed_short_int: ref;

axiom __SMACK_nondet_signed_short_int == $sub.ref(0, 21675);

procedure {:inline 11} __SMACK_nondet_signed_short_int() returns ($r: i16);

const __SMACK_nondet_unsigned_short: ref;

axiom __SMACK_nondet_unsigned_short == $sub.ref(0, 22707);

procedure {:inline 11} __SMACK_nondet_unsigned_short() returns ($r: i16);

const __SMACK_nondet_unsigned_short_int: ref;

axiom __SMACK_nondet_unsigned_short_int == $sub.ref(0, 23739);

procedure {:inline 11} __SMACK_nondet_unsigned_short_int() returns ($r: i16);

const __SMACK_nondet_int: ref;

axiom __SMACK_nondet_int == $sub.ref(0, 24771);

procedure {:inline 11} __SMACK_nondet_int() returns ($r: i32);

const __SMACK_nondet_signed_int: ref;

axiom __SMACK_nondet_signed_int == $sub.ref(0, 25803);

procedure {:inline 11} __SMACK_nondet_signed_int() returns ($r: i32);

const __SMACK_nondet_unsigned: ref;

axiom __SMACK_nondet_unsigned == $sub.ref(0, 26835);

procedure {:inline 11} __SMACK_nondet_unsigned() returns ($r: i32);

const __SMACK_nondet_unsigned_int: ref;

axiom __SMACK_nondet_unsigned_int == $sub.ref(0, 27867);

procedure {:inline 11} __SMACK_nondet_unsigned_int() returns ($r: i32);

const __SMACK_nondet_long: ref;

axiom __SMACK_nondet_long == $sub.ref(0, 28899);

procedure {:inline 11} __SMACK_nondet_long() returns ($r: i64);

const __SMACK_nondet_long_int: ref;

axiom __SMACK_nondet_long_int == $sub.ref(0, 29931);

procedure {:inline 11} __SMACK_nondet_long_int() returns ($r: i64);

const __SMACK_nondet_signed_long: ref;

axiom __SMACK_nondet_signed_long == $sub.ref(0, 30963);

procedure {:inline 11} __SMACK_nondet_signed_long() returns ($r: i64);

const __SMACK_nondet_signed_long_int: ref;

axiom __SMACK_nondet_signed_long_int == $sub.ref(0, 31995);

procedure {:inline 11} __SMACK_nondet_signed_long_int() returns ($r: i64);

const __SMACK_nondet_unsigned_long: ref;

axiom __SMACK_nondet_unsigned_long == $sub.ref(0, 33027);

procedure {:inline 11} __SMACK_nondet_unsigned_long() returns ($r: i64);

const __SMACK_nondet_unsigned_long_int: ref;

axiom __SMACK_nondet_unsigned_long_int == $sub.ref(0, 34059);

procedure {:inline 11} __SMACK_nondet_unsigned_long_int() returns ($r: i64);

const __SMACK_nondet_long_long: ref;

axiom __SMACK_nondet_long_long == $sub.ref(0, 35091);

procedure {:inline 11} __SMACK_nondet_long_long() returns ($r: i64);

const __SMACK_nondet_long_long_int: ref;

axiom __SMACK_nondet_long_long_int == $sub.ref(0, 36123);

procedure {:inline 11} __SMACK_nondet_long_long_int() returns ($r: i64);

const __SMACK_nondet_signed_long_long: ref;

axiom __SMACK_nondet_signed_long_long == $sub.ref(0, 37155);

procedure {:inline 11} __SMACK_nondet_signed_long_long() returns ($r: i64);

const __SMACK_nondet_signed_long_long_int: ref;

axiom __SMACK_nondet_signed_long_long_int == $sub.ref(0, 38187);

procedure {:inline 11} __SMACK_nondet_signed_long_long_int() returns ($r: i64);

const __SMACK_nondet_unsigned_long_long: ref;

axiom __SMACK_nondet_unsigned_long_long == $sub.ref(0, 39219);

procedure {:inline 11} __SMACK_nondet_unsigned_long_long() returns ($r: i64);

const __SMACK_nondet_unsigned_long_long_int: ref;

axiom __SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 40251);

procedure {:inline 11} __SMACK_nondet_unsigned_long_long_int() returns ($r: i64);

const __SMACK_decls: ref;

axiom __SMACK_decls == $sub.ref(0, 41283);

type $mop;

procedure {:inline 11} boogie_si_record_mop(m: $mop);

const $MOP: $mop;

var $exn: bool;

var $exnv: int;

procedure {:inline 11} corral_atomic_begin();

procedure {:inline 11} corral_atomic_end();

procedure {:inline 11} $alloc(n: ref) returns (p: ref) {
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

procedure {:inline 11} $malloc(n: ref) returns (p: ref) {
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

var $CurrAddr: ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
  modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure {:inline 11} $free(p: ref);

const __SMACK_top_decl: ref;

axiom __SMACK_top_decl == $sub.ref(0, 42315);

procedure {:inline 11} __SMACK_top_decl.ref($p0: ref);

const __SMACK_init_func_memory_model: ref;

axiom __SMACK_init_func_memory_model == $sub.ref(0, 43347);

procedure {:inline 11} __SMACK_init_func_memory_model() {
  $bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 544, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}

const __VERIFIER_atomic_begin: ref;

axiom __VERIFIER_atomic_begin == $sub.ref(0, 44379);

procedure {:inline 11} __VERIFIER_atomic_begin() {
  $bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  call corral_atomic_begin();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 79} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}

const __VERIFIER_atomic_end: ref;

axiom __VERIFIER_atomic_end == $sub.ref(0, 45411);

procedure {:inline 11} __VERIFIER_atomic_end() {
  $bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  call corral_atomic_end();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 75} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}

const llvm.dbg.value: ref;

axiom llvm.dbg.value == $sub.ref(0, 46443);

procedure {:inline 11} llvm.dbg.value($p0: ref, $p1: ref, $p2: ref);

const __SMACK_static_init: ref;

axiom __SMACK_static_init == $sub.ref(0, 47475);

procedure {:inline 11} __SMACK_static_init() {
  $bb0:
  $M.1 := .str.1.3;
  $M.2 := 0;
  call {:cexpr "errno_global"} boogie_si_record_i32(0);
  $exn := false;
  return;
}

procedure {:inline 11} boogie_si_record_i32(x: i32);

procedure {:inline 11} boogie_si_record_ref(x: ref);

procedure {:inline 11} $initialize() {
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}

[Input - ../../vendor/boogie/Test/smack/git-issue-203-define.bpl]
// generated by SMACK version 2.4.0 for boogie
// via /usr/local/bin/smack two_arrays.c --loop-limit=11 --unroll=11 --verifier=boogie --debug --bpl=pero.bpl

// RUN: %boogie -doModSetAnalysis -timeLimit:1200 -errorLimit:1 -loopUnroll:15 -useArrayTheory "%s" > "%t"
// RUN: %diff "%s.expect" "%t"

// Basic types
type i1 = int;
type i5 = int;
type i6 = int;
type i8 = int;
type i16 = int;
type i24 = int;
type i32 = int;
type i40 = int;
type i48 = int;
type i56 = int;
type i64 = int;
type i80 = int;
type i88 = int;
type i96 = int;
type i128 = int;
type i160 = int;
type i256 = int;
type ref = i64;
type float;

// Basic constants
const $0: i32;
axiom ($0 == 0);
const $1: i32;
axiom ($1 == 1);
const $0.ref: ref;
axiom ($0.ref == 0);
const $1.ref: ref;
axiom ($1.ref == 1);
const $1024.ref: ref;
axiom ($1024.ref == 1024);
// Memory model constants
const $GLOBALS_BOTTOM: ref;
const $EXTERNS_BOTTOM: ref;
const $MALLOC_TOP: ref;

// Memory maps (3 regions)
var $M.0: [ref] i32;
var $M.1: ref;
var $M.2: i32;

// Memory address bounds
axiom ($GLOBALS_BOTTOM == $sub.ref(0, 47475));
axiom ($EXTERNS_BOTTOM == $add.ref($GLOBALS_BOTTOM, $sub.ref(0, 32768)));
axiom ($MALLOC_TOP == 9223372036854775807);
function {:define} $isExternal(p: ref) returns (bool) { $slt.ref.bool(p, $EXTERNS_BOTTOM) }

// SMT bit-vector/integer conversion
function {:builtin "(_ int2bv 64)"} $int2bv.64(i: i64) returns (bv64);
function {:builtin "bv2nat"} $bv2int.64(i: bv64) returns (i64);

// Integer arithmetic operations
function {:define} $add.i1(i1: i1, i2: i1) returns (i1) { (i1 + i2) }
function {:define} $add.i5(i1: i5, i2: i5) returns (i5) { (i1 + i2) }
function {:define} $add.i6(i1: i6, i2: i6) returns (i6) { (i1 + i2) }
function {:define} $add.i8(i1: i8, i2: i8) returns (i8) { (i1 + i2) }
function {:define} $add.i16(i1: i16, i2: i16) returns (i16) { (i1 + i2) }
function {:define} $add.i24(i1: i24, i2: i24) returns (i24) { (i1 + i2) }
function {:define} $add.i32(i1: i32, i2: i32) returns (i32) { (i1 + i2) }
function {:define} $add.i40(i1: i40, i2: i40) returns (i40) { (i1 + i2) }
function {:define} $add.i48(i1: i48, i2: i48) returns (i48) { (i1 + i2) }
function {:define} $add.i56(i1: i56, i2: i56) returns (i56) { (i1 + i2) }
function {:define} $add.i64(i1: i64, i2: i64) returns (i64) { (i1 + i2) }
function {:define} $add.i80(i1: i80, i2: i80) returns (i80) { (i1 + i2) }
function {:define} $add.i88(i1: i88, i2: i88) returns (i88) { (i1 + i2) }
function {:define} $add.i96(i1: i96, i2: i96) returns (i96) { (i1 + i2) }
function {:define} $add.i128(i1: i128, i2: i128) returns (i128) { (i1 + i2) }
function {:define} $add.i160(i1: i160, i2: i160) returns (i160) { (i1 + i2) }
function {:define} $add.i256(i1: i256, i2: i256) returns (i256) { (i1 + i2) }
function {:define} $sub.i1(i1: i1, i2: i1) returns (i1) { (i1 - i2) }
function {:define} $sub.i5(i1: i5, i2: i5) returns (i5) { (i1 - i2) }
function {:define} $sub.i6(i1: i6, i2: i6) returns (i6) { (i1 - i2) }
function {:define} $sub.i8(i1: i8, i2: i8) returns (i8) { (i1 - i2) }
function {:define} $sub.i16(i1: i16, i2: i16) returns (i16) { (i1 - i2) }
function {:define} $sub.i24(i1: i24, i2: i24) returns (i24) { (i1 - i2) }
function {:define} $sub.i32(i1: i32, i2: i32) returns (i32) { (i1 - i2) }
function {:define} $sub.i40(i1: i40, i2: i40) returns (i40) { (i1 - i2) }
function {:define} $sub.i48(i1: i48, i2: i48) returns (i48) { (i1 - i2) }
function {:define} $sub.i56(i1: i56, i2: i56) returns (i56) { (i1 - i2) }
function {:define} $sub.i64(i1: i64, i2: i64) returns (i64) { (i1 - i2) }
function {:define} $sub.i80(i1: i80, i2: i80) returns (i80) { (i1 - i2) }
function {:define} $sub.i88(i1: i88, i2: i88) returns (i88) { (i1 - i2) }
function {:define} $sub.i96(i1: i96, i2: i96) returns (i96) { (i1 - i2) }
function {:define} $sub.i128(i1: i128, i2: i128) returns (i128) { (i1 - i2) }
function {:define} $sub.i160(i1: i160, i2: i160) returns (i160) { (i1 - i2) }
function {:define} $sub.i256(i1: i256, i2: i256) returns (i256) { (i1 - i2) }
function {:define} $mul.i1(i1: i1, i2: i1) returns (i1) { (i1 * i2) }
function {:define} $mul.i5(i1: i5, i2: i5) returns (i5) { (i1 * i2) }
function {:define} $mul.i6(i1: i6, i2: i6) returns (i6) { (i1 * i2) }
function {:define} $mul.i8(i1: i8, i2: i8) returns (i8) { (i1 * i2) }
function {:define} $mul.i16(i1: i16, i2: i16) returns (i16) { (i1 * i2) }
function {:define} $mul.i24(i1: i24, i2: i24) returns (i24) { (i1 * i2) }
function {:define} $mul.i32(i1: i32, i2: i32) returns (i32) { (i1 * i2) }
function {:define} $mul.i40(i1: i40, i2: i40) returns (i40) { (i1 * i2) }
function {:define} $mul.i48(i1: i48, i2: i48) returns (i48) { (i1 * i2) }
function {:define} $mul.i56(i1: i56, i2: i56) returns (i56) { (i1 * i2) }
function {:define} $mul.i64(i1: i64, i2: i64) returns (i64) { (i1 * i2) }
function {:define} $mul.i80(i1: i80, i2: i80) returns (i80) { (i1 * i2) }
function {:define} $mul.i88(i1: i88, i2: i88) returns (i88) { (i1 * i2) }
function {:define} $mul.i96(i1: i96, i2: i96) returns (i96) { (i1 * i2) }
function {:define} $mul.i128(i1: i128, i2: i128) returns (i128) { (i1 * i2) }
function {:define} $mul.i160(i1: i160, i2: i160) returns (i160) { (i1 * i2) }
function {:define} $mul.i256(i1: i256, i2: i256) returns (i256) { (i1 * i2) }
function {:builtin "div"} $sdiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $sdiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $sdiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $sdiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $sdiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $sdiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $sdiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $sdiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $sdiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $sdiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $sdiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $sdiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $sdiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $sdiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $sdiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $sdiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $sdiv.i256(i1: i256, i2: i256) returns (i256);
function {:builtin "mod"} $smod.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "mod"} $smod.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "mod"} $smod.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "mod"} $smod.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "mod"} $smod.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "mod"} $smod.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "mod"} $smod.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "mod"} $smod.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "mod"} $smod.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "mod"} $smod.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "mod"} $smod.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "mod"} $smod.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "mod"} $smod.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "mod"} $smod.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "mod"} $smod.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "mod"} $smod.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "mod"} $smod.i256(i1: i256, i2: i256) returns (i256);
function {:builtin "div"} $udiv.i1(i1: i1, i2: i1) returns (i1);
function {:builtin "div"} $udiv.i5(i1: i5, i2: i5) returns (i5);
function {:builtin "div"} $udiv.i6(i1: i6, i2: i6) returns (i6);
function {:builtin "div"} $udiv.i8(i1: i8, i2: i8) returns (i8);
function {:builtin "div"} $udiv.i16(i1: i16, i2: i16) returns (i16);
function {:builtin "div"} $udiv.i24(i1: i24, i2: i24) returns (i24);
function {:builtin "div"} $udiv.i32(i1: i32, i2: i32) returns (i32);
function {:builtin "div"} $udiv.i40(i1: i40, i2: i40) returns (i40);
function {:builtin "div"} $udiv.i48(i1: i48, i2: i48) returns (i48);
function {:builtin "div"} $udiv.i56(i1: i56, i2: i56) returns (i56);
function {:builtin "div"} $udiv.i64(i1: i64, i2: i64) returns (i64);
function {:builtin "div"} $udiv.i80(i1: i80, i2: i80) returns (i80);
function {:builtin "div"} $udiv.i88(i1: i88, i2: i88) returns (i88);
function {:builtin "div"} $udiv.i96(i1: i96, i2: i96) returns (i96);
function {:builtin "div"} $udiv.i128(i1: i128, i2: i128) returns (i128);
function {:builtin "div"} $udiv.i160(i1: i160, i2: i160) returns (i160);
function {:builtin "div"} $udiv.i256(i1: i256, i2: i256) returns (i256);
function {:define} $srem.i1(i1: i1, i2: i1) returns (i1) { (if ($ne.i1.bool($smod.i1(i1, i2), 0) && $slt.i1.bool(i1, 0)) then $sub.i1($smod.i1(i1, i2), $smax.i1(i2, $sub.i1(0, i2))) else $smod.i1(i1, i2)) }
function {:define} $srem.i5(i1: i5, i2: i5) returns (i5) { (if ($ne.i5.bool($smod.i5(i1, i2), 0) && $slt.i5.bool(i1, 0)) then $sub.i5($smod.i5(i1, i2), $smax.i5(i2, $sub.i5(0, i2))) else $smod.i5(i1, i2)) }
function {:define} $srem.i6(i1: i6, i2: i6) returns (i6) { (if ($ne.i6.bool($smod.i6(i1, i2), 0) && $slt.i6.bool(i1, 0)) then $sub.i6($smod.i6(i1, i2), $smax.i6(i2, $sub.i6(0, i2))) else $smod.i6(i1, i2)) }
function {:define} $srem.i8(i1: i8, i2: i8) returns (i8) { (if ($ne.i8.bool($smod.i8(i1, i2), 0) && $slt.i8.bool(i1, 0)) then $sub.i8($smod.i8(i1, i2), $smax.i8(i2, $sub.i8(0, i2))) else $smod.i8(i1, i2)) }
function {:define} $srem.i16(i1: i16, i2: i16) returns (i16) { (if ($ne.i16.bool($smod.i16(i1, i2), 0) && $slt.i16.bool(i1, 0)) then $sub.i16($smod.i16(i1, i2), $smax.i16(i2, $sub.i16(0, i2))) else $smod.i16(i1, i2)) }
function {:define} $srem.i24(i1: i24, i2: i24) returns (i24) { (if ($ne.i24.bool($smod.i24(i1, i2), 0) && $slt.i24.bool(i1, 0)) then $sub.i24($smod.i24(i1, i2), $smax.i24(i2, $sub.i24(0, i2))) else $smod.i24(i1, i2)) }
function {:define} $srem.i32(i1: i32, i2: i32) returns (i32) { (if ($ne.i32.bool($smod.i32(i1, i2), 0) && $slt.i32.bool(i1, 0)) then $sub.i32($smod.i32(i1, i2), $smax.i32(i2, $sub.i32(0, i2))) else $smod.i32(i1, i2)) }
function {:define} $srem.i40(i1: i40, i2: i40) returns (i40) { (if ($ne.i40.bool($smod.i40(i1, i2), 0) && $slt.i40.bool(i1, 0)) then $sub.i40($smod.i40(i1, i2), $smax.i40(i2, $sub.i40(0, i2))) else $smod.i40(i1, i2)) }
function {:define} $srem.i48(i1: i48, i2: i48) returns (i48) { (if ($ne.i48.bool($smod.i48(i1, i2), 0) && $slt.i48.bool(i1, 0)) then $sub.i48($smod.i48(i1, i2), $smax.i48(i2, $sub.i48(0, i2))) else $smod.i48(i1, i2)) }
function {:define} $srem.i56(i1: i56, i2: i56) returns (i56) { (if ($ne.i56.bool($smod.i56(i1, i2), 0) && $slt.i56.bool(i1, 0)) then $sub.i56($smod.i56(i1, i2), $smax.i56(i2, $sub.i56(0, i2))) else $smod.i56(i1, i2)) }
function {:define} $srem.i64(i1: i64, i2: i64) returns (i64) { (if ($ne.i64.bool($smod.i64(i1, i2), 0) && $slt.i64.bool(i1, 0)) then $sub.i64($smod.i64(i1, i2), $smax.i64(i2, $sub.i64(0, i2))) else $smod.i64(i1, i2)) }
function {:define} $srem.i80(i1: i80, i2: i80) returns (i80) { (if ($ne.i80.bool($smod.i80(i1, i2), 0) && $slt.i80.bool(i1, 0)) then $sub.i80($smod.i80(i1, i2), $smax.i80(i2, $sub.i80(0, i2))) else $smod.i80(i1, i2)) }
function {:define} $srem.i88(i1: i88, i2: i88) returns (i88) { (if ($ne.i88.bool($smod.i88(i1, i2), 0) && $slt.i88.bool(i1, 0)) then $sub.i88($smod.i88(i1, i2), $smax.i88(i2, $sub.i88(0, i2))) else $smod.i88(i1, i2)) }
function {:define} $srem.i96(i1: i96, i2: i96) returns (i96) { (if ($ne.i96.bool($smod.i96(i1, i2), 0) && $slt.i96.bool(i1, 0)) then $sub.i96($smod.i96(i1, i2), $smax.i96(i2, $sub.i96(0, i2))) else $smod.i96(i1, i2)) }
function {:define} $srem.i128(i1: i128, i2: i128) returns (i128) { (if ($ne.i128.bool($smod.i128(i1, i2), 0) && $slt.i128.bool(i1, 0)) then $sub.i128($smod.i128(i1, i2), $smax.i128(i2, $sub.i128(0, i2))) else $smod.i128(i1, i2)) }
function {:define} $srem.i160(i1: i160, i2: i160) returns (i160) { (if ($ne.i160.bool($smod.i160(i1, i2), 0) && $slt.i160.bool(i1, 0)) then $sub.i160($smod.i160(i1, i2), $smax.i160(i2, $sub.i160(0, i2))) else $smod.i160(i1, i2)) }
function {:define} $srem.i256(i1: i256, i2: i256) returns (i256) { (if ($ne.i256.bool($smod.i256(i1, i2), 0) && $slt.i256.bool(i1, 0)) then $sub.i256($smod.i256(i1, i2), $smax.i256(i2, $sub.i256(0, i2))) else $smod.i256(i1, i2)) }
function {:define} $urem.i1(i1: i1, i2: i1) returns (i1) { $smod.i1(i1, i2) }
function {:define} $urem.i5(i1: i5, i2: i5) returns (i5) { $smod.i5(i1, i2) }
function {:define} $urem.i6(i1: i6, i2: i6) returns (i6) { $smod.i6(i1, i2) }
function {:define} $urem.i8(i1: i8, i2: i8) returns (i8) { $smod.i8(i1, i2) }
function {:define} $urem.i16(i1: i16, i2: i16) returns (i16) { $smod.i16(i1, i2) }
function {:define} $urem.i24(i1: i24, i2: i24) returns (i24) { $smod.i24(i1, i2) }
function {:define} $urem.i32(i1: i32, i2: i32) returns (i32) { $smod.i32(i1, i2) }
function {:define} $urem.i40(i1: i40, i2: i40) returns (i40) { $smod.i40(i1, i2) }
function {:define} $urem.i48(i1: i48, i2: i48) returns (i48) { $smod.i48(i1, i2) }
function {:define} $urem.i56(i1: i56, i2: i56) returns (i56) { $smod.i56(i1, i2) }
function {:define} $urem.i64(i1: i64, i2: i64) returns (i64) { $smod.i64(i1, i2) }
function {:define} $urem.i80(i1: i80, i2: i80) returns (i80) { $smod.i80(i1, i2) }
function {:define} $urem.i88(i1: i88, i2: i88) returns (i88) { $smod.i88(i1, i2) }
function {:define} $urem.i96(i1: i96, i2: i96) returns (i96) { $smod.i96(i1, i2) }
function {:define} $urem.i128(i1: i128, i2: i128) returns (i128) { $smod.i128(i1, i2) }
function {:define} $urem.i160(i1: i160, i2: i160) returns (i160) { $smod.i160(i1, i2) }
function {:define} $urem.i256(i1: i256, i2: i256) returns (i256) { $smod.i256(i1, i2) }
function $shl.i1(i1: i1, i2: i1) returns (i1);
function $shl.i5(i1: i5, i2: i5) returns (i5);
function $shl.i6(i1: i6, i2: i6) returns (i6);
function $shl.i8(i1: i8, i2: i8) returns (i8);
function $shl.i16(i1: i16, i2: i16) returns (i16);
function $shl.i24(i1: i24, i2: i24) returns (i24);
function $shl.i32(i1: i32, i2: i32) returns (i32);
function $shl.i40(i1: i40, i2: i40) returns (i40);
function $shl.i48(i1: i48, i2: i48) returns (i48);
function $shl.i56(i1: i56, i2: i56) returns (i56);
function $shl.i64(i1: i64, i2: i64) returns (i64);
function $shl.i80(i1: i80, i2: i80) returns (i80);
function $shl.i88(i1: i88, i2: i88) returns (i88);
function $shl.i96(i1: i96, i2: i96) returns (i96);
function $shl.i128(i1: i128, i2: i128) returns (i128);
function $shl.i160(i1: i160, i2: i160) returns (i160);
function $shl.i256(i1: i256, i2: i256) returns (i256);
function $lshr.i1(i1: i1, i2: i1) returns (i1);
function $lshr.i5(i1: i5, i2: i5) returns (i5);
function $lshr.i6(i1: i6, i2: i6) returns (i6);
function $lshr.i8(i1: i8, i2: i8) returns (i8);
function $lshr.i16(i1: i16, i2: i16) returns (i16);
function $lshr.i24(i1: i24, i2: i24) returns (i24);
function $lshr.i32(i1: i32, i2: i32) returns (i32);
function $lshr.i40(i1: i40, i2: i40) returns (i40);
function $lshr.i48(i1: i48, i2: i48) returns (i48);
function $lshr.i56(i1: i56, i2: i56) returns (i56);
function $lshr.i64(i1: i64, i2: i64) returns (i64);
function $lshr.i80(i1: i80, i2: i80) returns (i80);
function $lshr.i88(i1: i88, i2: i88) returns (i88);
function $lshr.i96(i1: i96, i2: i96) returns (i96);
function $lshr.i128(i1: i128, i2: i128) returns (i128);
function $lshr.i160(i1: i160, i2: i160) returns (i160);
function $lshr.i256(i1: i256, i2: i256) returns (i256);
function $ashr.i1(i1: i1, i2: i1) returns (i1);
function $ashr.i5(i1: i5, i2: i5) returns (i5);
function $ashr.i6(i1: i6, i2: i6) returns (i6);
function $ashr.i8(i1: i8, i2: i8) returns (i8);
function $ashr.i16(i1: i16, i2: i16) returns (i16);
function $ashr.i24(i1: i24, i2: i24) returns (i24);
function $ashr.i32(i1: i32, i2: i32) returns (i32);
function $ashr.i40(i1: i40, i2: i40) returns (i40);
function $ashr.i48(i1: i48, i2: i48) returns (i48);
function $ashr.i56(i1: i56, i2: i56) returns (i56);
function $ashr.i64(i1: i64, i2: i64) returns (i64);
function $ashr.i80(i1: i80, i2: i80) returns (i80);
function $ashr.i88(i1: i88, i2: i88) returns (i88);
function $ashr.i96(i1: i96, i2: i96) returns (i96);
function $ashr.i128(i1: i128, i2: i128) returns (i128);
function $ashr.i160(i1: i160, i2: i160) returns (i160);
function $ashr.i256(i1: i256, i2: i256) returns (i256);
function $and.i1(i1: i1, i2: i1) returns (i1);
function $and.i5(i1: i5, i2: i5) returns (i5);
function $and.i6(i1: i6, i2: i6) returns (i6);
function $and.i8(i1: i8, i2: i8) returns (i8);
function $and.i16(i1: i16, i2: i16) returns (i16);
function $and.i24(i1: i24, i2: i24) returns (i24);
function $and.i32(i1: i32, i2: i32) returns (i32);
function $and.i40(i1: i40, i2: i40) returns (i40);
function $and.i48(i1: i48, i2: i48) returns (i48);
function $and.i56(i1: i56, i2: i56) returns (i56);
function $and.i64(i1: i64, i2: i64) returns (i64);
function $and.i80(i1: i80, i2: i80) returns (i80);
function $and.i88(i1: i88, i2: i88) returns (i88);
function $and.i96(i1: i96, i2: i96) returns (i96);
function $and.i128(i1: i128, i2: i128) returns (i128);
function $and.i160(i1: i160, i2: i160) returns (i160);
function $and.i256(i1: i256, i2: i256) returns (i256);
function $or.i1(i1: i1, i2: i1) returns (i1);
function $or.i5(i1: i5, i2: i5) returns (i5);
function $or.i6(i1: i6, i2: i6) returns (i6);
function $or.i8(i1: i8, i2: i8) returns (i8);
function $or.i16(i1: i16, i2: i16) returns (i16);
function $or.i24(i1: i24, i2: i24) returns (i24);
function $or.i32(i1: i32, i2: i32) returns (i32);
function $or.i40(i1: i40, i2: i40) returns (i40);
function $or.i48(i1: i48, i2: i48) returns (i48);
function $or.i56(i1: i56, i2: i56) returns (i56);
function $or.i64(i1: i64, i2: i64) returns (i64);
function $or.i80(i1: i80, i2: i80) returns (i80);
function $or.i88(i1: i88, i2: i88) returns (i88);
function $or.i96(i1: i96, i2: i96) returns (i96);
function $or.i128(i1: i128, i2: i128) returns (i128);
function $or.i160(i1: i160, i2: i160) returns (i160);
function $or.i256(i1: i256, i2: i256) returns (i256);
function $xor.i1(i1: i1, i2: i1) returns (i1);
function $xor.i5(i1: i5, i2: i5) returns (i5);
function $xor.i6(i1: i6, i2: i6) returns (i6);
function $xor.i8(i1: i8, i2: i8) returns (i8);
function $xor.i16(i1: i16, i2: i16) returns (i16);
function $xor.i24(i1: i24, i2: i24) returns (i24);
function $xor.i32(i1: i32, i2: i32) returns (i32);
function $xor.i40(i1: i40, i2: i40) returns (i40);
function $xor.i48(i1: i48, i2: i48) returns (i48);
function $xor.i56(i1: i56, i2: i56) returns (i56);
function $xor.i64(i1: i64, i2: i64) returns (i64);
function $xor.i80(i1: i80, i2: i80) returns (i80);
function $xor.i88(i1: i88, i2: i88) returns (i88);
function $xor.i96(i1: i96, i2: i96) returns (i96);
function $xor.i128(i1: i128, i2: i128) returns (i128);
function $xor.i160(i1: i160, i2: i160) returns (i160);
function $xor.i256(i1: i256, i2: i256) returns (i256);
function $nand.i1(i1: i1, i2: i1) returns (i1);
function $nand.i5(i1: i5, i2: i5) returns (i5);
function $nand.i6(i1: i6, i2: i6) returns (i6);
function $nand.i8(i1: i8, i2: i8) returns (i8);
function $nand.i16(i1: i16, i2: i16) returns (i16);
function $nand.i24(i1: i24, i2: i24) returns (i24);
function $nand.i32(i1: i32, i2: i32) returns (i32);
function $nand.i40(i1: i40, i2: i40) returns (i40);
function $nand.i48(i1: i48, i2: i48) returns (i48);
function $nand.i56(i1: i56, i2: i56) returns (i56);
function $nand.i64(i1: i64, i2: i64) returns (i64);
function $nand.i80(i1: i80, i2: i80) returns (i80);
function $nand.i88(i1: i88, i2: i88) returns (i88);
function $nand.i96(i1: i96, i2: i96) returns (i96);
function $nand.i128(i1: i128, i2: i128) returns (i128);
function $nand.i160(i1: i160, i2: i160) returns (i160);
function $nand.i256(i1: i256, i2: i256) returns (i256);
function $not.i1(i: i1) returns (i1);
function $not.i5(i: i5) returns (i5);
function $not.i6(i: i6) returns (i6);
function $not.i8(i: i8) returns (i8);
function $not.i16(i: i16) returns (i16);
function $not.i24(i: i24) returns (i24);
function $not.i32(i: i32) returns (i32);
function $not.i40(i: i40) returns (i40);
function $not.i48(i: i48) returns (i48);
function $not.i56(i: i56) returns (i56);
function $not.i64(i: i64) returns (i64);
function $not.i80(i: i80) returns (i80);
function $not.i88(i: i88) returns (i88);
function $not.i96(i: i96) returns (i96);
function $not.i128(i: i128) returns (i128);
function $not.i160(i: i160) returns (i160);
function $not.i256(i: i256) returns (i256);
function {:define} $smin.i1(i1: i1, i2: i1) returns (i1) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i5(i1: i5, i2: i5) returns (i5) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i6(i1: i6, i2: i6) returns (i6) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i8(i1: i8, i2: i8) returns (i8) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i16(i1: i16, i2: i16) returns (i16) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i24(i1: i24, i2: i24) returns (i24) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i32(i1: i32, i2: i32) returns (i32) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i40(i1: i40, i2: i40) returns (i40) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i48(i1: i48, i2: i48) returns (i48) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i56(i1: i56, i2: i56) returns (i56) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i64(i1: i64, i2: i64) returns (i64) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i80(i1: i80, i2: i80) returns (i80) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i88(i1: i88, i2: i88) returns (i88) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i96(i1: i96, i2: i96) returns (i96) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i128(i1: i128, i2: i128) returns (i128) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i160(i1: i160, i2: i160) returns (i160) { (if (i1 < i2) then i1 else i2) }
function {:define} $smin.i256(i1: i256, i2: i256) returns (i256) { (if (i1 < i2) then i1 else i2) }
function {:define} $smax.i1(i1: i1, i2: i1) returns (i1) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i5(i1: i5, i2: i5) returns (i5) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i6(i1: i6, i2: i6) returns (i6) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i8(i1: i8, i2: i8) returns (i8) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i16(i1: i16, i2: i16) returns (i16) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i24(i1: i24, i2: i24) returns (i24) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i32(i1: i32, i2: i32) returns (i32) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i40(i1: i40, i2: i40) returns (i40) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i48(i1: i48, i2: i48) returns (i48) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i56(i1: i56, i2: i56) returns (i56) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i64(i1: i64, i2: i64) returns (i64) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i80(i1: i80, i2: i80) returns (i80) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i88(i1: i88, i2: i88) returns (i88) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i96(i1: i96, i2: i96) returns (i96) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i128(i1: i128, i2: i128) returns (i128) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i160(i1: i160, i2: i160) returns (i160) { (if (i2 < i1) then i1 else i2) }
function {:define} $smax.i256(i1: i256, i2: i256) returns (i256) { (if (i2 < i1) then i1 else i2) }
function {:define} $umin.i1(i1: i1, i2: i1) returns (i1) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i5(i1: i5, i2: i5) returns (i5) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i6(i1: i6, i2: i6) returns (i6) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i8(i1: i8, i2: i8) returns (i8) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i16(i1: i16, i2: i16) returns (i16) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i24(i1: i24, i2: i24) returns (i24) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i32(i1: i32, i2: i32) returns (i32) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i40(i1: i40, i2: i40) returns (i40) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i48(i1: i48, i2: i48) returns (i48) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i56(i1: i56, i2: i56) returns (i56) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i64(i1: i64, i2: i64) returns (i64) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i80(i1: i80, i2: i80) returns (i80) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i88(i1: i88, i2: i88) returns (i88) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i96(i1: i96, i2: i96) returns (i96) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i128(i1: i128, i2: i128) returns (i128) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i160(i1: i160, i2: i160) returns (i160) { (if (i1 < i2) then i1 else i2) }
function {:define} $umin.i256(i1: i256, i2: i256) returns (i256) { (if (i1 < i2) then i1 else i2) }
function {:define} $umax.i1(i1: i1, i2: i1) returns (i1) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i5(i1: i5, i2: i5) returns (i5) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i6(i1: i6, i2: i6) returns (i6) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i8(i1: i8, i2: i8) returns (i8) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i16(i1: i16, i2: i16) returns (i16) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i24(i1: i24, i2: i24) returns (i24) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i32(i1: i32, i2: i32) returns (i32) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i40(i1: i40, i2: i40) returns (i40) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i48(i1: i48, i2: i48) returns (i48) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i56(i1: i56, i2: i56) returns (i56) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i64(i1: i64, i2: i64) returns (i64) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i80(i1: i80, i2: i80) returns (i80) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i88(i1: i88, i2: i88) returns (i88) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i96(i1: i96, i2: i96) returns (i96) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i128(i1: i128, i2: i128) returns (i128) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i160(i1: i160, i2: i160) returns (i160) { (if (i2 < i1) then i1 else i2) }
function {:define} $umax.i256(i1: i256, i2: i256) returns (i256) { (if (i2 < i1) then i1 else i2) }
axiom ($and.i1(0, 0) == 0);
axiom ($or.i1(0, 0) == 0);
axiom ($xor.i1(0, 0) == 0);
axiom ($and.i1(0, 1) == 0);
axiom ($or.i1(0, 1) == 1);
axiom ($xor.i1(0, 1) == 1);
axiom ($and.i1(1, 0) == 0);
axiom ($or.i1(1, 0) == 1);
axiom ($xor.i1(1, 0) == 1);
axiom ($and.i1(1, 1) == 1);
axiom ($or.i1(1, 1) == 1);
axiom ($xor.i1(1, 1) == 0);
axiom ($and.i32(32, 16) == 0);
// Integer predicates
function {:define} $ule.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:define} $ule.i1(i1: i1, i2: i1) returns (i1) { (if $ule.i1.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:define} $ule.i5(i1: i5, i2: i5) returns (i1) { (if $ule.i5.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:define} $ule.i6(i1: i6, i2: i6) returns (i1) { (if $ule.i6.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:define} $ule.i8(i1: i8, i2: i8) returns (i1) { (if $ule.i8.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:define} $ule.i16(i1: i16, i2: i16) returns (i1) { (if $ule.i16.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:define} $ule.i24(i1: i24, i2: i24) returns (i1) { (if $ule.i24.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:define} $ule.i32(i1: i32, i2: i32) returns (i1) { (if $ule.i32.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:define} $ule.i40(i1: i40, i2: i40) returns (i1) { (if $ule.i40.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:define} $ule.i48(i1: i48, i2: i48) returns (i1) { (if $ule.i48.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:define} $ule.i56(i1: i56, i2: i56) returns (i1) { (if $ule.i56.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:define} $ule.i64(i1: i64, i2: i64) returns (i1) { (if $ule.i64.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:define} $ule.i80(i1: i80, i2: i80) returns (i1) { (if $ule.i80.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:define} $ule.i88(i1: i88, i2: i88) returns (i1) { (if $ule.i88.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:define} $ule.i96(i1: i96, i2: i96) returns (i1) { (if $ule.i96.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:define} $ule.i128(i1: i128, i2: i128) returns (i1) { (if $ule.i128.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:define} $ule.i160(i1: i160, i2: i160) returns (i1) { (if $ule.i160.bool(i1, i2) then 1 else 0) }
function {:define} $ule.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:define} $ule.i256(i1: i256, i2: i256) returns (i1) { (if $ule.i256.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:define} $ult.i1(i1: i1, i2: i1) returns (i1) { (if $ult.i1.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:define} $ult.i5(i1: i5, i2: i5) returns (i1) { (if $ult.i5.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:define} $ult.i6(i1: i6, i2: i6) returns (i1) { (if $ult.i6.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:define} $ult.i8(i1: i8, i2: i8) returns (i1) { (if $ult.i8.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:define} $ult.i16(i1: i16, i2: i16) returns (i1) { (if $ult.i16.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:define} $ult.i24(i1: i24, i2: i24) returns (i1) { (if $ult.i24.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:define} $ult.i32(i1: i32, i2: i32) returns (i1) { (if $ult.i32.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:define} $ult.i40(i1: i40, i2: i40) returns (i1) { (if $ult.i40.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:define} $ult.i48(i1: i48, i2: i48) returns (i1) { (if $ult.i48.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:define} $ult.i56(i1: i56, i2: i56) returns (i1) { (if $ult.i56.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:define} $ult.i64(i1: i64, i2: i64) returns (i1) { (if $ult.i64.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:define} $ult.i80(i1: i80, i2: i80) returns (i1) { (if $ult.i80.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:define} $ult.i88(i1: i88, i2: i88) returns (i1) { (if $ult.i88.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:define} $ult.i96(i1: i96, i2: i96) returns (i1) { (if $ult.i96.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:define} $ult.i128(i1: i128, i2: i128) returns (i1) { (if $ult.i128.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:define} $ult.i160(i1: i160, i2: i160) returns (i1) { (if $ult.i160.bool(i1, i2) then 1 else 0) }
function {:define} $ult.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:define} $ult.i256(i1: i256, i2: i256) returns (i1) { (if $ult.i256.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:define} $uge.i1(i1: i1, i2: i1) returns (i1) { (if $uge.i1.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:define} $uge.i5(i1: i5, i2: i5) returns (i1) { (if $uge.i5.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:define} $uge.i6(i1: i6, i2: i6) returns (i1) { (if $uge.i6.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:define} $uge.i8(i1: i8, i2: i8) returns (i1) { (if $uge.i8.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:define} $uge.i16(i1: i16, i2: i16) returns (i1) { (if $uge.i16.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:define} $uge.i24(i1: i24, i2: i24) returns (i1) { (if $uge.i24.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:define} $uge.i32(i1: i32, i2: i32) returns (i1) { (if $uge.i32.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:define} $uge.i40(i1: i40, i2: i40) returns (i1) { (if $uge.i40.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:define} $uge.i48(i1: i48, i2: i48) returns (i1) { (if $uge.i48.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:define} $uge.i56(i1: i56, i2: i56) returns (i1) { (if $uge.i56.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:define} $uge.i64(i1: i64, i2: i64) returns (i1) { (if $uge.i64.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:define} $uge.i80(i1: i80, i2: i80) returns (i1) { (if $uge.i80.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:define} $uge.i88(i1: i88, i2: i88) returns (i1) { (if $uge.i88.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:define} $uge.i96(i1: i96, i2: i96) returns (i1) { (if $uge.i96.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:define} $uge.i128(i1: i128, i2: i128) returns (i1) { (if $uge.i128.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:define} $uge.i160(i1: i160, i2: i160) returns (i1) { (if $uge.i160.bool(i1, i2) then 1 else 0) }
function {:define} $uge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:define} $uge.i256(i1: i256, i2: i256) returns (i1) { (if $uge.i256.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:define} $ugt.i1(i1: i1, i2: i1) returns (i1) { (if $ugt.i1.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:define} $ugt.i5(i1: i5, i2: i5) returns (i1) { (if $ugt.i5.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:define} $ugt.i6(i1: i6, i2: i6) returns (i1) { (if $ugt.i6.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:define} $ugt.i8(i1: i8, i2: i8) returns (i1) { (if $ugt.i8.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:define} $ugt.i16(i1: i16, i2: i16) returns (i1) { (if $ugt.i16.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:define} $ugt.i24(i1: i24, i2: i24) returns (i1) { (if $ugt.i24.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:define} $ugt.i32(i1: i32, i2: i32) returns (i1) { (if $ugt.i32.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:define} $ugt.i40(i1: i40, i2: i40) returns (i1) { (if $ugt.i40.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:define} $ugt.i48(i1: i48, i2: i48) returns (i1) { (if $ugt.i48.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:define} $ugt.i56(i1: i56, i2: i56) returns (i1) { (if $ugt.i56.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:define} $ugt.i64(i1: i64, i2: i64) returns (i1) { (if $ugt.i64.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:define} $ugt.i80(i1: i80, i2: i80) returns (i1) { (if $ugt.i80.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:define} $ugt.i88(i1: i88, i2: i88) returns (i1) { (if $ugt.i88.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:define} $ugt.i96(i1: i96, i2: i96) returns (i1) { (if $ugt.i96.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:define} $ugt.i128(i1: i128, i2: i128) returns (i1) { (if $ugt.i128.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:define} $ugt.i160(i1: i160, i2: i160) returns (i1) { (if $ugt.i160.bool(i1, i2) then 1 else 0) }
function {:define} $ugt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:define} $ugt.i256(i1: i256, i2: i256) returns (i1) { (if $ugt.i256.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 <= i2) }
function {:define} $sle.i1(i1: i1, i2: i1) returns (i1) { (if $sle.i1.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 <= i2) }
function {:define} $sle.i5(i1: i5, i2: i5) returns (i1) { (if $sle.i5.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 <= i2) }
function {:define} $sle.i6(i1: i6, i2: i6) returns (i1) { (if $sle.i6.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 <= i2) }
function {:define} $sle.i8(i1: i8, i2: i8) returns (i1) { (if $sle.i8.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 <= i2) }
function {:define} $sle.i16(i1: i16, i2: i16) returns (i1) { (if $sle.i16.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 <= i2) }
function {:define} $sle.i24(i1: i24, i2: i24) returns (i1) { (if $sle.i24.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 <= i2) }
function {:define} $sle.i32(i1: i32, i2: i32) returns (i1) { (if $sle.i32.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 <= i2) }
function {:define} $sle.i40(i1: i40, i2: i40) returns (i1) { (if $sle.i40.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 <= i2) }
function {:define} $sle.i48(i1: i48, i2: i48) returns (i1) { (if $sle.i48.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 <= i2) }
function {:define} $sle.i56(i1: i56, i2: i56) returns (i1) { (if $sle.i56.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 <= i2) }
function {:define} $sle.i64(i1: i64, i2: i64) returns (i1) { (if $sle.i64.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 <= i2) }
function {:define} $sle.i80(i1: i80, i2: i80) returns (i1) { (if $sle.i80.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 <= i2) }
function {:define} $sle.i88(i1: i88, i2: i88) returns (i1) { (if $sle.i88.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 <= i2) }
function {:define} $sle.i96(i1: i96, i2: i96) returns (i1) { (if $sle.i96.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 <= i2) }
function {:define} $sle.i128(i1: i128, i2: i128) returns (i1) { (if $sle.i128.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 <= i2) }
function {:define} $sle.i160(i1: i160, i2: i160) returns (i1) { (if $sle.i160.bool(i1, i2) then 1 else 0) }
function {:define} $sle.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 <= i2) }
function {:define} $sle.i256(i1: i256, i2: i256) returns (i1) { (if $sle.i256.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 < i2) }
function {:define} $slt.i1(i1: i1, i2: i1) returns (i1) { (if $slt.i1.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 < i2) }
function {:define} $slt.i5(i1: i5, i2: i5) returns (i1) { (if $slt.i5.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 < i2) }
function {:define} $slt.i6(i1: i6, i2: i6) returns (i1) { (if $slt.i6.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 < i2) }
function {:define} $slt.i8(i1: i8, i2: i8) returns (i1) { (if $slt.i8.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 < i2) }
function {:define} $slt.i16(i1: i16, i2: i16) returns (i1) { (if $slt.i16.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 < i2) }
function {:define} $slt.i24(i1: i24, i2: i24) returns (i1) { (if $slt.i24.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 < i2) }
function {:define} $slt.i32(i1: i32, i2: i32) returns (i1) { (if $slt.i32.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 < i2) }
function {:define} $slt.i40(i1: i40, i2: i40) returns (i1) { (if $slt.i40.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 < i2) }
function {:define} $slt.i48(i1: i48, i2: i48) returns (i1) { (if $slt.i48.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 < i2) }
function {:define} $slt.i56(i1: i56, i2: i56) returns (i1) { (if $slt.i56.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 < i2) }
function {:define} $slt.i64(i1: i64, i2: i64) returns (i1) { (if $slt.i64.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 < i2) }
function {:define} $slt.i80(i1: i80, i2: i80) returns (i1) { (if $slt.i80.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 < i2) }
function {:define} $slt.i88(i1: i88, i2: i88) returns (i1) { (if $slt.i88.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 < i2) }
function {:define} $slt.i96(i1: i96, i2: i96) returns (i1) { (if $slt.i96.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 < i2) }
function {:define} $slt.i128(i1: i128, i2: i128) returns (i1) { (if $slt.i128.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 < i2) }
function {:define} $slt.i160(i1: i160, i2: i160) returns (i1) { (if $slt.i160.bool(i1, i2) then 1 else 0) }
function {:define} $slt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 < i2) }
function {:define} $slt.i256(i1: i256, i2: i256) returns (i1) { (if $slt.i256.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 >= i2) }
function {:define} $sge.i1(i1: i1, i2: i1) returns (i1) { (if $sge.i1.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 >= i2) }
function {:define} $sge.i5(i1: i5, i2: i5) returns (i1) { (if $sge.i5.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 >= i2) }
function {:define} $sge.i6(i1: i6, i2: i6) returns (i1) { (if $sge.i6.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 >= i2) }
function {:define} $sge.i8(i1: i8, i2: i8) returns (i1) { (if $sge.i8.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 >= i2) }
function {:define} $sge.i16(i1: i16, i2: i16) returns (i1) { (if $sge.i16.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 >= i2) }
function {:define} $sge.i24(i1: i24, i2: i24) returns (i1) { (if $sge.i24.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 >= i2) }
function {:define} $sge.i32(i1: i32, i2: i32) returns (i1) { (if $sge.i32.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 >= i2) }
function {:define} $sge.i40(i1: i40, i2: i40) returns (i1) { (if $sge.i40.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 >= i2) }
function {:define} $sge.i48(i1: i48, i2: i48) returns (i1) { (if $sge.i48.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 >= i2) }
function {:define} $sge.i56(i1: i56, i2: i56) returns (i1) { (if $sge.i56.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 >= i2) }
function {:define} $sge.i64(i1: i64, i2: i64) returns (i1) { (if $sge.i64.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 >= i2) }
function {:define} $sge.i80(i1: i80, i2: i80) returns (i1) { (if $sge.i80.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 >= i2) }
function {:define} $sge.i88(i1: i88, i2: i88) returns (i1) { (if $sge.i88.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 >= i2) }
function {:define} $sge.i96(i1: i96, i2: i96) returns (i1) { (if $sge.i96.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 >= i2) }
function {:define} $sge.i128(i1: i128, i2: i128) returns (i1) { (if $sge.i128.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 >= i2) }
function {:define} $sge.i160(i1: i160, i2: i160) returns (i1) { (if $sge.i160.bool(i1, i2) then 1 else 0) }
function {:define} $sge.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 >= i2) }
function {:define} $sge.i256(i1: i256, i2: i256) returns (i1) { (if $sge.i256.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 > i2) }
function {:define} $sgt.i1(i1: i1, i2: i1) returns (i1) { (if $sgt.i1.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 > i2) }
function {:define} $sgt.i5(i1: i5, i2: i5) returns (i1) { (if $sgt.i5.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 > i2) }
function {:define} $sgt.i6(i1: i6, i2: i6) returns (i1) { (if $sgt.i6.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 > i2) }
function {:define} $sgt.i8(i1: i8, i2: i8) returns (i1) { (if $sgt.i8.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 > i2) }
function {:define} $sgt.i16(i1: i16, i2: i16) returns (i1) { (if $sgt.i16.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 > i2) }
function {:define} $sgt.i24(i1: i24, i2: i24) returns (i1) { (if $sgt.i24.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 > i2) }
function {:define} $sgt.i32(i1: i32, i2: i32) returns (i1) { (if $sgt.i32.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 > i2) }
function {:define} $sgt.i40(i1: i40, i2: i40) returns (i1) { (if $sgt.i40.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 > i2) }
function {:define} $sgt.i48(i1: i48, i2: i48) returns (i1) { (if $sgt.i48.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 > i2) }
function {:define} $sgt.i56(i1: i56, i2: i56) returns (i1) { (if $sgt.i56.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 > i2) }
function {:define} $sgt.i64(i1: i64, i2: i64) returns (i1) { (if $sgt.i64.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 > i2) }
function {:define} $sgt.i80(i1: i80, i2: i80) returns (i1) { (if $sgt.i80.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 > i2) }
function {:define} $sgt.i88(i1: i88, i2: i88) returns (i1) { (if $sgt.i88.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 > i2) }
function {:define} $sgt.i96(i1: i96, i2: i96) returns (i1) { (if $sgt.i96.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 > i2) }
function {:define} $sgt.i128(i1: i128, i2: i128) returns (i1) { (if $sgt.i128.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 > i2) }
function {:define} $sgt.i160(i1: i160, i2: i160) returns (i1) { (if $sgt.i160.bool(i1, i2) then 1 else 0) }
function {:define} $sgt.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 > i2) }
function {:define} $sgt.i256(i1: i256, i2: i256) returns (i1) { (if $sgt.i256.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 == i2) }
function {:define} $eq.i1(i1: i1, i2: i1) returns (i1) { (if $eq.i1.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 == i2) }
function {:define} $eq.i5(i1: i5, i2: i5) returns (i1) { (if $eq.i5.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 == i2) }
function {:define} $eq.i6(i1: i6, i2: i6) returns (i1) { (if $eq.i6.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 == i2) }
function {:define} $eq.i8(i1: i8, i2: i8) returns (i1) { (if $eq.i8.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 == i2) }
function {:define} $eq.i16(i1: i16, i2: i16) returns (i1) { (if $eq.i16.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 == i2) }
function {:define} $eq.i24(i1: i24, i2: i24) returns (i1) { (if $eq.i24.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 == i2) }
function {:define} $eq.i32(i1: i32, i2: i32) returns (i1) { (if $eq.i32.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 == i2) }
function {:define} $eq.i40(i1: i40, i2: i40) returns (i1) { (if $eq.i40.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 == i2) }
function {:define} $eq.i48(i1: i48, i2: i48) returns (i1) { (if $eq.i48.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 == i2) }
function {:define} $eq.i56(i1: i56, i2: i56) returns (i1) { (if $eq.i56.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 == i2) }
function {:define} $eq.i64(i1: i64, i2: i64) returns (i1) { (if $eq.i64.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 == i2) }
function {:define} $eq.i80(i1: i80, i2: i80) returns (i1) { (if $eq.i80.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 == i2) }
function {:define} $eq.i88(i1: i88, i2: i88) returns (i1) { (if $eq.i88.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 == i2) }
function {:define} $eq.i96(i1: i96, i2: i96) returns (i1) { (if $eq.i96.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 == i2) }
function {:define} $eq.i128(i1: i128, i2: i128) returns (i1) { (if $eq.i128.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 == i2) }
function {:define} $eq.i160(i1: i160, i2: i160) returns (i1) { (if $eq.i160.bool(i1, i2) then 1 else 0) }
function {:define} $eq.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 == i2) }
function {:define} $eq.i256(i1: i256, i2: i256) returns (i1) { (if $eq.i256.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i1.bool(i1: i1, i2: i1) returns (bool) { (i1 != i2) }
function {:define} $ne.i1(i1: i1, i2: i1) returns (i1) { (if $ne.i1.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i5.bool(i1: i5, i2: i5) returns (bool) { (i1 != i2) }
function {:define} $ne.i5(i1: i5, i2: i5) returns (i1) { (if $ne.i5.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i6.bool(i1: i6, i2: i6) returns (bool) { (i1 != i2) }
function {:define} $ne.i6(i1: i6, i2: i6) returns (i1) { (if $ne.i6.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i8.bool(i1: i8, i2: i8) returns (bool) { (i1 != i2) }
function {:define} $ne.i8(i1: i8, i2: i8) returns (i1) { (if $ne.i8.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i16.bool(i1: i16, i2: i16) returns (bool) { (i1 != i2) }
function {:define} $ne.i16(i1: i16, i2: i16) returns (i1) { (if $ne.i16.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i24.bool(i1: i24, i2: i24) returns (bool) { (i1 != i2) }
function {:define} $ne.i24(i1: i24, i2: i24) returns (i1) { (if $ne.i24.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i32.bool(i1: i32, i2: i32) returns (bool) { (i1 != i2) }
function {:define} $ne.i32(i1: i32, i2: i32) returns (i1) { (if $ne.i32.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i40.bool(i1: i40, i2: i40) returns (bool) { (i1 != i2) }
function {:define} $ne.i40(i1: i40, i2: i40) returns (i1) { (if $ne.i40.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i48.bool(i1: i48, i2: i48) returns (bool) { (i1 != i2) }
function {:define} $ne.i48(i1: i48, i2: i48) returns (i1) { (if $ne.i48.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i56.bool(i1: i56, i2: i56) returns (bool) { (i1 != i2) }
function {:define} $ne.i56(i1: i56, i2: i56) returns (i1) { (if $ne.i56.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i64.bool(i1: i64, i2: i64) returns (bool) { (i1 != i2) }
function {:define} $ne.i64(i1: i64, i2: i64) returns (i1) { (if $ne.i64.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i80.bool(i1: i80, i2: i80) returns (bool) { (i1 != i2) }
function {:define} $ne.i80(i1: i80, i2: i80) returns (i1) { (if $ne.i80.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i88.bool(i1: i88, i2: i88) returns (bool) { (i1 != i2) }
function {:define} $ne.i88(i1: i88, i2: i88) returns (i1) { (if $ne.i88.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i96.bool(i1: i96, i2: i96) returns (bool) { (i1 != i2) }
function {:define} $ne.i96(i1: i96, i2: i96) returns (i1) { (if $ne.i96.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i128.bool(i1: i128, i2: i128) returns (bool) { (i1 != i2) }
function {:define} $ne.i128(i1: i128, i2: i128) returns (i1) { (if $ne.i128.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i160.bool(i1: i160, i2: i160) returns (bool) { (i1 != i2) }
function {:define} $ne.i160(i1: i160, i2: i160) returns (i1) { (if $ne.i160.bool(i1, i2) then 1 else 0) }
function {:define} $ne.i256.bool(i1: i256, i2: i256) returns (bool) { (i1 != i2) }
function {:define} $ne.i256(i1: i256, i2: i256) returns (i1) { (if $ne.i256.bool(i1, i2) then 1 else 0) }
// Integer load/store operations
function {:define} $load.i1(M: [ref] i1, p: ref) returns (i1) { M[p] }
function {:define} $store.i1(M: [ref] i1, p: ref, i: i1) returns ([ref] i1) { M[p := i] }
function {:define} $load.i5(M: [ref] i5, p: ref) returns (i5) { M[p] }
function {:define} $store.i5(M: [ref] i5, p: ref, i: i5) returns ([ref] i5) { M[p := i] }
function {:define} $load.i6(M: [ref] i6, p: ref) returns (i6) { M[p] }
function {:define} $store.i6(M: [ref] i6, p: ref, i: i6) returns ([ref] i6) { M[p := i] }
function {:define} $load.i8(M: [ref] i8, p: ref) returns (i8) { M[p] }
function {:define} $store.i8(M: [ref] i8, p: ref, i: i8) returns ([ref] i8) { M[p := i] }
function {:define} $load.i16(M: [ref] i16, p: ref) returns (i16) { M[p] }
function {:define} $store.i16(M: [ref] i16, p: ref, i: i16) returns ([ref] i16) { M[p := i] }
function {:define} $load.i24(M: [ref] i24, p: ref) returns (i24) { M[p] }
function {:define} $store.i24(M: [ref] i24, p: ref, i: i24) returns ([ref] i24) { M[p := i] }
function {:define} $load.i32(M: [ref] i32, p: ref) returns (i32) { M[p] }
function {:define} $store.i32(M: [ref] i32, p: ref, i: i32) returns ([ref] i32) { M[p := i] }
function {:define} $load.i40(M: [ref] i40, p: ref) returns (i40) { M[p] }
function {:define} $store.i40(M: [ref] i40, p: ref, i: i40) returns ([ref] i40) { M[p := i] }
function {:define} $load.i48(M: [ref] i48, p: ref) returns (i48) { M[p] }
function {:define} $store.i48(M: [ref] i48, p: ref, i: i48) returns ([ref] i48) { M[p := i] }
function {:define} $load.i56(M: [ref] i56, p: ref) returns (i56) { M[p] }
function {:define} $store.i56(M: [ref] i56, p: ref, i: i56) returns ([ref] i56) { M[p := i] }
function {:define} $load.i64(M: [ref] i64, p: ref) returns (i64) { M[p] }
function {:define} $store.i64(M: [ref] i64, p: ref, i: i64) returns ([ref] i64) { M[p := i] }
function {:define} $load.i80(M: [ref] i80, p: ref) returns (i80) { M[p] }
function {:define} $store.i80(M: [ref] i80, p: ref, i: i80) returns ([ref] i80) { M[p := i] }
function {:define} $load.i88(M: [ref] i88, p: ref) returns (i88) { M[p] }
function {:define} $store.i88(M: [ref] i88, p: ref, i: i88) returns ([ref] i88) { M[p := i] }
function {:define} $load.i96(M: [ref] i96, p: ref) returns (i96) { M[p] }
function {:define} $store.i96(M: [ref] i96, p: ref, i: i96) returns ([ref] i96) { M[p := i] }
function {:define} $load.i128(M: [ref] i128, p: ref) returns (i128) { M[p] }
function {:define} $store.i128(M: [ref] i128, p: ref, i: i128) returns ([ref] i128) { M[p := i] }
function {:define} $load.i160(M: [ref] i160, p: ref) returns (i160) { M[p] }
function {:define} $store.i160(M: [ref] i160, p: ref, i: i160) returns ([ref] i160) { M[p := i] }
function {:define} $load.i256(M: [ref] i256, p: ref) returns (i256) { M[p] }
function {:define} $store.i256(M: [ref] i256, p: ref, i: i256) returns ([ref] i256) { M[p := i] }
// Conversion between integer types
function {:define} $trunc.i5.i1(i: i5) returns (i1) { i }
function {:define} $trunc.i6.i1(i: i6) returns (i1) { i }
function {:define} $trunc.i8.i1(i: i8) returns (i1) { i }
function {:define} $trunc.i16.i1(i: i16) returns (i1) { i }
function {:define} $trunc.i24.i1(i: i24) returns (i1) { i }
function {:define} $trunc.i32.i1(i: i32) returns (i1) { i }
function {:define} $trunc.i40.i1(i: i40) returns (i1) { i }
function {:define} $trunc.i48.i1(i: i48) returns (i1) { i }
function {:define} $trunc.i56.i1(i: i56) returns (i1) { i }
function {:define} $trunc.i64.i1(i: i64) returns (i1) { i }
function {:define} $trunc.i80.i1(i: i80) returns (i1) { i }
function {:define} $trunc.i88.i1(i: i88) returns (i1) { i }
function {:define} $trunc.i96.i1(i: i96) returns (i1) { i }
function {:define} $trunc.i128.i1(i: i128) returns (i1) { i }
function {:define} $trunc.i160.i1(i: i160) returns (i1) { i }
function {:define} $trunc.i256.i1(i: i256) returns (i1) { i }
function {:define} $trunc.i6.i5(i: i6) returns (i5) { i }
function {:define} $trunc.i8.i5(i: i8) returns (i5) { i }
function {:define} $trunc.i16.i5(i: i16) returns (i5) { i }
function {:define} $trunc.i24.i5(i: i24) returns (i5) { i }
function {:define} $trunc.i32.i5(i: i32) returns (i5) { i }
function {:define} $trunc.i40.i5(i: i40) returns (i5) { i }
function {:define} $trunc.i48.i5(i: i48) returns (i5) { i }
function {:define} $trunc.i56.i5(i: i56) returns (i5) { i }
function {:define} $trunc.i64.i5(i: i64) returns (i5) { i }
function {:define} $trunc.i80.i5(i: i80) returns (i5) { i }
function {:define} $trunc.i88.i5(i: i88) returns (i5) { i }
function {:define} $trunc.i96.i5(i: i96) returns (i5) { i }
function {:define} $trunc.i128.i5(i: i128) returns (i5) { i }
function {:define} $trunc.i160.i5(i: i160) returns (i5) { i }
function {:define} $trunc.i256.i5(i: i256) returns (i5) { i }
function {:define} $trunc.i8.i6(i: i8) returns (i6) { i }
function {:define} $trunc.i16.i6(i: i16) returns (i6) { i }
function {:define} $trunc.i24.i6(i: i24) returns (i6) { i }
function {:define} $trunc.i32.i6(i: i32) returns (i6) { i }
function {:define} $trunc.i40.i6(i: i40) returns (i6) { i }
function {:define} $trunc.i48.i6(i: i48) returns (i6) { i }
function {:define} $trunc.i56.i6(i: i56) returns (i6) { i }
function {:define} $trunc.i64.i6(i: i64) returns (i6) { i }
function {:define} $trunc.i80.i6(i: i80) returns (i6) { i }
function {:define} $trunc.i88.i6(i: i88) returns (i6) { i }
function {:define} $trunc.i96.i6(i: i96) returns (i6) { i }
function {:define} $trunc.i128.i6(i: i128) returns (i6) { i }
function {:define} $trunc.i160.i6(i: i160) returns (i6) { i }
function {:define} $trunc.i256.i6(i: i256) returns (i6) { i }
function {:define} $trunc.i16.i8(i: i16) returns (i8) { i }
function {:define} $trunc.i24.i8(i: i24) returns (i8) { i }
function {:define} $trunc.i32.i8(i: i32) returns (i8) { i }
function {:define} $trunc.i40.i8(i: i40) returns (i8) { i }
function {:define} $trunc.i48.i8(i: i48) returns (i8) { i }
function {:define} $trunc.i56.i8(i: i56) returns (i8) { i }
function {:define} $trunc.i64.i8(i: i64) returns (i8) { i }
function {:define} $trunc.i80.i8(i: i80) returns (i8) { i }
function {:define} $trunc.i88.i8(i: i88) returns (i8) { i }
function {:define} $trunc.i96.i8(i: i96) returns (i8) { i }
function {:define} $trunc.i128.i8(i: i128) returns (i8) { i }
function {:define} $trunc.i160.i8(i: i160) returns (i8) { i }
function {:define} $trunc.i256.i8(i: i256) returns (i8) { i }
function {:define} $trunc.i24.i16(i: i24) returns (i16) { i }
function {:define} $trunc.i32.i16(i: i32) returns (i16) { i }
function {:define} $trunc.i40.i16(i: i40) returns (i16) { i }
function {:define} $trunc.i48.i16(i: i48) returns (i16) { i }
function {:define} $trunc.i56.i16(i: i56) returns (i16) { i }
function {:define} $trunc.i64.i16(i: i64) returns (i16) { i }
function {:define} $trunc.i80.i16(i: i80) returns (i16) { i }
function {:define} $trunc.i88.i16(i: i88) returns (i16) { i }
function {:define} $trunc.i96.i16(i: i96) returns (i16) { i }
function {:define} $trunc.i128.i16(i: i128) returns (i16) { i }
function {:define} $trunc.i160.i16(i: i160) returns (i16) { i }
function {:define} $trunc.i256.i16(i: i256) returns (i16) { i }
function {:define} $trunc.i32.i24(i: i32) returns (i24) { i }
function {:define} $trunc.i40.i24(i: i40) returns (i24) { i }
function {:define} $trunc.i48.i24(i: i48) returns (i24) { i }
function {:define} $trunc.i56.i24(i: i56) returns (i24) { i }
function {:define} $trunc.i64.i24(i: i64) returns (i24) { i }
function {:define} $trunc.i80.i24(i: i80) returns (i24) { i }
function {:define} $trunc.i88.i24(i: i88) returns (i24) { i }
function {:define} $trunc.i96.i24(i: i96) returns (i24) { i }
function {:define} $trunc.i128.i24(i: i128) returns (i24) { i }
function {:define} $trunc.i160.i24(i: i160) returns (i24) { i }
function {:define} $trunc.i256.i24(i: i256) returns (i24) { i }
function {:define} $trunc.i40.i32(i: i40) returns (i32) { i }
function {:define} $trunc.i48.i32(i: i48) returns (i32) { i }
function {:define} $trunc.i56.i32(i: i56) returns (i32) { i }
function {:define} $trunc.i64.i32(i: i64) returns (i32) { i }
function {:define} $trunc.i80.i32(i: i80) returns (i32) { i }
function {:define} $trunc.i88.i32(i: i88) returns (i32) { i }
function {:define} $trunc.i96.i32(i: i96) returns (i32) { i }
function {:define} $trunc.i128.i32(i: i128) returns (i32) { i }
function {:define} $trunc.i160.i32(i: i160) returns (i32) { i }
function {:define} $trunc.i256.i32(i: i256) returns (i32) { i }
function {:define} $trunc.i48.i40(i: i48) returns (i40) { i }
function {:define} $trunc.i56.i40(i: i56) returns (i40) { i }
function {:define} $trunc.i64.i40(i: i64) returns (i40) { i }
function {:define} $trunc.i80.i40(i: i80) returns (i40) { i }
function {:define} $trunc.i88.i40(i: i88) returns (i40) { i }
function {:define} $trunc.i96.i40(i: i96) returns (i40) { i }
function {:define} $trunc.i128.i40(i: i128) returns (i40) { i }
function {:define} $trunc.i160.i40(i: i160) returns (i40) { i }
function {:define} $trunc.i256.i40(i: i256) returns (i40) { i }
function {:define} $trunc.i56.i48(i: i56) returns (i48) { i }
function {:define} $trunc.i64.i48(i: i64) returns (i48) { i }
function {:define} $trunc.i80.i48(i: i80) returns (i48) { i }
function {:define} $trunc.i88.i48(i: i88) returns (i48) { i }
function {:define} $trunc.i96.i48(i: i96) returns (i48) { i }
function {:define} $trunc.i128.i48(i: i128) returns (i48) { i }
function {:define} $trunc.i160.i48(i: i160) returns (i48) { i }
function {:define} $trunc.i256.i48(i: i256) returns (i48) { i }
function {:define} $trunc.i64.i56(i: i64) returns (i56) { i }
function {:define} $trunc.i80.i56(i: i80) returns (i56) { i }
function {:define} $trunc.i88.i56(i: i88) returns (i56) { i }
function {:define} $trunc.i96.i56(i: i96) returns (i56) { i }
function {:define} $trunc.i128.i56(i: i128) returns (i56) { i }
function {:define} $trunc.i160.i56(i: i160) returns (i56) { i }
function {:define} $trunc.i256.i56(i: i256) returns (i56) { i }
function {:define} $trunc.i80.i64(i: i80) returns (i64) { i }
function {:define} $trunc.i88.i64(i: i88) returns (i64) { i }
function {:define} $trunc.i96.i64(i: i96) returns (i64) { i }
function {:define} $trunc.i128.i64(i: i128) returns (i64) { i }
function {:define} $trunc.i160.i64(i: i160) returns (i64) { i }
function {:define} $trunc.i256.i64(i: i256) returns (i64) { i }
function {:define} $trunc.i88.i80(i: i88) returns (i80) { i }
function {:define} $trunc.i96.i80(i: i96) returns (i80) { i }
function {:define} $trunc.i128.i80(i: i128) returns (i80) { i }
function {:define} $trunc.i160.i80(i: i160) returns (i80) { i }
function {:define} $trunc.i256.i80(i: i256) returns (i80) { i }
function {:define} $trunc.i96.i88(i: i96) returns (i88) { i }
function {:define} $trunc.i128.i88(i: i128) returns (i88) { i }
function {:define} $trunc.i160.i88(i: i160) returns (i88) { i }
function {:define} $trunc.i256.i88(i: i256) returns (i88) { i }
function {:define} $trunc.i128.i96(i: i128) returns (i96) { i }
function {:define} $trunc.i160.i96(i: i160) returns (i96) { i }
function {:define} $trunc.i256.i96(i: i256) returns (i96) { i }
function {:define} $trunc.i160.i128(i: i160) returns (i128) { i }
function {:define} $trunc.i256.i128(i: i256) returns (i128) { i }
function {:define} $trunc.i256.i160(i: i256) returns (i160) { i }
function {:define} $sext.i1.i5(i: i1) returns (i5) { i }
function {:define} $sext.i1.i6(i: i1) returns (i6) { i }
function {:define} $sext.i1.i8(i: i1) returns (i8) { i }
function {:define} $sext.i1.i16(i: i1) returns (i16) { i }
function {:define} $sext.i1.i24(i: i1) returns (i24) { i }
function {:define} $sext.i1.i32(i: i1) returns (i32) { i }
function {:define} $sext.i1.i40(i: i1) returns (i40) { i }
function {:define} $sext.i1.i48(i: i1) returns (i48) { i }
function {:define} $sext.i1.i56(i: i1) returns (i56) { i }
function {:define} $sext.i1.i64(i: i1) returns (i64) { i }
function {:define} $sext.i1.i80(i: i1) returns (i80) { i }
function {:define} $sext.i1.i88(i: i1) returns (i88) { i }
function {:define} $sext.i1.i96(i: i1) returns (i96) { i }
function {:define} $sext.i1.i128(i: i1) returns (i128) { i }
function {:define} $sext.i1.i160(i: i1) returns (i160) { i }
function {:define} $sext.i1.i256(i: i1) returns (i256) { i }
function {:define} $sext.i5.i6(i: i5) returns (i6) { i }
function {:define} $sext.i5.i8(i: i5) returns (i8) { i }
function {:define} $sext.i5.i16(i: i5) returns (i16) { i }
function {:define} $sext.i5.i24(i: i5) returns (i24) { i }
function {:define} $sext.i5.i32(i: i5) returns (i32) { i }
function {:define} $sext.i5.i40(i: i5) returns (i40) { i }
function {:define} $sext.i5.i48(i: i5) returns (i48) { i }
function {:define} $sext.i5.i56(i: i5) returns (i56) { i }
function {:define} $sext.i5.i64(i: i5) returns (i64) { i }
function {:define} $sext.i5.i80(i: i5) returns (i80) { i }
function {:define} $sext.i5.i88(i: i5) returns (i88) { i }
function {:define} $sext.i5.i96(i: i5) returns (i96) { i }
function {:define} $sext.i5.i128(i: i5) returns (i128) { i }
function {:define} $sext.i5.i160(i: i5) returns (i160) { i }
function {:define} $sext.i5.i256(i: i5) returns (i256) { i }
function {:define} $sext.i6.i8(i: i6) returns (i8) { i }
function {:define} $sext.i6.i16(i: i6) returns (i16) { i }
function {:define} $sext.i6.i24(i: i6) returns (i24) { i }
function {:define} $sext.i6.i32(i: i6) returns (i32) { i }
function {:define} $sext.i6.i40(i: i6) returns (i40) { i }
function {:define} $sext.i6.i48(i: i6) returns (i48) { i }
function {:define} $sext.i6.i56(i: i6) returns (i56) { i }
function {:define} $sext.i6.i64(i: i6) returns (i64) { i }
function {:define} $sext.i6.i80(i: i6) returns (i80) { i }
function {:define} $sext.i6.i88(i: i6) returns (i88) { i }
function {:define} $sext.i6.i96(i: i6) returns (i96) { i }
function {:define} $sext.i6.i128(i: i6) returns (i128) { i }
function {:define} $sext.i6.i160(i: i6) returns (i160) { i }
function {:define} $sext.i6.i256(i: i6) returns (i256) { i }
function {:define} $sext.i8.i16(i: i8) returns (i16) { i }
function {:define} $sext.i8.i24(i: i8) returns (i24) { i }
function {:define} $sext.i8.i32(i: i8) returns (i32) { i }
function {:define} $sext.i8.i40(i: i8) returns (i40) { i }
function {:define} $sext.i8.i48(i: i8) returns (i48) { i }
function {:define} $sext.i8.i56(i: i8) returns (i56) { i }
function {:define} $sext.i8.i64(i: i8) returns (i64) { i }
function {:define} $sext.i8.i80(i: i8) returns (i80) { i }
function {:define} $sext.i8.i88(i: i8) returns (i88) { i }
function {:define} $sext.i8.i96(i: i8) returns (i96) { i }
function {:define} $sext.i8.i128(i: i8) returns (i128) { i }
function {:define} $sext.i8.i160(i: i8) returns (i160) { i }
function {:define} $sext.i8.i256(i: i8) returns (i256) { i }
function {:define} $sext.i16.i24(i: i16) returns (i24) { i }
function {:define} $sext.i16.i32(i: i16) returns (i32) { i }
function {:define} $sext.i16.i40(i: i16) returns (i40) { i }
function {:define} $sext.i16.i48(i: i16) returns (i48) { i }
function {:define} $sext.i16.i56(i: i16) returns (i56) { i }
function {:define} $sext.i16.i64(i: i16) returns (i64) { i }
function {:define} $sext.i16.i80(i: i16) returns (i80) { i }
function {:define} $sext.i16.i88(i: i16) returns (i88) { i }
function {:define} $sext.i16.i96(i: i16) returns (i96) { i }
function {:define} $sext.i16.i128(i: i16) returns (i128) { i }
function {:define} $sext.i16.i160(i: i16) returns (i160) { i }
function {:define} $sext.i16.i256(i: i16) returns (i256) { i }
function {:define} $sext.i24.i32(i: i24) returns (i32) { i }
function {:define} $sext.i24.i40(i: i24) returns (i40) { i }
function {:define} $sext.i24.i48(i: i24) returns (i48) { i }
function {:define} $sext.i24.i56(i: i24) returns (i56) { i }
function {:define} $sext.i24.i64(i: i24) returns (i64) { i }
function {:define} $sext.i24.i80(i: i24) returns (i80) { i }
function {:define} $sext.i24.i88(i: i24) returns (i88) { i }
function {:define} $sext.i24.i96(i: i24) returns (i96) { i }
function {:define} $sext.i24.i128(i: i24) returns (i128) { i }
function {:define} $sext.i24.i160(i: i24) returns (i160) { i }
function {:define} $sext.i24.i256(i: i24) returns (i256) { i }
function {:define} $sext.i32.i40(i: i32) returns (i40) { i }
function {:define} $sext.i32.i48(i: i32) returns (i48) { i }
function {:define} $sext.i32.i56(i: i32) returns (i56) { i }
function {:define} $sext.i32.i64(i: i32) returns (i64) { i }
function {:define} $sext.i32.i80(i: i32) returns (i80) { i }
function {:define} $sext.i32.i88(i: i32) returns (i88) { i }
function {:define} $sext.i32.i96(i: i32) returns (i96) { i }
function {:define} $sext.i32.i128(i: i32) returns (i128) { i }
function {:define} $sext.i32.i160(i: i32) returns (i160) { i }
function {:define} $sext.i32.i256(i: i32) returns (i256) { i }
function {:define} $sext.i40.i48(i: i40) returns (i48) { i }
function {:define} $sext.i40.i56(i: i40) returns (i56) { i }
function {:define} $sext.i40.i64(i: i40) returns (i64) { i }
function {:define} $sext.i40.i80(i: i40) returns (i80) { i }
function {:define} $sext.i40.i88(i: i40) returns (i88) { i }
function {:define} $sext.i40.i96(i: i40) returns (i96) { i }
function {:define} $sext.i40.i128(i: i40) returns (i128) { i }
function {:define} $sext.i40.i160(i: i40) returns (i160) { i }
function {:define} $sext.i40.i256(i: i40) returns (i256) { i }
function {:define} $sext.i48.i56(i: i48) returns (i56) { i }
function {:define} $sext.i48.i64(i: i48) returns (i64) { i }
function {:define} $sext.i48.i80(i: i48) returns (i80) { i }
function {:define} $sext.i48.i88(i: i48) returns (i88) { i }
function {:define} $sext.i48.i96(i: i48) returns (i96) { i }
function {:define} $sext.i48.i128(i: i48) returns (i128) { i }
function {:define} $sext.i48.i160(i: i48) returns (i160) { i }
function {:define} $sext.i48.i256(i: i48) returns (i256) { i }
function {:define} $sext.i56.i64(i: i56) returns (i64) { i }
function {:define} $sext.i56.i80(i: i56) returns (i80) { i }
function {:define} $sext.i56.i88(i: i56) returns (i88) { i }
function {:define} $sext.i56.i96(i: i56) returns (i96) { i }
function {:define} $sext.i56.i128(i: i56) returns (i128) { i }
function {:define} $sext.i56.i160(i: i56) returns (i160) { i }
function {:define} $sext.i56.i256(i: i56) returns (i256) { i }
function {:define} $sext.i64.i80(i: i64) returns (i80) { i }
function {:define} $sext.i64.i88(i: i64) returns (i88) { i }
function {:define} $sext.i64.i96(i: i64) returns (i96) { i }
function {:define} $sext.i64.i128(i: i64) returns (i128) { i }
function {:define} $sext.i64.i160(i: i64) returns (i160) { i }
function {:define} $sext.i64.i256(i: i64) returns (i256) { i }
function {:define} $sext.i80.i88(i: i80) returns (i88) { i }
function {:define} $sext.i80.i96(i: i80) returns (i96) { i }
function {:define} $sext.i80.i128(i: i80) returns (i128) { i }
function {:define} $sext.i80.i160(i: i80) returns (i160) { i }
function {:define} $sext.i80.i256(i: i80) returns (i256) { i }
function {:define} $sext.i88.i96(i: i88) returns (i96) { i }
function {:define} $sext.i88.i128(i: i88) returns (i128) { i }
function {:define} $sext.i88.i160(i: i88) returns (i160) { i }
function {:define} $sext.i88.i256(i: i88) returns (i256) { i }
function {:define} $sext.i96.i128(i: i96) returns (i128) { i }
function {:define} $sext.i96.i160(i: i96) returns (i160) { i }
function {:define} $sext.i96.i256(i: i96) returns (i256) { i }
function {:define} $sext.i128.i160(i: i128) returns (i160) { i }
function {:define} $sext.i128.i256(i: i128) returns (i256) { i }
function {:define} $sext.i160.i256(i: i160) returns (i256) { i }
function {:define} $zext.i1.i5(i: i1) returns (i5) { i }
function {:define} $zext.i1.i6(i: i1) returns (i6) { i }
function {:define} $zext.i1.i8(i: i1) returns (i8) { i }
function {:define} $zext.i1.i16(i: i1) returns (i16) { i }
function {:define} $zext.i1.i24(i: i1) returns (i24) { i }
function {:define} $zext.i1.i32(i: i1) returns (i32) { i }
function {:define} $zext.i1.i40(i: i1) returns (i40) { i }
function {:define} $zext.i1.i48(i: i1) returns (i48) { i }
function {:define} $zext.i1.i56(i: i1) returns (i56) { i }
function {:define} $zext.i1.i64(i: i1) returns (i64) { i }
function {:define} $zext.i1.i80(i: i1) returns (i80) { i }
function {:define} $zext.i1.i88(i: i1) returns (i88) { i }
function {:define} $zext.i1.i96(i: i1) returns (i96) { i }
function {:define} $zext.i1.i128(i: i1) returns (i128) { i }
function {:define} $zext.i1.i160(i: i1) returns (i160) { i }
function {:define} $zext.i1.i256(i: i1) returns (i256) { i }
function {:define} $zext.i5.i6(i: i5) returns (i6) { i }
function {:define} $zext.i5.i8(i: i5) returns (i8) { i }
function {:define} $zext.i5.i16(i: i5) returns (i16) { i }
function {:define} $zext.i5.i24(i: i5) returns (i24) { i }
function {:define} $zext.i5.i32(i: i5) returns (i32) { i }
function {:define} $zext.i5.i40(i: i5) returns (i40) { i }
function {:define} $zext.i5.i48(i: i5) returns (i48) { i }
function {:define} $zext.i5.i56(i: i5) returns (i56) { i }
function {:define} $zext.i5.i64(i: i5) returns (i64) { i }
function {:define} $zext.i5.i80(i: i5) returns (i80) { i }
function {:define} $zext.i5.i88(i: i5) returns (i88) { i }
function {:define} $zext.i5.i96(i: i5) returns (i96) { i }
function {:define} $zext.i5.i128(i: i5) returns (i128) { i }
function {:define} $zext.i5.i160(i: i5) returns (i160) { i }
function {:define} $zext.i5.i256(i: i5) returns (i256) { i }
function {:define} $zext.i6.i8(i: i6) returns (i8) { i }
function {:define} $zext.i6.i16(i: i6) returns (i16) { i }
function {:define} $zext.i6.i24(i: i6) returns (i24) { i }
function {:define} $zext.i6.i32(i: i6) returns (i32) { i }
function {:define} $zext.i6.i40(i: i6) returns (i40) { i }
function {:define} $zext.i6.i48(i: i6) returns (i48) { i }
function {:define} $zext.i6.i56(i: i6) returns (i56) { i }
function {:define} $zext.i6.i64(i: i6) returns (i64) { i }
function {:define} $zext.i6.i80(i: i6) returns (i80) { i }
function {:define} $zext.i6.i88(i: i6) returns (i88) { i }
function {:define} $zext.i6.i96(i: i6) returns (i96) { i }
function {:define} $zext.i6.i128(i: i6) returns (i128) { i }
function {:define} $zext.i6.i160(i: i6) returns (i160) { i }
function {:define} $zext.i6.i256(i: i6) returns (i256) { i }
function {:define} $zext.i8.i16(i: i8) returns (i16) { i }
function {:define} $zext.i8.i24(i: i8) returns (i24) { i }
function {:define} $zext.i8.i32(i: i8) returns (i32) { i }
function {:define} $zext.i8.i40(i: i8) returns (i40) { i }
function {:define} $zext.i8.i48(i: i8) returns (i48) { i }
function {:define} $zext.i8.i56(i: i8) returns (i56) { i }
function {:define} $zext.i8.i64(i: i8) returns (i64) { i }
function {:define} $zext.i8.i80(i: i8) returns (i80) { i }
function {:define} $zext.i8.i88(i: i8) returns (i88) { i }
function {:define} $zext.i8.i96(i: i8) returns (i96) { i }
function {:define} $zext.i8.i128(i: i8) returns (i128) { i }
function {:define} $zext.i8.i160(i: i8) returns (i160) { i }
function {:define} $zext.i8.i256(i: i8) returns (i256) { i }
function {:define} $zext.i16.i24(i: i16) returns (i24) { i }
function {:define} $zext.i16.i32(i: i16) returns (i32) { i }
function {:define} $zext.i16.i40(i: i16) returns (i40) { i }
function {:define} $zext.i16.i48(i: i16) returns (i48) { i }
function {:define} $zext.i16.i56(i: i16) returns (i56) { i }
function {:define} $zext.i16.i64(i: i16) returns (i64) { i }
function {:define} $zext.i16.i80(i: i16) returns (i80) { i }
function {:define} $zext.i16.i88(i: i16) returns (i88) { i }
function {:define} $zext.i16.i96(i: i16) returns (i96) { i }
function {:define} $zext.i16.i128(i: i16) returns (i128) { i }
function {:define} $zext.i16.i160(i: i16) returns (i160) { i }
function {:define} $zext.i16.i256(i: i16) returns (i256) { i }
function {:define} $zext.i24.i32(i: i24) returns (i32) { i }
function {:define} $zext.i24.i40(i: i24) returns (i40) { i }
function {:define} $zext.i24.i48(i: i24) returns (i48) { i }
function {:define} $zext.i24.i56(i: i24) returns (i56) { i }
function {:define} $zext.i24.i64(i: i24) returns (i64) { i }
function {:define} $zext.i24.i80(i: i24) returns (i80) { i }
function {:define} $zext.i24.i88(i: i24) returns (i88) { i }
function {:define} $zext.i24.i96(i: i24) returns (i96) { i }
function {:define} $zext.i24.i128(i: i24) returns (i128) { i }
function {:define} $zext.i24.i160(i: i24) returns (i160) { i }
function {:define} $zext.i24.i256(i: i24) returns (i256) { i }
function {:define} $zext.i32.i40(i: i32) returns (i40) { i }
function {:define} $zext.i32.i48(i: i32) returns (i48) { i }
function {:define} $zext.i32.i56(i: i32) returns (i56) { i }
function {:define} $zext.i32.i64(i: i32) returns (i64) { i }
function {:define} $zext.i32.i80(i: i32) returns (i80) { i }
function {:define} $zext.i32.i88(i: i32) returns (i88) { i }
function {:define} $zext.i32.i96(i: i32) returns (i96) { i }
function {:define} $zext.i32.i128(i: i32) returns (i128) { i }
function {:define} $zext.i32.i160(i: i32) returns (i160) { i }
function {:define} $zext.i32.i256(i: i32) returns (i256) { i }
function {:define} $zext.i40.i48(i: i40) returns (i48) { i }
function {:define} $zext.i40.i56(i: i40) returns (i56) { i }
function {:define} $zext.i40.i64(i: i40) returns (i64) { i }
function {:define} $zext.i40.i80(i: i40) returns (i80) { i }
function {:define} $zext.i40.i88(i: i40) returns (i88) { i }
function {:define} $zext.i40.i96(i: i40) returns (i96) { i }
function {:define} $zext.i40.i128(i: i40) returns (i128) { i }
function {:define} $zext.i40.i160(i: i40) returns (i160) { i }
function {:define} $zext.i40.i256(i: i40) returns (i256) { i }
function {:define} $zext.i48.i56(i: i48) returns (i56) { i }
function {:define} $zext.i48.i64(i: i48) returns (i64) { i }
function {:define} $zext.i48.i80(i: i48) returns (i80) { i }
function {:define} $zext.i48.i88(i: i48) returns (i88) { i }
function {:define} $zext.i48.i96(i: i48) returns (i96) { i }
function {:define} $zext.i48.i128(i: i48) returns (i128) { i }
function {:define} $zext.i48.i160(i: i48) returns (i160) { i }
function {:define} $zext.i48.i256(i: i48) returns (i256) { i }
function {:define} $zext.i56.i64(i: i56) returns (i64) { i }
function {:define} $zext.i56.i80(i: i56) returns (i80) { i }
function {:define} $zext.i56.i88(i: i56) returns (i88) { i }
function {:define} $zext.i56.i96(i: i56) returns (i96) { i }
function {:define} $zext.i56.i128(i: i56) returns (i128) { i }
function {:define} $zext.i56.i160(i: i56) returns (i160) { i }
function {:define} $zext.i56.i256(i: i56) returns (i256) { i }
function {:define} $zext.i64.i80(i: i64) returns (i80) { i }
function {:define} $zext.i64.i88(i: i64) returns (i88) { i }
function {:define} $zext.i64.i96(i: i64) returns (i96) { i }
function {:define} $zext.i64.i128(i: i64) returns (i128) { i }
function {:define} $zext.i64.i160(i: i64) returns (i160) { i }
function {:define} $zext.i64.i256(i: i64) returns (i256) { i }
function {:define} $zext.i80.i88(i: i80) returns (i88) { i }
function {:define} $zext.i80.i96(i: i80) returns (i96) { i }
function {:define} $zext.i80.i128(i: i80) returns (i128) { i }
function {:define} $zext.i80.i160(i: i80) returns (i160) { i }
function {:define} $zext.i80.i256(i: i80) returns (i256) { i }
function {:define} $zext.i88.i96(i: i88) returns (i96) { i }
function {:define} $zext.i88.i128(i: i88) returns (i128) { i }
function {:define} $zext.i88.i160(i: i88) returns (i160) { i }
function {:define} $zext.i88.i256(i: i88) returns (i256) { i }
function {:define} $zext.i96.i128(i: i96) returns (i128) { i }
function {:define} $zext.i96.i160(i: i96) returns (i160) { i }
function {:define} $zext.i96.i256(i: i96) returns (i256) { i }
function {:define} $zext.i128.i160(i: i128) returns (i160) { i }
function {:define} $zext.i128.i256(i: i128) returns (i256) { i }
function {:define} $zext.i160.i256(i: i160) returns (i256) { i }
function $extractvalue.i1(p: ref, i: int) returns (i1);
function $extractvalue.i5(p: ref, i: int) returns (i5);
function $extractvalue.i6(p: ref, i: int) returns (i6);
function $extractvalue.i8(p: ref, i: int) returns (i8);
function $extractvalue.i16(p: ref, i: int) returns (i16);
function $extractvalue.i24(p: ref, i: int) returns (i24);
function $extractvalue.i32(p: ref, i: int) returns (i32);
function $extractvalue.i40(p: ref, i: int) returns (i40);
function $extractvalue.i48(p: ref, i: int) returns (i48);
function $extractvalue.i56(p: ref, i: int) returns (i56);
function $extractvalue.i64(p: ref, i: int) returns (i64);
function $extractvalue.i80(p: ref, i: int) returns (i80);
function $extractvalue.i88(p: ref, i: int) returns (i88);
function $extractvalue.i96(p: ref, i: int) returns (i96);
function $extractvalue.i128(p: ref, i: int) returns (i128);
function $extractvalue.i160(p: ref, i: int) returns (i160);
function $extractvalue.i256(p: ref, i: int) returns (i256);
// Pointer arithmetic operations
function {:define} $add.ref(p1: ref, p2: ref) returns (ref) { $add.i64(p1, p2) }
function {:define} $sub.ref(p1: ref, p2: ref) returns (ref) { $sub.i64(p1, p2) }
function {:define} $mul.ref(p1: ref, p2: ref) returns (ref) { $mul.i64(p1, p2) }

// Pointer predicates
function {:define} $eq.ref(p1: ref, p2: ref) returns (i1) { (if $eq.i64.bool(p1, p2) then 1 else 0) }
function {:define} $eq.ref.bool(p1: ref, p2: ref) returns (bool) { $eq.i64.bool(p1, p2) }
function {:define} $ne.ref(p1: ref, p2: ref) returns (i1) { (if $ne.i64.bool(p1, p2) then 1 else 0) }
function {:define} $ne.ref.bool(p1: ref, p2: ref) returns (bool) { $ne.i64.bool(p1, p2) }
function {:define} $ugt.ref(p1: ref, p2: ref) returns (i1) { (if $ugt.i64.bool(p1, p2) then 1 else 0) }
function {:define} $ugt.ref.bool(p1: ref, p2: ref) returns (bool) { $ugt.i64.bool(p1, p2) }
function {:define} $uge.ref(p1: ref, p2: ref) returns (i1) { (if $uge.i64.bool(p1, p2) then 1 else 0) }
function {:define} $uge.ref.bool(p1: ref, p2: ref) returns (bool) { $uge.i64.bool(p1, p2) }
function {:define} $ult.ref(p1: ref, p2: ref) returns (i1) { (if $ult.i64.bool(p1, p2) then 1 else 0) }
function {:define} $ult.ref.bool(p1: ref, p2: ref) returns (bool) { $ult.i64.bool(p1, p2) }
function {:define} $ule.ref(p1: ref, p2: ref) returns (i1) { (if $ule.i64.bool(p1, p2) then 1 else 0) }
function {:define} $ule.ref.bool(p1: ref, p2: ref) returns (bool) { $ule.i64.bool(p1, p2) }
function {:define} $sgt.ref(p1: ref, p2: ref) returns (i1) { (if $sgt.i64.bool(p1, p2) then 1 else 0) }
function {:define} $sgt.ref.bool(p1: ref, p2: ref) returns (bool) { $sgt.i64.bool(p1, p2) }
function {:define} $sge.ref(p1: ref, p2: ref) returns (i1) { (if $sge.i64.bool(p1, p2) then 1 else 0) }
function {:define} $sge.ref.bool(p1: ref, p2: ref) returns (bool) { $sge.i64.bool(p1, p2) }
function {:define} $slt.ref(p1: ref, p2: ref) returns (i1) { (if $slt.i64.bool(p1, p2) then 1 else 0) }
function {:define} $slt.ref.bool(p1: ref, p2: ref) returns (bool) { $slt.i64.bool(p1, p2) }
function {:define} $sle.ref(p1: ref, p2: ref) returns (i1) { (if $sle.i64.bool(p1, p2) then 1 else 0) }
function {:define} $sle.ref.bool(p1: ref, p2: ref) returns (bool) { $sle.i64.bool(p1, p2) }

// Pointer load/store operations
function {:define} $load.ref(M: [ref] ref, p: ref) returns (ref) { M[p] }
function {:define} $store.ref(M: [ref] ref, p: ref, i: ref) returns ([ref] ref) { M[p := i] }

// Pointer conversion
function {:define} $bitcast.ref.ref(p: ref) returns (ref) { p }
function $extractvalue.ref(p: ref, i: int) returns (ref);
// Pointer-number conversion
function {:define} $p2i.ref.i8(p: ref) returns (i8) { $trunc.i64.i8(p) }
function {:define} $i2p.i8.ref(i: i8) returns (ref) { $zext.i8.i64(i) }
function {:define} $p2i.ref.i16(p: ref) returns (i16) { $trunc.i64.i16(p) }
function {:define} $i2p.i16.ref(i: i16) returns (ref) { $zext.i16.i64(i) }
function {:define} $p2i.ref.i32(p: ref) returns (i32) { $trunc.i64.i32(p) }
function {:define} $i2p.i32.ref(i: i32) returns (ref) { $zext.i32.i64(i) }
function {:define} $p2i.ref.i64(p: ref) returns (i64) { p }
function {:define} $i2p.i64.ref(i: i64) returns (ref) { i }

function $fp(ipart: int, fpart: int, epart: int) returns (float);
// Floating-point arithmetic operations
function $abs.float(f: float) returns (float);
function $round.float(f: float) returns (float);
function $sqrt.float(f: float) returns (float);
function $fadd.float(f1: float, f2: float) returns (float);
function $fsub.float(f1: float, f2: float) returns (float);
function $fmul.float(f1: float, f2: float) returns (float);
function $fdiv.float(f1: float, f2: float) returns (float);
function $frem.float(f1: float, f2: float) returns (float);
function $min.float(f1: float, f2: float) returns (float);
function $max.float(f1: float, f2: float) returns (float);
function $fma.float(f1: float, f2: float, f3: float) returns (float);
// Floating-point predicates
function $foeq.float.bool(f1: float, f2: float) returns (bool);
function $fole.float.bool(f1: float, f2: float) returns (bool);
function $folt.float.bool(f1: float, f2: float) returns (bool);
function $foge.float.bool(f1: float, f2: float) returns (bool);
function $fogt.float.bool(f1: float, f2: float) returns (bool);
function $fone.float.bool(f1: float, f2: float) returns (bool);
function $ford.float.bool(f1: float, f2: float) returns (bool);
function $fueq.float.bool(f1: float, f2: float) returns (bool);
function $fugt.float.bool(f1: float, f2: float) returns (bool);
function $fuge.float.bool(f1: float, f2: float) returns (bool);
function $fult.float.bool(f1: float, f2: float) returns (bool);
function $fule.float.bool(f1: float, f2: float) returns (bool);
function $fune.float.bool(f1: float, f2: float) returns (bool);
function $funo.float.bool(f1: float, f2: float) returns (bool);
function $ffalse.float.bool(f1: float, f2: float) returns (bool);
function $ftrue.float.bool(f1: float, f2: float) returns (bool);
// Floating-point/integer conversion
function $bitcast.float.i8(f: float) returns (i8);
function $bitcast.float.i16(f: float) returns (i16);
function $bitcast.float.i32(f: float) returns (i32);
function $bitcast.float.i64(f: float) returns (i64);
function $bitcast.float.i80(f: float) returns (i80);
function $bitcast.i8.float(i: i8) returns (float);
function $bitcast.i16.float(i: i16) returns (float);
function $bitcast.i32.float(i: i32) returns (float);
function $bitcast.i64.float(i: i64) returns (float);
function $bitcast.i80.float(i: i80) returns (float);
function $fp2si.float.i1(f: float) returns (i1);
function $fp2si.float.i5(f: float) returns (i5);
function $fp2si.float.i6(f: float) returns (i6);
function $fp2si.float.i8(f: float) returns (i8);
function $fp2si.float.i16(f: float) returns (i16);
function $fp2si.float.i24(f: float) returns (i24);
function $fp2si.float.i32(f: float) returns (i32);
function $fp2si.float.i40(f: float) returns (i40);
function $fp2si.float.i48(f: float) returns (i48);
function $fp2si.float.i56(f: float) returns (i56);
function $fp2si.float.i64(f: float) returns (i64);
function $fp2si.float.i80(f: float) returns (i80);
function $fp2si.float.i88(f: float) returns (i88);
function $fp2si.float.i96(f: float) returns (i96);
function $fp2si.float.i128(f: float) returns (i128);
function $fp2si.float.i160(f: float) returns (i160);
function $fp2si.float.i256(f: float) returns (i256);
function $fp2ui.float.i1(f: float) returns (i1);
function $fp2ui.float.i5(f: float) returns (i5);
function $fp2ui.float.i6(f: float) returns (i6);
function $fp2ui.float.i8(f: float) returns (i8);
function $fp2ui.float.i16(f: float) returns (i16);
function $fp2ui.float.i24(f: float) returns (i24);
function $fp2ui.float.i32(f: float) returns (i32);
function $fp2ui.float.i40(f: float) returns (i40);
function $fp2ui.float.i48(f: float) returns (i48);
function $fp2ui.float.i56(f: float) returns (i56);
function $fp2ui.float.i64(f: float) returns (i64);
function $fp2ui.float.i80(f: float) returns (i80);
function $fp2ui.float.i88(f: float) returns (i88);
function $fp2ui.float.i96(f: float) returns (i96);
function $fp2ui.float.i128(f: float) returns (i128);
function $fp2ui.float.i160(f: float) returns (i160);
function $fp2ui.float.i256(f: float) returns (i256);
function $si2fp.i1.float(i: i1) returns (float);
function $si2fp.i5.float(i: i5) returns (float);
function $si2fp.i6.float(i: i6) returns (float);
function $si2fp.i8.float(i: i8) returns (float);
function $si2fp.i16.float(i: i16) returns (float);
function $si2fp.i24.float(i: i24) returns (float);
function $si2fp.i32.float(i: i32) returns (float);
function $si2fp.i40.float(i: i40) returns (float);
function $si2fp.i48.float(i: i48) returns (float);
function $si2fp.i56.float(i: i56) returns (float);
function $si2fp.i64.float(i: i64) returns (float);
function $si2fp.i80.float(i: i80) returns (float);
function $si2fp.i88.float(i: i88) returns (float);
function $si2fp.i96.float(i: i96) returns (float);
function $si2fp.i128.float(i: i128) returns (float);
function $si2fp.i160.float(i: i160) returns (float);
function $si2fp.i256.float(i: i256) returns (float);
function $ui2fp.i1.float(i: i1) returns (float);
function $ui2fp.i5.float(i: i5) returns (float);
function $ui2fp.i6.float(i: i6) returns (float);
function $ui2fp.i8.float(i: i8) returns (float);
function $ui2fp.i16.float(i: i16) returns (float);
function $ui2fp.i24.float(i: i24) returns (float);
function $ui2fp.i32.float(i: i32) returns (float);
function $ui2fp.i40.float(i: i40) returns (float);
function $ui2fp.i48.float(i: i48) returns (float);
function $ui2fp.i56.float(i: i56) returns (float);
function $ui2fp.i64.float(i: i64) returns (float);
function $ui2fp.i80.float(i: i80) returns (float);
function $ui2fp.i88.float(i: i88) returns (float);
function $ui2fp.i96.float(i: i96) returns (float);
function $ui2fp.i128.float(i: i128) returns (float);
function $ui2fp.i160.float(i: i160) returns (float);
function $ui2fp.i256.float(i: i256) returns (float);
// Floating-point conversion
function $fpext.float.float(f: float) returns (float);
function $fptrunc.float.float(f: float) returns (float);
// Floating-point load/store operations
function {:define} $load.float(M: [ref] float, p: ref) returns (float) { M[p] }
function {:define} $store.float(M: [ref] float, p: ref, f: float) returns ([ref] float) { M[p := f] }
function {:define} $load.unsafe.float(M: [ref] i8, p: ref) returns (float) { $bitcast.i8.float(M[p]) }
function {:define} $store.unsafe.float(M: [ref] i8, p: ref, f: float) returns ([ref] i8) { M[p := $bitcast.float.i8(f)] }
function $extractvalue.float(p: ref, i: int) returns (float);
const {:count 14} .str.2: ref;
axiom (.str.2 == $sub.ref(0, 1038));
const env_value_str: ref;
axiom (env_value_str == $sub.ref(0, 2070));
const {:count 3} .str.1.3: ref;
axiom (.str.1.3 == $sub.ref(0, 3097));
const {:count 14} .str.20: ref;
axiom (.str.20 == $sub.ref(0, 4135));
const errno_global: ref;
axiom (errno_global == $sub.ref(0, 5163));
const resetArray: ref;
axiom (resetArray == $sub.ref(0, 6195));
procedure {:inline 11} resetArray($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i64;
  var $p4: ref;
  var $i5: i32;
$bb0:
  assume {:sourceloc "two_arrays.c", 16, 8} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 16, 8} true;
  assume {:verifier.code 0} true;
  $i1 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "two_arrays.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 16, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $slt.i32($i1, 10);
  assume {:sourceloc "two_arrays.c", 16, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  assume {:sourceloc "two_arrays.c", 17, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i32.i64($i1);
  assume {:sourceloc "two_arrays.c", 17, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, $mul.ref($i3, 4));
  assume {:sourceloc "two_arrays.c", 17, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 0);
  assume {:sourceloc "two_arrays.c", 18, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !(($i2 == 1));
  assume {:sourceloc "two_arrays.c", 19, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "two_arrays.c", 16, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i32($i1, 1);
  call {:cexpr "i"} boogie_si_record_i32($i5);
  assume {:sourceloc "two_arrays.c", 16, 3} true;
  assume {:verifier.code 0} true;
  $i1 := $i5;
  goto $bb1;
}
const setArray: ref;
axiom (setArray == $sub.ref(0, 7227));
procedure {:inline 11} setArray($p0: ref)
{
  var $i1: i32;
  var $i2: i1;
  var $i3: i64;
  var $p4: ref;
  var $i5: i32;
$bb0:
  assume {:sourceloc "two_arrays.c", 24, 8} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 24, 8} true;
  assume {:verifier.code 0} true;
  $i1 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "two_arrays.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 24, 17} true;
  assume {:verifier.code 0} true;
  $i2 := $slt.i32($i1, 10);
  assume {:sourceloc "two_arrays.c", 24, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i2} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i2 == 1);
  assume {:sourceloc "two_arrays.c", 25, 5} true;
  assume {:verifier.code 0} true;
  $i3 := $sext.i32.i64($i1);
  assume {:sourceloc "two_arrays.c", 25, 5} true;
  assume {:verifier.code 0} true;
  $p4 := $add.ref($p0, $mul.ref($i3, 4));
  assume {:sourceloc "two_arrays.c", 25, 14} true;
  assume {:verifier.code 0} true;
  $M.0 := $store.i32($M.0, $p4, 1);
  assume {:sourceloc "two_arrays.c", 26, 3} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !(($i2 == 1));
  assume {:sourceloc "two_arrays.c", 27, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
$bb4:
  assume {:sourceloc "two_arrays.c", 24, 29} true;
  assume {:verifier.code 0} true;
  $i5 := $add.i32($i1, 1);
  call {:cexpr "i"} boogie_si_record_i32($i5);
  assume {:sourceloc "two_arrays.c", 24, 3} true;
  assume {:verifier.code 0} true;
  $i1 := $i5;
  goto $bb1;
}
const main: ref;
axiom (main == $sub.ref(0, 8259));
procedure {:entrypoint} main()
  returns ($r: i32)
{
  var $p0: ref;
  var $p1: ref;
  var $p2: ref;
  var $p3: ref;
  var $i4: i32;
  var $i5: i1;
  var $i6: i64;
  var $p7: ref;
  var $i8: i32;
  var $i9: i1;
  var $i10: i64;
  var $p11: ref;
  var $i12: i32;
  var $i13: i1;
  var $i14: i32;
  var $i15: i32;
  var $i16: i1;
  var $i17: i64;
  var $p18: ref;
  var $i19: i32;
  var $i20: i1;
  var $i21: i64;
  var $p22: ref;
  var $i23: i32;
  var $i24: i1;
  var $i25: i32;
  var $p26: ref;
  var $p27: ref;
$bb0:
  call $initialize();
  assume {:sourceloc "two_arrays.c", 31, 26} true;
  assume {:verifier.code 0} true;
  call {:cexpr "smack:entry:main"} boogie_si_record_ref(main);
  assume {:sourceloc "two_arrays.c", 31, 26} true;
  assume {:verifier.code 0} true;
  call $p0 := malloc(40);
  assume {:sourceloc "two_arrays.c", 31, 19} true;
  assume {:verifier.code 0} true;
  $p1 := $bitcast.ref.ref($p0);
  assume {:sourceloc "two_arrays.c", 32, 26} true;
  assume {:verifier.code 0} true;
  call $p2 := malloc(40);
  assume {:sourceloc "two_arrays.c", 32, 19} true;
  assume {:verifier.code 0} true;
  $p3 := $bitcast.ref.ref($p2);
  assume {:sourceloc "two_arrays.c", 34, 3} true;
  assume {:verifier.code 0} true;
  call resetArray($p1);
  assume {:sourceloc "two_arrays.c", 35, 3} true;
  assume {:verifier.code 0} true;
  call setArray($p3);
  assume {:sourceloc "two_arrays.c", 37, 8} true;
  assume {:verifier.code 0} true;
  $i4 := 0;
  goto $bb1;
$bb1:
  assume {:sourceloc "two_arrays.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 37, 17} true;
  assume {:verifier.code 0} true;
  $i5 := $slt.i32($i4, 10);
  assume {:sourceloc "two_arrays.c", 37, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i5} true;
  goto $bb2, $bb3;
$bb2:
  assume ($i5 == 1);
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  goto $bb4;
$bb3:
  assume !(($i5 == 1));
  assume {:sourceloc "two_arrays.c", 42, 3} true;
  assume {:verifier.code 0} true;
  call setArray($p1);
  assume {:sourceloc "two_arrays.c", 43, 3} true;
  assume {:verifier.code 0} true;
  call resetArray($p3);
  assume {:sourceloc "two_arrays.c", 45, 8} true;
  assume {:verifier.code 0} true;
  $i15 := 0;
  goto $bb15;
$bb4:
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  $i6 := $sext.i32.i64($i4);
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  $p7 := $add.ref($p1, $mul.ref($i6, 4));
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  $i8 := $load.i32($M.0, $p7);
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  $i9 := $eq.i32($i8, 0);
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i9} true;
  goto $bb5, $bb7;
$bb5:
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  assume ($i9 == 1);
  goto $bb6;
$bb6:
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  goto $bb8;
$bb7:
  assume !(($i9 == 1));
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assert(0);
  assume {:sourceloc "two_arrays.c", 38, 5} true;
  assume {:verifier.code 0} true;
  goto $bb6;
$bb8:
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  goto $bb9;
$bb9:
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  $i10 := $sext.i32.i64($i4);
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  $p11 := $add.ref($p3, $mul.ref($i10, 4));
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  $i12 := $load.i32($M.0, $p11);
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  $i13 := $eq.i32($i12, 1);
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i13} true;
  goto $bb10, $bb12;
$bb10:
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  assume ($i13 == 1);
  goto $bb11;
$bb11:
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  goto $bb13;
$bb12:
  assume !(($i13 == 1));
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assert(0);
  assume {:sourceloc "two_arrays.c", 39, 5} true;
  assume {:verifier.code 0} true;
  goto $bb11;
$bb13:
  assume {:sourceloc "two_arrays.c", 40, 3} true;
  assume {:verifier.code 0} true;
  goto $bb14;
$bb14:
  assume {:sourceloc "two_arrays.c", 37, 29} true;
  assume {:verifier.code 0} true;
  $i14 := $add.i32($i4, 1);
  call {:cexpr "i"} boogie_si_record_i32($i14);
  assume {:sourceloc "two_arrays.c", 37, 3} true;
  assume {:verifier.code 0} true;
  $i4 := $i14;
  goto $bb1;
$bb15:
  assume {:sourceloc "two_arrays.c", 0, 0} true;
  assume {:verifier.code 0} true;
  assume {:sourceloc "two_arrays.c", 45, 17} true;
  assume {:verifier.code 0} true;
  $i16 := $slt.i32($i15, 10);
  assume {:sourceloc "two_arrays.c", 45, 3} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i16} true;
  goto $bb16, $bb17;
$bb16:
  assume ($i16 == 1);
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  goto $bb18;
$bb17:
  assume !(($i16 == 1));
  assume {:sourceloc "two_arrays.c", 50, 8} true;
  assume {:verifier.code 0} true;
  $p26 := $bitcast.ref.ref($p1);
  assume {:sourceloc "two_arrays.c", 50, 3} true;
  assume {:verifier.code 0} true;
  call free_($p26);
  assume {:sourceloc "two_arrays.c", 51, 8} true;
  assume {:verifier.code 0} true;
  $p27 := $bitcast.ref.ref($p3);
  assume {:sourceloc "two_arrays.c", 51, 3} true;
  assume {:verifier.code 0} true;
  call free_($p27);
  assume {:sourceloc "two_arrays.c", 52, 3} true;
  assume {:verifier.code 0} true;
  $r := 0;
  $exn := false;
  return;
$bb18:
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  $i17 := $sext.i32.i64($i15);
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  $p18 := $add.ref($p1, $mul.ref($i17, 4));
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  $i19 := $load.i32($M.0, $p18);
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  $i20 := $eq.i32($i19, 1);
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i20} true;
  goto $bb19, $bb21;
$bb19:
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  assume ($i20 == 1);
  goto $bb20;
$bb20:
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  goto $bb22;
$bb21:
  assume !(($i20 == 1));
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assert(0);
  assume {:sourceloc "two_arrays.c", 46, 5} true;
  assume {:verifier.code 0} true;
  goto $bb20;
$bb22:
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  goto $bb23;
$bb23:
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  $i21 := $sext.i32.i64($i15);
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  $p22 := $add.ref($p3, $mul.ref($i21, 4));
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  $i23 := $load.i32($M.0, $p22);
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  $i24 := $eq.i32($i23, 0);
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  assume {:branchcond $i24} true;
  goto $bb24, $bb26;
$bb24:
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  assume ($i24 == 1);
  goto $bb25;
$bb25:
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  goto $bb27;
$bb26:
  assume !(($i24 == 1));
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 1} true;
  call __VERIFIER_assert(0);
  assume {:sourceloc "two_arrays.c", 47, 5} true;
  assume {:verifier.code 0} true;
  goto $bb25;
$bb27:
  assume {:sourceloc "two_arrays.c", 48, 3} true;
  assume {:verifier.code 0} true;
  goto $bb28;
$bb28:
  assume {:sourceloc "two_arrays.c", 45, 29} true;
  assume {:verifier.code 0} true;
  $i25 := $add.i32($i15, 1);
  call {:cexpr "i"} boogie_si_record_i32($i25);
  assume {:sourceloc "two_arrays.c", 45, 3} true;
  assume {:verifier.code 0} true;
  $i15 := $i25;
  goto $bb15;
}
const malloc: ref;
axiom (malloc == $sub.ref(0, 9291));
procedure {:inline 11} malloc($i0: i64)
  returns ($r: ref)
{
  call $r := $malloc($i0);
}
const free_: ref;
axiom (free_ == $sub.ref(0, 10323));
procedure {:inline 11} free_($p0: ref)
{
  call $free($p0);
}
const __VERIFIER_assume: ref;
axiom (__VERIFIER_assume == $sub.ref(0, 11355));
procedure {:inline 11} __VERIFIER_assume($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assume:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 38, 3} true;
  assume {:verifier.code 1} true;
  assume $i0 != $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 39, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_code: ref;
axiom (__SMACK_code == $sub.ref(0, 12387));
procedure {:inline 11} __SMACK_code.ref($p0: ref);
procedure {:inline 11} __SMACK_code.ref.i32($p0: ref, p.1: i32);
const __SMACK_dummy: ref;
axiom (__SMACK_dummy == $sub.ref(0, 13419));
procedure {:inline 11} __SMACK_dummy($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_dummy:arg:v"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 59} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_assert: ref;
axiom (__VERIFIER_assert == $sub.ref(0, 14451));
procedure {:inline 11} __VERIFIER_assert($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__VERIFIER_assert:arg:x"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 45, 3} true;
  assume {:verifier.code 1} true;
  assert $i0 != $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 47, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_check_overflow: ref;
axiom (__SMACK_check_overflow == $sub.ref(0, 15483));
procedure {:inline 11} __SMACK_check_overflow($i0: i32)
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  call {:cexpr "__SMACK_check_overflow:arg:flag"} boogie_si_record_i32($i0);
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 258, 29} true;
  assume {:verifier.code 1} true;
  assume true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 63, 3} true;
  assume {:verifier.code 1} true;
  assert {:overflow} $i0 == $0;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 64, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __SMACK_nondet_char: ref;
axiom (__SMACK_nondet_char == $sub.ref(0, 16515));
procedure {:inline 11} __SMACK_nondet_char()
  returns ($r: i8);
const __SMACK_nondet_signed_char: ref;
axiom (__SMACK_nondet_signed_char == $sub.ref(0, 17547));
procedure {:inline 11} __SMACK_nondet_signed_char()
  returns ($r: i8);
const __SMACK_nondet_unsigned_char: ref;
axiom (__SMACK_nondet_unsigned_char == $sub.ref(0, 18579));
procedure {:inline 11} __SMACK_nondet_unsigned_char()
  returns ($r: i8);
const __SMACK_nondet_short: ref;
axiom (__SMACK_nondet_short == $sub.ref(0, 19611));
procedure {:inline 11} __SMACK_nondet_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short: ref;
axiom (__SMACK_nondet_signed_short == $sub.ref(0, 20643));
procedure {:inline 11} __SMACK_nondet_signed_short()
  returns ($r: i16);
const __SMACK_nondet_signed_short_int: ref;
axiom (__SMACK_nondet_signed_short_int == $sub.ref(0, 21675));
procedure {:inline 11} __SMACK_nondet_signed_short_int()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short: ref;
axiom (__SMACK_nondet_unsigned_short == $sub.ref(0, 22707));
procedure {:inline 11} __SMACK_nondet_unsigned_short()
  returns ($r: i16);
const __SMACK_nondet_unsigned_short_int: ref;
axiom (__SMACK_nondet_unsigned_short_int == $sub.ref(0, 23739));
procedure {:inline 11} __SMACK_nondet_unsigned_short_int()
  returns ($r: i16);
const __SMACK_nondet_int: ref;
axiom (__SMACK_nondet_int == $sub.ref(0, 24771));
procedure {:inline 11} __SMACK_nondet_int()
  returns ($r: i32);
const __SMACK_nondet_signed_int: ref;
axiom (__SMACK_nondet_signed_int == $sub.ref(0, 25803));
procedure {:inline 11} __SMACK_nondet_signed_int()
  returns ($r: i32);
const __SMACK_nondet_unsigned: ref;
axiom (__SMACK_nondet_unsigned == $sub.ref(0, 26835));
procedure {:inline 11} __SMACK_nondet_unsigned()
  returns ($r: i32);
const __SMACK_nondet_unsigned_int: ref;
axiom (__SMACK_nondet_unsigned_int == $sub.ref(0, 27867));
procedure {:inline 11} __SMACK_nondet_unsigned_int()
  returns ($r: i32);
const __SMACK_nondet_long: ref;
axiom (__SMACK_nondet_long == $sub.ref(0, 28899));
procedure {:inline 11} __SMACK_nondet_long()
  returns ($r: i64);
const __SMACK_nondet_long_int: ref;
axiom (__SMACK_nondet_long_int == $sub.ref(0, 29931));
procedure {:inline 11} __SMACK_nondet_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long: ref;
axiom (__SMACK_nondet_signed_long == $sub.ref(0, 30963));
procedure {:inline 11} __SMACK_nondet_signed_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_int: ref;
axiom (__SMACK_nondet_signed_long_int == $sub.ref(0, 31995));
procedure {:inline 11} __SMACK_nondet_signed_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long: ref;
axiom (__SMACK_nondet_unsigned_long == $sub.ref(0, 33027));
procedure {:inline 11} __SMACK_nondet_unsigned_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_int == $sub.ref(0, 34059));
procedure {:inline 11} __SMACK_nondet_unsigned_long_int()
  returns ($r: i64);
const __SMACK_nondet_long_long: ref;
axiom (__SMACK_nondet_long_long == $sub.ref(0, 35091));
procedure {:inline 11} __SMACK_nondet_long_long()
  returns ($r: i64);
const __SMACK_nondet_long_long_int: ref;
axiom (__SMACK_nondet_long_long_int == $sub.ref(0, 36123));
procedure {:inline 11} __SMACK_nondet_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long: ref;
axiom (__SMACK_nondet_signed_long_long == $sub.ref(0, 37155));
procedure {:inline 11} __SMACK_nondet_signed_long_long()
  returns ($r: i64);
const __SMACK_nondet_signed_long_long_int: ref;
axiom (__SMACK_nondet_signed_long_long_int == $sub.ref(0, 38187));
procedure {:inline 11} __SMACK_nondet_signed_long_long_int()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long: ref;
axiom (__SMACK_nondet_unsigned_long_long == $sub.ref(0, 39219));
procedure {:inline 11} __SMACK_nondet_unsigned_long_long()
  returns ($r: i64);
const __SMACK_nondet_unsigned_long_long_int: ref;
axiom (__SMACK_nondet_unsigned_long_long_int == $sub.ref(0, 40251));
procedure {:inline 11} __SMACK_nondet_unsigned_long_long_int()
  returns ($r: i64);
const __SMACK_decls: ref;
axiom (__SMACK_decls == $sub.ref(0, 41283));
type $mop;
procedure {:inline 11} boogie_si_record_mop(m: $mop);
const $MOP: $mop;
var $exn: bool;
var $exnv: int;
procedure {:inline 11} corral_atomic_begin();
procedure {:inline 11} corral_atomic_end();
procedure {:inline 11} $alloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

procedure {:inline 11} $malloc(n: ref) returns (p: ref)
{
  call corral_atomic_begin();
  call p := $$alloc(n);
  call corral_atomic_end();
}

var $CurrAddr:ref;

procedure {:inline 1} $$alloc(n: ref) returns (p: ref)
modifies $CurrAddr;
{
  assume $sge.ref.bool(n, $0.ref);
  if ($sgt.ref.bool(n, $0.ref)) {
    p := $CurrAddr;
    havoc $CurrAddr;
    assume $sge.ref.bool($sub.ref($CurrAddr, n), p);
    assume $sgt.ref.bool($CurrAddr, $0.ref) && $slt.ref.bool($CurrAddr, $MALLOC_TOP);
  } else {
    p := $0.ref;
  }
}

procedure {:inline 11} $free(p: ref);

const __SMACK_top_decl: ref;
axiom (__SMACK_top_decl == $sub.ref(0, 42315));
procedure {:inline 11} __SMACK_top_decl.ref($p0: ref);
const __SMACK_init_func_memory_model: ref;
axiom (__SMACK_init_func_memory_model == $sub.ref(0, 43347));
procedure {:inline 11} __SMACK_init_func_memory_model()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 539, 3} true;
  assume {:verifier.code 1} true;
  $CurrAddr := $1024.ref;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 544, 1} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_atomic_begin: ref;
axiom (__VERIFIER_atomic_begin == $sub.ref(0, 44379));
procedure {:inline 11} __VERIFIER_atomic_begin()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 34} true;
  assume {:verifier.code 1} true;
  call corral_atomic_begin();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 546, 79} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const __VERIFIER_atomic_end: ref;
axiom (__VERIFIER_atomic_end == $sub.ref(0, 45411));
procedure {:inline 11} __VERIFIER_atomic_end()
{
$bb0:
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 32} true;
  assume {:verifier.code 1} true;
  call corral_atomic_end();
  assume {:sourceloc "/usr/local/share/smack/lib/smack.c", 548, 75} true;
  assume {:verifier.code 0} true;
  $exn := false;
  return;
}
const llvm.dbg.value: ref;
axiom (llvm.dbg.value == $sub.ref(0, 46443));
procedure {:inline 11} llvm.dbg.value($p0: ref, $p1: ref, $p2: ref);
const __SMACK_static_init: ref;
axiom (__SMACK_static_init == $sub.ref(0, 47475));
procedure {:inline 11} __SMACK_static_init()
{
$bb0:
  $M.1 := .str.1.3;
  $M.2 := 0;
  call {:cexpr "errno_global"} boogie_si_record_i32(0);
  $exn := false;
  return;
}
procedure {:inline 11} boogie_si_record_i32(x: i32);
procedure {:inline 11} boogie_si_record_ref(x: ref);
procedure {:inline 11} $initialize()
{
  call __SMACK_static_init();
  call __SMACK_init_func_memory_model();
  return;
}
