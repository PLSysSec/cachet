---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Foo",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "x",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "ok",
                                        ],
                                        type_: Atom(
                                            Bool,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "ok",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "x",
                                                ),
                                                op: Eq,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "ok",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        BoolLit(
                                                            false,
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        ElseIf(
                                            IfCmd {
                                                guard: Expr(
                                                    Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "x",
                                                            ),
                                                            op: Eq,
                                                            rhs: Nat(
                                                                "2",
                                                            ),
                                                        },
                                                    ),
                                                ),
                                                then: [
                                                    LabelOrCmd(
                                                        Assign(
                                                            AssignCmd {
                                                                lhs: [
                                                                    AssignLhs {
                                                                        ident: "ok",
                                                                        subscripts: [],
                                                                    },
                                                                ],
                                                                rhs: [
                                                                    BoolLit(
                                                                        false,
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                ],
                                                else_: Some(
                                                    ElseIf(
                                                        IfCmd {
                                                            guard: Expr(
                                                                Rel(
                                                                    RelExpr {
                                                                        lhs: Var(
                                                                            "x",
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: Nat(
                                                                            "3",
                                                                        ),
                                                                    },
                                                                ),
                                                            ),
                                                            then: [
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "ok",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                BoolLit(
                                                                                    false,
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            else_: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Var(
                                        "ok",
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
procedure Foo(x: int) {
  var ok: bool;

  ok := true;
  if (x == 1) {
    ok := false;
  } else if (x == 2) {
    ok := false;
  } else if (x == 3) {
    ok := false;
  }
  assert ok;
}

[Input - ../../vendor/boogie/Test/symdiff/foo.bpl]
// RUN: %boogie -errorTrace:0 "%s" > "%t"
// RUN: %diff "%s.expect" "%t"
procedure Foo(x:int)
{
  var ok:bool;

  ok := true;

  if (x == 1) {
     ok := false;
  } else if (x == 2) {
     ok := false;
  } else if (x == 3) {
     ok := false;
  }

  assert ok;

}
