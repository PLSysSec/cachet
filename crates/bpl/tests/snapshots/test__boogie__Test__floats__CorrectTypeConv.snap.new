---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "(_ to_fp 8 24) RNE",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "TO_FLOAT32_INT",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float24e8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "(_ to_fp 8 24) RNE",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "TO_FLOAT32_REAL",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Atom(
                        Real,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float24e8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "(_ to_fp 8 24) RNE",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "TO_FLOAT32_BV32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "bv32",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float24e8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "(_ to_fp 11 53) RNE",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "TO_FLOAT64_BV64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "bv64",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float53e11",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "(_ to_fp 8 24) RNE",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "TO_FLOAT32_FLOAT64",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "float53e11",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float24e8",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "(_ to_fp 11 53) RNE",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "TO_FLOAT64_FLOAT32",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "float24e8",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "float53e11",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "main",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "r",
                                        ],
                                        type_: Atom(
                                            Real,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f32",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "float24e8",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f64",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "float53e11",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "f32",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "TO_FLOAT32_INT",
                                                args: [
                                                    Nat(
                                                        "5",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "f32",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "TO_FLOAT32_REAL",
                                                args: [
                                                    Dec(
                                                        Dec {
                                                            whole: "5",
                                                            fract: Some(
                                                                "0",
                                                            ),
                                                            exp: None,
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "f32",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "TO_FLOAT32_BV32",
                                                args: [
                                                    BvLit(
                                                        BvLit {
                                                            n: "0",
                                                            width: "32",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "f64",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "TO_FLOAT64_BV64",
                                                args: [
                                                    BvLit(
                                                        BvLit {
                                                            n: "0",
                                                            width: "64",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "f32",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "TO_FLOAT32_FLOAT64",
                                                args: [
                                                    Float(
                                                        Float {
                                                            value: Plain(
                                                                PlainFloatValue {
                                                                    is_neg: false,
                                                                    whole: "0",
                                                                    fract: "0",
                                                                    exp: Exp {
                                                                        is_neg: false,
                                                                        digits: "0",
                                                                    },
                                                                },
                                                            ),
                                                            sig_size: "53",
                                                            exp_size: "11",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "f64",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "TO_FLOAT64_FLOAT32",
                                                args: [
                                                    Float(
                                                        Float {
                                                            value: Plain(
                                                                PlainFloatValue {
                                                                    is_neg: false,
                                                                    whole: "0",
                                                                    fract: "0",
                                                                    exp: Exp {
                                                                        is_neg: false,
                                                                        digits: "0",
                                                                    },
                                                                },
                                                            ),
                                                            sig_size: "24",
                                                            exp_size: "8",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "f32",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "TO_FLOAT32_FLOAT64",
                                                args: [
                                                    Var(
                                                        "f64",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "f64",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "TO_FLOAT64_FLOAT32",
                                                args: [
                                                    Var(
                                                        "f32",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
function {:builtin "(_ to_fp 8 24) RNE"} TO_FLOAT32_INT(int): float24e8;

function {:builtin "(_ to_fp 8 24) RNE"} TO_FLOAT32_REAL(real): float24e8;

function {:builtin "(_ to_fp 8 24) RNE"} TO_FLOAT32_BV32(bv32): float24e8;

function {:builtin "(_ to_fp 11 53) RNE"} TO_FLOAT64_BV64(bv64): float53e11;

function {:builtin "(_ to_fp 8 24) RNE"} TO_FLOAT32_FLOAT64(float53e11): float24e8;

function {:builtin "(_ to_fp 11 53) RNE"} TO_FLOAT64_FLOAT32(float24e8): float53e11;

procedure main() {
  var i: int;
  var r: real;
  var f32: float24e8;
  var f64: float53e11;

  f32 := TO_FLOAT32_INT(5);
  f32 := TO_FLOAT32_REAL(5.0);
  f32 := TO_FLOAT32_BV32(0bv32);
  f64 := TO_FLOAT64_BV64(0bv64);
  f32 := TO_FLOAT32_FLOAT64(0x0.0e0f53e11);
  f64 := TO_FLOAT64_FLOAT32(0x0.0e0f24e8);
  f32 := TO_FLOAT32_FLOAT64(f64);
  f64 := TO_FLOAT64_FLOAT32(f32);
  return;
}

[Input - ../../vendor/boogie/Test/floats/CorrectTypeConv.bpl]
// RUN: %boogie -proverWarnings:1 "%s" > "%t"
// RUN: %diff "%s.expect" "%t"

function {:builtin "(_ to_fp 8 24) RNE"} TO_FLOAT32_INT(int) returns (float24e8);
function {:builtin "(_ to_fp 8 24) RNE"} TO_FLOAT32_REAL(real) returns (float24e8);
function {:builtin "(_ to_fp 8 24) RNE"} TO_FLOAT32_BV32(bv32) returns (float24e8);
function {:builtin "(_ to_fp 11 53) RNE"} TO_FLOAT64_BV64(bv64) returns (float53e11);
function {:builtin "(_ to_fp 8 24) RNE"} TO_FLOAT32_FLOAT64(float53e11) returns (float24e8);
function {:builtin "(_ to_fp 11 53) RNE"} TO_FLOAT64_FLOAT32(float24e8) returns (float53e11);

procedure main() returns () {
  var i : int;
  var r : real;
  var f32 : float24e8;
  var f64 : float53e11;
  
  f32 := TO_FLOAT32_INT(5);
  f32 := TO_FLOAT32_REAL(5.0);
  
  f32 := TO_FLOAT32_BV32(0bv32);
  f64 := TO_FLOAT64_BV64(0bv64);
  
  f32 := TO_FLOAT32_FLOAT64(0x0.0e0f53e11);
  f64 := TO_FLOAT64_FLOAT32(0x0.0e0f24e8);
  
  f32 := TO_FLOAT32_FLOAT64(f64);
  f64 := TO_FLOAT64_FLOAT32(f32);
  
  return;
}
