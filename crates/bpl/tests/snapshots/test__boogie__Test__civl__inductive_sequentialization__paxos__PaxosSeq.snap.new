---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "3",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "A_Paxos'",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "perm",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "rs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "Round",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "joinedNodes",
                            "voteInfo",
                            "decision",
                            "pendingAsyncs",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "rs",
                                                ),
                                                Var(
                                                    "joinedNodes",
                                                ),
                                                Var(
                                                    "voteInfo",
                                                ),
                                                Var(
                                                    "decision",
                                                ),
                                                Var(
                                                    "pendingAsyncs",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Havoc(
                                HavocCmd {
                                    vars: [
                                        "joinedNodes",
                                        "voteInfo",
                                        "decision",
                                        "pendingAsyncs",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r1",
                                                                ],
                                                                type_: App(
                                                                    TypeApp {
                                                                        head: "Round",
                                                                        tail: None,
                                                                    },
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r2",
                                                                ],
                                                                type_: App(
                                                                    TypeApp {
                                                                        head: "Round",
                                                                        tail: None,
                                                                    },
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Logical(
                                                            LogicalExpr {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "is#Some",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "decision",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "r1",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: And,
                                                                rhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "is#Some",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "decision",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "r2",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "decision",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "r1",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Eq,
                                                                rhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "decision",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "r2",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "IS",
                            params: [
                                String(
                                    StringLit {
                                        text: "A_Paxos'",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "INV",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "A_StartRound",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "A_StartRound'",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "A_Propose",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "A_Propose'",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "A_Conclude",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "A_Conclude'",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "A_Join",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "A_Join'",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "A_Vote",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "A_Vote'",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "A_Paxos",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "perm",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "rs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "Round",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "A_StartRound",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "pendingAsyncs",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "numRounds",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "Round",
                                                        },
                                                    ),
                                                    Expr(
                                                        Nat(
                                                            "0",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "numRounds",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "rs",
                                                ),
                                                Var(
                                                    "joinedNodes",
                                                ),
                                                Var(
                                                    "voteInfo",
                                                ),
                                                Var(
                                                    "decision",
                                                ),
                                                Var(
                                                    "pendingAsyncs",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "NumRounds",
                                                        },
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "numRounds",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Nat(
                                                "0",
                                            ),
                                            op: Le,
                                            rhs: Var(
                                                "numRounds",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "PAs",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Quant(
                                            QuantExpr {
                                                kind: Lambda,
                                                body: QuantBody {
                                                    type_params: [],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "pa",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "PA",
                                                                            tail: None,
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: IfThenElse(
                                                        IfThenElseExpr {
                                                            cond: Logical(
                                                                LogicalExpr {
                                                                    lhs: Logical(
                                                                        LogicalExpr {
                                                                            lhs: Logical(
                                                                                LogicalExpr {
                                                                                    lhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "is#A_StartRound",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "pa",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                    op: And,
                                                                                    rhs: Rel(
                                                                                        RelExpr {
                                                                                            lhs: FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "round#A_StartRound",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "pa",
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                            op: Eq,
                                                                                            rhs: FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "round_lin#A_StartRound",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "pa",
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            op: And,
                                                                            rhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "Round",
                                                                                    args: [
                                                                                        FuncCall(
                                                                                            FuncCall {
                                                                                                target: "round#A_StartRound",
                                                                                                args: [
                                                                                                    Var(
                                                                                                        "pa",
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Rel(
                                                                        RelExpr {
                                                                            lhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "round#A_StartRound",
                                                                                    args: [
                                                                                        Var(
                                                                                            "pa",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Var(
                                                                                "numRounds",
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            then: Nat(
                                                                "1",
                                                            ),
                                                            else_: Nat(
                                                                "0",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "pendingAsyncs",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "PAs",
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "FirstCasePAs",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "k",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "numRounds",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "PA",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Int,
                        ),
                    },
                ),
            },
            body: Some(
                Quant(
                    QuantExpr {
                        kind: Lambda,
                        body: QuantBody {
                            type_params: [],
                            bound_vars: [
                                AttrTypedIdentsWhere {
                                    attrs: [],
                                    typed_idents_where: TypedIdentsWhere {
                                        typed_idents: TypedIdents {
                                            idents: [
                                                "pa",
                                            ],
                                            type_: App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        },
                                        where_: None,
                                    },
                                },
                            ],
                            attrs: [],
                            expr: IfThenElse(
                                IfThenElseExpr {
                                    cond: Logical(
                                        LogicalExpr {
                                            lhs: Logical(
                                                LogicalExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: FuncCall(
                                                                FuncCall {
                                                                    target: "is#A_StartRound",
                                                                    args: [
                                                                        Var(
                                                                            "pa",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "round#A_StartRound",
                                                                            args: [
                                                                                Var(
                                                                                    "pa",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "round_lin#A_StartRound",
                                                                            args: [
                                                                                Var(
                                                                                    "pa",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "k",
                                                            ),
                                                            op: Lt,
                                                            rhs: FuncCall(
                                                                FuncCall {
                                                                    target: "round#A_StartRound",
                                                                    args: [
                                                                        Var(
                                                                            "pa",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            op: And,
                                            rhs: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "round#A_StartRound",
                                                            args: [
                                                                Var(
                                                                    "pa",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Le,
                                                    rhs: Var(
                                                        "numRounds",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    then: Nat(
                                        "1",
                                    ),
                                    else_: Nat(
                                        "0",
                                    ),
                                },
                            ),
                        },
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "SecondCasePAs",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "k",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "m",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Node",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "numRounds",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "PA",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Int,
                        ),
                    },
                ),
            },
            body: Some(
                Quant(
                    QuantExpr {
                        kind: Lambda,
                        body: QuantBody {
                            type_params: [],
                            bound_vars: [
                                AttrTypedIdentsWhere {
                                    attrs: [],
                                    typed_idents_where: TypedIdentsWhere {
                                        typed_idents: TypedIdents {
                                            idents: [
                                                "pa",
                                            ],
                                            type_: App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        },
                                        where_: None,
                                    },
                                },
                            ],
                            attrs: [],
                            expr: IfThenElse(
                                IfThenElseExpr {
                                    cond: Logical(
                                        LogicalExpr {
                                            lhs: Logical(
                                                LogicalExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Logical(
                                                                        LogicalExpr {
                                                                            lhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "is#A_StartRound",
                                                                                    args: [
                                                                                        Var(
                                                                                            "pa",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            op: And,
                                                                            rhs: Rel(
                                                                                RelExpr {
                                                                                    lhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "round#A_StartRound",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "pa",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                    op: Eq,
                                                                                    rhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "round_lin#A_StartRound",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "pa",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Term(
                                                                                Term {
                                                                                    lhs: Var(
                                                                                        "k",
                                                                                    ),
                                                                                    op: Add,
                                                                                    rhs: Nat(
                                                                                        "1",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            op: Lt,
                                                                            rhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "round#A_StartRound",
                                                                                    args: [
                                                                                        Var(
                                                                                            "pa",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "round#A_StartRound",
                                                                            args: [
                                                                                Var(
                                                                                    "pa",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Le,
                                                                    rhs: Var(
                                                                        "numRounds",
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    op: Or,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "pa",
                                                            ),
                                                            op: Eq,
                                                            rhs: FuncCall(
                                                                FuncCall {
                                                                    target: "A_Propose",
                                                                    args: [
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "k",
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "ProposePermissions",
                                                                                args: [
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "k",
                                                                                            ),
                                                                                            op: Add,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            op: Or,
                                            rhs: Logical(
                                                LogicalExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Logical(
                                                                        LogicalExpr {
                                                                            lhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "is#A_Join",
                                                                                    args: [
                                                                                        Var(
                                                                                            "pa",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            op: And,
                                                                            rhs: Rel(
                                                                                RelExpr {
                                                                                    lhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "round#A_Join",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "pa",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                    op: Eq,
                                                                                    rhs: Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "k",
                                                                                            ),
                                                                                            op: Add,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "m",
                                                                            ),
                                                                            op: Lt,
                                                                            rhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "node#A_Join",
                                                                                    args: [
                                                                                        Var(
                                                                                            "pa",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "node#A_Join",
                                                                            args: [
                                                                                Var(
                                                                                    "pa",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Le,
                                                                    rhs: Var(
                                                                        "numNodes",
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: FuncCall(
                                                                FuncCall {
                                                                    target: "p#A_Join",
                                                                    args: [
                                                                        Var(
                                                                            "pa",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            op: Eq,
                                                            rhs: FuncCall(
                                                                FuncCall {
                                                                    target: "JoinPerm",
                                                                    args: [
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "k",
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "node#A_Join",
                                                                                args: [
                                                                                    Var(
                                                                                        "pa",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    then: Nat(
                                        "1",
                                    ),
                                    else_: Nat(
                                        "0",
                                    ),
                                },
                            ),
                        },
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "SecondCaseChoice",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "k",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "m",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Node",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "PA",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "m",
                                ),
                                op: Eq,
                                rhs: Var(
                                    "numNodes",
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "A_Propose",
                                args: [
                                    Term(
                                        Term {
                                            lhs: Var(
                                                "k",
                                            ),
                                            op: Add,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "ProposePermissions",
                                            args: [
                                                Term(
                                                    Term {
                                                        lhs: Var(
                                                            "k",
                                                        ),
                                                        op: Add,
                                                        rhs: Nat(
                                                            "1",
                                                        ),
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "A_Join",
                                args: [
                                    Term(
                                        Term {
                                            lhs: Var(
                                                "k",
                                            ),
                                            op: Add,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                    Term(
                                        Term {
                                            lhs: Var(
                                                "m",
                                            ),
                                            op: Add,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "JoinPerm",
                                            args: [
                                                Term(
                                                    Term {
                                                        lhs: Var(
                                                            "k",
                                                        ),
                                                        op: Add,
                                                        rhs: Nat(
                                                            "1",
                                                        ),
                                                    },
                                                ),
                                                Term(
                                                    Term {
                                                        lhs: Var(
                                                            "m",
                                                        ),
                                                        op: Add,
                                                        rhs: Nat(
                                                            "1",
                                                        ),
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "ThirdCasePAs",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "k",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "m",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Node",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "v",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Value",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "numRounds",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "PA",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Int,
                        ),
                    },
                ),
            },
            body: Some(
                Quant(
                    QuantExpr {
                        kind: Lambda,
                        body: QuantBody {
                            type_params: [],
                            bound_vars: [
                                AttrTypedIdentsWhere {
                                    attrs: [],
                                    typed_idents_where: TypedIdentsWhere {
                                        typed_idents: TypedIdents {
                                            idents: [
                                                "pa",
                                            ],
                                            type_: App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        },
                                        where_: None,
                                    },
                                },
                            ],
                            attrs: [],
                            expr: IfThenElse(
                                IfThenElseExpr {
                                    cond: Logical(
                                        LogicalExpr {
                                            lhs: Logical(
                                                LogicalExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Logical(
                                                                        LogicalExpr {
                                                                            lhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "is#A_StartRound",
                                                                                    args: [
                                                                                        Var(
                                                                                            "pa",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            op: And,
                                                                            rhs: Rel(
                                                                                RelExpr {
                                                                                    lhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "round#A_StartRound",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "pa",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                    op: Eq,
                                                                                    rhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "round_lin#A_StartRound",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "pa",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Term(
                                                                                Term {
                                                                                    lhs: Var(
                                                                                        "k",
                                                                                    ),
                                                                                    op: Add,
                                                                                    rhs: Nat(
                                                                                        "1",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            op: Lt,
                                                                            rhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "round#A_StartRound",
                                                                                    args: [
                                                                                        Var(
                                                                                            "pa",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "round#A_StartRound",
                                                                            args: [
                                                                                Var(
                                                                                    "pa",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Le,
                                                                    rhs: Var(
                                                                        "numRounds",
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    op: Or,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "pa",
                                                            ),
                                                            op: Eq,
                                                            rhs: FuncCall(
                                                                FuncCall {
                                                                    target: "A_Conclude",
                                                                    args: [
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "k",
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        Var(
                                                                            "v",
                                                                        ),
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "ConcludePerm",
                                                                                args: [
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "k",
                                                                                            ),
                                                                                            op: Add,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            op: Or,
                                            rhs: Logical(
                                                LogicalExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Logical(
                                                                        LogicalExpr {
                                                                            lhs: Logical(
                                                                                LogicalExpr {
                                                                                    lhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "is#A_Vote",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "pa",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                    op: And,
                                                                                    rhs: Rel(
                                                                                        RelExpr {
                                                                                            lhs: FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "round#A_Vote",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "pa",
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                            op: Eq,
                                                                                            rhs: Term(
                                                                                                Term {
                                                                                                    lhs: Var(
                                                                                                        "k",
                                                                                                    ),
                                                                                                    op: Add,
                                                                                                    rhs: Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            op: And,
                                                                            rhs: Rel(
                                                                                RelExpr {
                                                                                    lhs: Var(
                                                                                        "m",
                                                                                    ),
                                                                                    op: Lt,
                                                                                    rhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "node#A_Vote",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "pa",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Rel(
                                                                        RelExpr {
                                                                            lhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "node#A_Vote",
                                                                                    args: [
                                                                                        Var(
                                                                                            "pa",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Var(
                                                                                "numNodes",
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "value#A_Vote",
                                                                            args: [
                                                                                Var(
                                                                                    "pa",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: Var(
                                                                        "v",
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: FuncCall(
                                                                FuncCall {
                                                                    target: "p#A_Vote",
                                                                    args: [
                                                                        Var(
                                                                            "pa",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            op: Eq,
                                                            rhs: FuncCall(
                                                                FuncCall {
                                                                    target: "VotePerm",
                                                                    args: [
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "k",
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "node#A_Vote",
                                                                                args: [
                                                                                    Var(
                                                                                        "pa",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                    then: Nat(
                                        "1",
                                    ),
                                    else_: Nat(
                                        "0",
                                    ),
                                },
                            ),
                        },
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "ThirdCaseChoice",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "k",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "m",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Node",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "v",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Value",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "PA",
                        tail: None,
                    },
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "m",
                                ),
                                op: Eq,
                                rhs: Var(
                                    "numNodes",
                                ),
                            },
                        ),
                        then: FuncCall(
                            FuncCall {
                                target: "A_Conclude",
                                args: [
                                    Term(
                                        Term {
                                            lhs: Var(
                                                "k",
                                            ),
                                            op: Add,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                    Var(
                                        "v",
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "ConcludePerm",
                                            args: [
                                                Term(
                                                    Term {
                                                        lhs: Var(
                                                            "k",
                                                        ),
                                                        op: Add,
                                                        rhs: Nat(
                                                            "1",
                                                        ),
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        else_: FuncCall(
                            FuncCall {
                                target: "A_Vote",
                                args: [
                                    Term(
                                        Term {
                                            lhs: Var(
                                                "k",
                                            ),
                                            op: Add,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                    Term(
                                        Term {
                                            lhs: Var(
                                                "m",
                                            ),
                                            op: Add,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                    Var(
                                        "v",
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "VotePerm",
                                            args: [
                                                Term(
                                                    Term {
                                                        lhs: Var(
                                                            "k",
                                                        ),
                                                        op: Add,
                                                        rhs: Nat(
                                                            "1",
                                                        ),
                                                    },
                                                ),
                                                Term(
                                                    Term {
                                                        lhs: Var(
                                                            "m",
                                                        ),
                                                        op: Add,
                                                        rhs: Nat(
                                                            "1",
                                                        ),
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_invariant",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "INV",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "perm",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "rs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "Round",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "A_StartRound",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "A_Propose",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "A_Conclude",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "A_Join",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "A_Vote",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "choice",
                                    params: [],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "choice",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "PA",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "joinedNodes",
                            "voteInfo",
                            "decision",
                            "pendingAsyncs",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [
                                Attr(
                                    AttrContent {
                                        ident: "pool",
                                        params: [
                                            String(
                                                StringLit {
                                                    text: "NumRounds",
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            ],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "numRounds",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [
                                Attr(
                                    AttrContent {
                                        ident: "pool",
                                        params: [
                                            String(
                                                StringLit {
                                                    text: "Round",
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            ],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "k",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [
                                Attr(
                                    AttrContent {
                                        ident: "pool",
                                        params: [
                                            String(
                                                StringLit {
                                                    text: "Node",
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            ],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "m",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Node",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "rs",
                                                ),
                                                Var(
                                                    "joinedNodes",
                                                ),
                                                Var(
                                                    "voteInfo",
                                                ),
                                                Var(
                                                    "decision",
                                                ),
                                                Var(
                                                    "pendingAsyncs",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Havoc(
                                HavocCmd {
                                    vars: [
                                        "joinedNodes",
                                        "voteInfo",
                                        "decision",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "NumRounds",
                                                        },
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "numRounds",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                        Attr(
                                            AttrContent {
                                                ident: "add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "Round",
                                                        },
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "k",
                                                        ),
                                                    ),
                                                    Expr(
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "k",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "numRounds",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Logical(
                                        LogicalExpr {
                                            lhs: Rel(
                                                RelExpr {
                                                    lhs: Nat(
                                                        "0",
                                                    ),
                                                    op: Le,
                                                    rhs: Var(
                                                        "k",
                                                    ),
                                                },
                                            ),
                                            op: And,
                                            rhs: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "k",
                                                    ),
                                                    op: Le,
                                                    rhs: Var(
                                                        "numRounds",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "k",
                                                ),
                                                op: Eq,
                                                rhs: Var(
                                                    "numRounds",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "PAs",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "NoPAs",
                                                                args: [],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        ElseIf(
                                            IfCmd {
                                                guard: Asterisk,
                                                then: [
                                                    LabelOrCmd(
                                                        Claim(
                                                            ClaimCmd {
                                                                kind: Assume,
                                                                attrs: [],
                                                                proposition: Logical(
                                                                    LogicalExpr {
                                                                        lhs: Logical(
                                                                            LogicalExpr {
                                                                                lhs: Quant(
                                                                                    QuantExpr {
                                                                                        kind: ForAll,
                                                                                        body: QuantBody {
                                                                                            type_params: [],
                                                                                            bound_vars: [
                                                                                                AttrTypedIdentsWhere {
                                                                                                    attrs: [],
                                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                                        typed_idents: TypedIdents {
                                                                                                            idents: [
                                                                                                                "r",
                                                                                                            ],
                                                                                                            type_: App(
                                                                                                                TypeApp {
                                                                                                                    head: "Round",
                                                                                                                    tail: None,
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                        where_: None,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                            attrs: [],
                                                                                            expr: Implies(
                                                                                                ImpliesExpr {
                                                                                                    lhs: Logical(
                                                                                                        LogicalExpr {
                                                                                                            lhs: Rel(
                                                                                                                RelExpr {
                                                                                                                    lhs: Var(
                                                                                                                        "r",
                                                                                                                    ),
                                                                                                                    op: Lt,
                                                                                                                    rhs: Nat(
                                                                                                                        "1",
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                            op: Or,
                                                                                                            rhs: Rel(
                                                                                                                RelExpr {
                                                                                                                    lhs: Var(
                                                                                                                        "r",
                                                                                                                    ),
                                                                                                                    op: Gt,
                                                                                                                    rhs: Var(
                                                                                                                        "k",
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                    rhs: Rel(
                                                                                                        RelExpr {
                                                                                                            lhs: Array(
                                                                                                                ArrayExpr {
                                                                                                                    expr: Var(
                                                                                                                        "joinedNodes",
                                                                                                                    ),
                                                                                                                    subscripts: [
                                                                                                                        ArraySubscript {
                                                                                                                            keys: [
                                                                                                                                Var(
                                                                                                                                    "r",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            value: None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                            op: Eq,
                                                                                                            rhs: FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "NoNodes",
                                                                                                                    args: [],
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                                op: And,
                                                                                rhs: Quant(
                                                                                    QuantExpr {
                                                                                        kind: ForAll,
                                                                                        body: QuantBody {
                                                                                            type_params: [],
                                                                                            bound_vars: [
                                                                                                AttrTypedIdentsWhere {
                                                                                                    attrs: [],
                                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                                        typed_idents: TypedIdents {
                                                                                                            idents: [
                                                                                                                "r",
                                                                                                            ],
                                                                                                            type_: App(
                                                                                                                TypeApp {
                                                                                                                    head: "Round",
                                                                                                                    tail: None,
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                        where_: None,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                            attrs: [],
                                                                                            expr: Implies(
                                                                                                ImpliesExpr {
                                                                                                    lhs: Logical(
                                                                                                        LogicalExpr {
                                                                                                            lhs: Rel(
                                                                                                                RelExpr {
                                                                                                                    lhs: Var(
                                                                                                                        "r",
                                                                                                                    ),
                                                                                                                    op: Lt,
                                                                                                                    rhs: Nat(
                                                                                                                        "1",
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                            op: Or,
                                                                                                            rhs: Rel(
                                                                                                                RelExpr {
                                                                                                                    lhs: Var(
                                                                                                                        "r",
                                                                                                                    ),
                                                                                                                    op: Gt,
                                                                                                                    rhs: Var(
                                                                                                                        "k",
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                    rhs: FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "is#None",
                                                                                                            args: [
                                                                                                                Array(
                                                                                                                    ArrayExpr {
                                                                                                                        expr: Var(
                                                                                                                            "voteInfo",
                                                                                                                        ),
                                                                                                                        subscripts: [
                                                                                                                            ArraySubscript {
                                                                                                                                keys: [
                                                                                                                                    Var(
                                                                                                                                        "r",
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                                value: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Quant(
                                                                            QuantExpr {
                                                                                kind: ForAll,
                                                                                body: QuantBody {
                                                                                    type_params: [],
                                                                                    bound_vars: [
                                                                                        AttrTypedIdentsWhere {
                                                                                            attrs: [],
                                                                                            typed_idents_where: TypedIdentsWhere {
                                                                                                typed_idents: TypedIdents {
                                                                                                    idents: [
                                                                                                        "r",
                                                                                                    ],
                                                                                                    type_: App(
                                                                                                        TypeApp {
                                                                                                            head: "Round",
                                                                                                            tail: None,
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                                where_: None,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                    attrs: [],
                                                                                    expr: Implies(
                                                                                        ImpliesExpr {
                                                                                            lhs: Logical(
                                                                                                LogicalExpr {
                                                                                                    lhs: Rel(
                                                                                                        RelExpr {
                                                                                                            lhs: Var(
                                                                                                                "r",
                                                                                                            ),
                                                                                                            op: Lt,
                                                                                                            rhs: Nat(
                                                                                                                "1",
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                    op: Or,
                                                                                                    rhs: Rel(
                                                                                                        RelExpr {
                                                                                                            lhs: Var(
                                                                                                                "r",
                                                                                                            ),
                                                                                                            op: Gt,
                                                                                                            rhs: Var(
                                                                                                                "k",
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            rhs: FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "is#None",
                                                                                                    args: [
                                                                                                        Array(
                                                                                                            ArrayExpr {
                                                                                                                expr: Var(
                                                                                                                    "decision",
                                                                                                                ),
                                                                                                                subscripts: [
                                                                                                                    ArraySubscript {
                                                                                                                        keys: [
                                                                                                                            Var(
                                                                                                                                "r",
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                        value: None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    LabelOrCmd(
                                                        Assign(
                                                            AssignCmd {
                                                                lhs: [
                                                                    AssignLhs {
                                                                        ident: "PAs",
                                                                        subscripts: [],
                                                                    },
                                                                ],
                                                                rhs: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FirstCasePAs",
                                                                            args: [
                                                                                Var(
                                                                                    "k",
                                                                                ),
                                                                                Var(
                                                                                    "numRounds",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                    LabelOrCmd(
                                                        Assign(
                                                            AssignCmd {
                                                                lhs: [
                                                                    AssignLhs {
                                                                        ident: "choice",
                                                                        subscripts: [],
                                                                    },
                                                                ],
                                                                rhs: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "A_StartRound",
                                                                            args: [
                                                                                Term(
                                                                                    Term {
                                                                                        lhs: Var(
                                                                                            "k",
                                                                                        ),
                                                                                        op: Add,
                                                                                        rhs: Nat(
                                                                                            "1",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                                Term(
                                                                                    Term {
                                                                                        lhs: Var(
                                                                                            "k",
                                                                                        ),
                                                                                        op: Add,
                                                                                        rhs: Nat(
                                                                                            "1",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                ],
                                                else_: Some(
                                                    ElseIf(
                                                        IfCmd {
                                                            guard: Asterisk,
                                                            then: [
                                                                LabelOrCmd(
                                                                    Claim(
                                                                        ClaimCmd {
                                                                            kind: Assume,
                                                                            attrs: [],
                                                                            proposition: Logical(
                                                                                LogicalExpr {
                                                                                    lhs: Logical(
                                                                                        LogicalExpr {
                                                                                            lhs: Quant(
                                                                                                QuantExpr {
                                                                                                    kind: ForAll,
                                                                                                    body: QuantBody {
                                                                                                        type_params: [],
                                                                                                        bound_vars: [
                                                                                                            AttrTypedIdentsWhere {
                                                                                                                attrs: [],
                                                                                                                typed_idents_where: TypedIdentsWhere {
                                                                                                                    typed_idents: TypedIdents {
                                                                                                                        idents: [
                                                                                                                            "r",
                                                                                                                        ],
                                                                                                                        type_: App(
                                                                                                                            TypeApp {
                                                                                                                                head: "Round",
                                                                                                                                tail: None,
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                    where_: None,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                        attrs: [],
                                                                                                        expr: Implies(
                                                                                                            ImpliesExpr {
                                                                                                                lhs: Logical(
                                                                                                                    LogicalExpr {
                                                                                                                        lhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Var(
                                                                                                                                    "r",
                                                                                                                                ),
                                                                                                                                op: Lt,
                                                                                                                                rhs: Nat(
                                                                                                                                    "1",
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        op: Or,
                                                                                                                        rhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Var(
                                                                                                                                    "r",
                                                                                                                                ),
                                                                                                                                op: Gt,
                                                                                                                                rhs: Term(
                                                                                                                                    Term {
                                                                                                                                        lhs: Var(
                                                                                                                                            "k",
                                                                                                                                        ),
                                                                                                                                        op: Add,
                                                                                                                                        rhs: Nat(
                                                                                                                                            "1",
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                                rhs: Rel(
                                                                                                                    RelExpr {
                                                                                                                        lhs: Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "joinedNodes",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "r",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        op: Eq,
                                                                                                                        rhs: FuncCall(
                                                                                                                            FuncCall {
                                                                                                                                target: "NoNodes",
                                                                                                                                args: [],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                            op: And,
                                                                                            rhs: Quant(
                                                                                                QuantExpr {
                                                                                                    kind: ForAll,
                                                                                                    body: QuantBody {
                                                                                                        type_params: [],
                                                                                                        bound_vars: [
                                                                                                            AttrTypedIdentsWhere {
                                                                                                                attrs: [],
                                                                                                                typed_idents_where: TypedIdentsWhere {
                                                                                                                    typed_idents: TypedIdents {
                                                                                                                        idents: [
                                                                                                                            "r",
                                                                                                                        ],
                                                                                                                        type_: App(
                                                                                                                            TypeApp {
                                                                                                                                head: "Round",
                                                                                                                                tail: None,
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                    where_: None,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                        attrs: [],
                                                                                                        expr: Implies(
                                                                                                            ImpliesExpr {
                                                                                                                lhs: Logical(
                                                                                                                    LogicalExpr {
                                                                                                                        lhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Var(
                                                                                                                                    "r",
                                                                                                                                ),
                                                                                                                                op: Lt,
                                                                                                                                rhs: Nat(
                                                                                                                                    "1",
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        op: Or,
                                                                                                                        rhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Var(
                                                                                                                                    "r",
                                                                                                                                ),
                                                                                                                                op: Gt,
                                                                                                                                rhs: Var(
                                                                                                                                    "k",
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                                rhs: FuncCall(
                                                                                                                    FuncCall {
                                                                                                                        target: "is#None",
                                                                                                                        args: [
                                                                                                                            Array(
                                                                                                                                ArrayExpr {
                                                                                                                                    expr: Var(
                                                                                                                                        "voteInfo",
                                                                                                                                    ),
                                                                                                                                    subscripts: [
                                                                                                                                        ArraySubscript {
                                                                                                                                            keys: [
                                                                                                                                                Var(
                                                                                                                                                    "r",
                                                                                                                                                ),
                                                                                                                                            ],
                                                                                                                                            value: None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    op: And,
                                                                                    rhs: Quant(
                                                                                        QuantExpr {
                                                                                            kind: ForAll,
                                                                                            body: QuantBody {
                                                                                                type_params: [],
                                                                                                bound_vars: [
                                                                                                    AttrTypedIdentsWhere {
                                                                                                        attrs: [],
                                                                                                        typed_idents_where: TypedIdentsWhere {
                                                                                                            typed_idents: TypedIdents {
                                                                                                                idents: [
                                                                                                                    "r",
                                                                                                                ],
                                                                                                                type_: App(
                                                                                                                    TypeApp {
                                                                                                                        head: "Round",
                                                                                                                        tail: None,
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                            where_: None,
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                                attrs: [],
                                                                                                expr: Implies(
                                                                                                    ImpliesExpr {
                                                                                                        lhs: Logical(
                                                                                                            LogicalExpr {
                                                                                                                lhs: Rel(
                                                                                                                    RelExpr {
                                                                                                                        lhs: Var(
                                                                                                                            "r",
                                                                                                                        ),
                                                                                                                        op: Lt,
                                                                                                                        rhs: Nat(
                                                                                                                            "1",
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                                op: Or,
                                                                                                                rhs: Rel(
                                                                                                                    RelExpr {
                                                                                                                        lhs: Var(
                                                                                                                            "r",
                                                                                                                        ),
                                                                                                                        op: Gt,
                                                                                                                        rhs: Var(
                                                                                                                            "k",
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                        rhs: FuncCall(
                                                                                                            FuncCall {
                                                                                                                target: "is#None",
                                                                                                                args: [
                                                                                                                    Array(
                                                                                                                        ArrayExpr {
                                                                                                                            expr: Var(
                                                                                                                                "decision",
                                                                                                                            ),
                                                                                                                            subscripts: [
                                                                                                                                ArraySubscript {
                                                                                                                                    keys: [
                                                                                                                                        Var(
                                                                                                                                            "r",
                                                                                                                                        ),
                                                                                                                                    ],
                                                                                                                                    value: None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                                LabelOrCmd(
                                                                    Claim(
                                                                        ClaimCmd {
                                                                            kind: Assume,
                                                                            attrs: [
                                                                                Attr(
                                                                                    AttrContent {
                                                                                        ident: "add_to_pool",
                                                                                        params: [
                                                                                            String(
                                                                                                StringLit {
                                                                                                    text: "Node",
                                                                                                },
                                                                                            ),
                                                                                            Expr(
                                                                                                Var(
                                                                                                    "m",
                                                                                                ),
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            proposition: Logical(
                                                                                LogicalExpr {
                                                                                    lhs: Logical(
                                                                                        LogicalExpr {
                                                                                            lhs: Rel(
                                                                                                RelExpr {
                                                                                                    lhs: Nat(
                                                                                                        "0",
                                                                                                    ),
                                                                                                    op: Le,
                                                                                                    rhs: Var(
                                                                                                        "m",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            op: And,
                                                                                            rhs: Rel(
                                                                                                RelExpr {
                                                                                                    lhs: Var(
                                                                                                        "m",
                                                                                                    ),
                                                                                                    op: Le,
                                                                                                    rhs: Var(
                                                                                                        "numNodes",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    op: And,
                                                                                    rhs: Quant(
                                                                                        QuantExpr {
                                                                                            kind: ForAll,
                                                                                            body: QuantBody {
                                                                                                type_params: [],
                                                                                                bound_vars: [
                                                                                                    AttrTypedIdentsWhere {
                                                                                                        attrs: [],
                                                                                                        typed_idents_where: TypedIdentsWhere {
                                                                                                            typed_idents: TypedIdents {
                                                                                                                idents: [
                                                                                                                    "n",
                                                                                                                ],
                                                                                                                type_: App(
                                                                                                                    TypeApp {
                                                                                                                        head: "Node",
                                                                                                                        tail: None,
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                            where_: None,
                                                                                                        },
                                                                                                    },
                                                                                                ],
                                                                                                attrs: [],
                                                                                                expr: Implies(
                                                                                                    ImpliesExpr {
                                                                                                        lhs: Logical(
                                                                                                            LogicalExpr {
                                                                                                                lhs: Rel(
                                                                                                                    RelExpr {
                                                                                                                        lhs: Var(
                                                                                                                            "n",
                                                                                                                        ),
                                                                                                                        op: Lt,
                                                                                                                        rhs: Nat(
                                                                                                                            "1",
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                                op: Or,
                                                                                                                rhs: Rel(
                                                                                                                    RelExpr {
                                                                                                                        lhs: Var(
                                                                                                                            "n",
                                                                                                                        ),
                                                                                                                        op: Gt,
                                                                                                                        rhs: Var(
                                                                                                                            "m",
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                        rhs: Neg(
                                                                                                            NegExpr {
                                                                                                                op: Logical,
                                                                                                                expr: Array(
                                                                                                                    ArrayExpr {
                                                                                                                        expr: Var(
                                                                                                                            "joinedNodes",
                                                                                                                        ),
                                                                                                                        subscripts: [
                                                                                                                            ArraySubscript {
                                                                                                                                keys: [
                                                                                                                                    Term(
                                                                                                                                        Term {
                                                                                                                                            lhs: Var(
                                                                                                                                                "k",
                                                                                                                                            ),
                                                                                                                                            op: Add,
                                                                                                                                            rhs: Nat(
                                                                                                                                                "1",
                                                                                                                                            ),
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                                value: None,
                                                                                                                            },
                                                                                                                            ArraySubscript {
                                                                                                                                keys: [
                                                                                                                                    Var(
                                                                                                                                        "n",
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                                value: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "PAs",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "SecondCasePAs",
                                                                                        args: [
                                                                                            Var(
                                                                                                "k",
                                                                                            ),
                                                                                            Var(
                                                                                                "m",
                                                                                            ),
                                                                                            Var(
                                                                                                "numRounds",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "choice",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "SecondCaseChoice",
                                                                                        args: [
                                                                                            Var(
                                                                                                "k",
                                                                                            ),
                                                                                            Var(
                                                                                                "m",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            else_: Some(
                                                                Else(
                                                                    [
                                                                        LabelOrCmd(
                                                                            Claim(
                                                                                ClaimCmd {
                                                                                    kind: Assume,
                                                                                    attrs: [],
                                                                                    proposition: Logical(
                                                                                        LogicalExpr {
                                                                                            lhs: Logical(
                                                                                                LogicalExpr {
                                                                                                    lhs: Logical(
                                                                                                        LogicalExpr {
                                                                                                            lhs: FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "is#Some",
                                                                                                                    args: [
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "voteInfo",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Term(
                                                                                                                                                Term {
                                                                                                                                                    lhs: Var(
                                                                                                                                                        "k",
                                                                                                                                                    ),
                                                                                                                                                    op: Add,
                                                                                                                                                    rhs: Nat(
                                                                                                                                                        "1",
                                                                                                                                                    ),
                                                                                                                                                },
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                            op: And,
                                                                                                            rhs: Quant(
                                                                                                                QuantExpr {
                                                                                                                    kind: ForAll,
                                                                                                                    body: QuantBody {
                                                                                                                        type_params: [],
                                                                                                                        bound_vars: [
                                                                                                                            AttrTypedIdentsWhere {
                                                                                                                                attrs: [],
                                                                                                                                typed_idents_where: TypedIdentsWhere {
                                                                                                                                    typed_idents: TypedIdents {
                                                                                                                                        idents: [
                                                                                                                                            "r",
                                                                                                                                        ],
                                                                                                                                        type_: App(
                                                                                                                                            TypeApp {
                                                                                                                                                head: "Round",
                                                                                                                                                tail: None,
                                                                                                                                            },
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                    where_: None,
                                                                                                                                },
                                                                                                                            },
                                                                                                                        ],
                                                                                                                        attrs: [],
                                                                                                                        expr: Implies(
                                                                                                                            ImpliesExpr {
                                                                                                                                lhs: Logical(
                                                                                                                                    LogicalExpr {
                                                                                                                                        lhs: Rel(
                                                                                                                                            RelExpr {
                                                                                                                                                lhs: Var(
                                                                                                                                                    "r",
                                                                                                                                                ),
                                                                                                                                                op: Lt,
                                                                                                                                                rhs: Nat(
                                                                                                                                                    "1",
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        ),
                                                                                                                                        op: Or,
                                                                                                                                        rhs: Rel(
                                                                                                                                            RelExpr {
                                                                                                                                                lhs: Var(
                                                                                                                                                    "r",
                                                                                                                                                ),
                                                                                                                                                op: Gt,
                                                                                                                                                rhs: Term(
                                                                                                                                                    Term {
                                                                                                                                                        lhs: Var(
                                                                                                                                                            "k",
                                                                                                                                                        ),
                                                                                                                                                        op: Add,
                                                                                                                                                        rhs: Nat(
                                                                                                                                                            "1",
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                                rhs: Rel(
                                                                                                                                    RelExpr {
                                                                                                                                        lhs: Array(
                                                                                                                                            ArrayExpr {
                                                                                                                                                expr: Var(
                                                                                                                                                    "joinedNodes",
                                                                                                                                                ),
                                                                                                                                                subscripts: [
                                                                                                                                                    ArraySubscript {
                                                                                                                                                        keys: [
                                                                                                                                                            Var(
                                                                                                                                                                "r",
                                                                                                                                                            ),
                                                                                                                                                        ],
                                                                                                                                                        value: None,
                                                                                                                                                    },
                                                                                                                                                ],
                                                                                                                                            },
                                                                                                                                        ),
                                                                                                                                        op: Eq,
                                                                                                                                        rhs: FuncCall(
                                                                                                                                            FuncCall {
                                                                                                                                                target: "NoNodes",
                                                                                                                                                args: [],
                                                                                                                                            },
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                    op: And,
                                                                                                    rhs: Quant(
                                                                                                        QuantExpr {
                                                                                                            kind: ForAll,
                                                                                                            body: QuantBody {
                                                                                                                type_params: [],
                                                                                                                bound_vars: [
                                                                                                                    AttrTypedIdentsWhere {
                                                                                                                        attrs: [],
                                                                                                                        typed_idents_where: TypedIdentsWhere {
                                                                                                                            typed_idents: TypedIdents {
                                                                                                                                idents: [
                                                                                                                                    "r",
                                                                                                                                ],
                                                                                                                                type_: App(
                                                                                                                                    TypeApp {
                                                                                                                                        head: "Round",
                                                                                                                                        tail: None,
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            },
                                                                                                                            where_: None,
                                                                                                                        },
                                                                                                                    },
                                                                                                                ],
                                                                                                                attrs: [],
                                                                                                                expr: Implies(
                                                                                                                    ImpliesExpr {
                                                                                                                        lhs: Logical(
                                                                                                                            LogicalExpr {
                                                                                                                                lhs: Rel(
                                                                                                                                    RelExpr {
                                                                                                                                        lhs: Var(
                                                                                                                                            "r",
                                                                                                                                        ),
                                                                                                                                        op: Lt,
                                                                                                                                        rhs: Nat(
                                                                                                                                            "1",
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                                op: Or,
                                                                                                                                rhs: Rel(
                                                                                                                                    RelExpr {
                                                                                                                                        lhs: Var(
                                                                                                                                            "r",
                                                                                                                                        ),
                                                                                                                                        op: Gt,
                                                                                                                                        rhs: Term(
                                                                                                                                            Term {
                                                                                                                                                lhs: Var(
                                                                                                                                                    "k",
                                                                                                                                                ),
                                                                                                                                                op: Add,
                                                                                                                                                rhs: Nat(
                                                                                                                                                    "1",
                                                                                                                                                ),
                                                                                                                                            },
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        rhs: FuncCall(
                                                                                                                            FuncCall {
                                                                                                                                target: "is#None",
                                                                                                                                args: [
                                                                                                                                    Array(
                                                                                                                                        ArrayExpr {
                                                                                                                                            expr: Var(
                                                                                                                                                "voteInfo",
                                                                                                                                            ),
                                                                                                                                            subscripts: [
                                                                                                                                                ArraySubscript {
                                                                                                                                                    keys: [
                                                                                                                                                        Var(
                                                                                                                                                            "r",
                                                                                                                                                        ),
                                                                                                                                                    ],
                                                                                                                                                    value: None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            op: And,
                                                                                            rhs: Quant(
                                                                                                QuantExpr {
                                                                                                    kind: ForAll,
                                                                                                    body: QuantBody {
                                                                                                        type_params: [],
                                                                                                        bound_vars: [
                                                                                                            AttrTypedIdentsWhere {
                                                                                                                attrs: [],
                                                                                                                typed_idents_where: TypedIdentsWhere {
                                                                                                                    typed_idents: TypedIdents {
                                                                                                                        idents: [
                                                                                                                            "r",
                                                                                                                        ],
                                                                                                                        type_: App(
                                                                                                                            TypeApp {
                                                                                                                                head: "Round",
                                                                                                                                tail: None,
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                    where_: None,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                        attrs: [],
                                                                                                        expr: Implies(
                                                                                                            ImpliesExpr {
                                                                                                                lhs: Logical(
                                                                                                                    LogicalExpr {
                                                                                                                        lhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Var(
                                                                                                                                    "r",
                                                                                                                                ),
                                                                                                                                op: Lt,
                                                                                                                                rhs: Nat(
                                                                                                                                    "1",
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        op: Or,
                                                                                                                        rhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Var(
                                                                                                                                    "r",
                                                                                                                                ),
                                                                                                                                op: Gt,
                                                                                                                                rhs: Var(
                                                                                                                                    "k",
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                                rhs: FuncCall(
                                                                                                                    FuncCall {
                                                                                                                        target: "is#None",
                                                                                                                        args: [
                                                                                                                            Array(
                                                                                                                                ArrayExpr {
                                                                                                                                    expr: Var(
                                                                                                                                        "decision",
                                                                                                                                    ),
                                                                                                                                    subscripts: [
                                                                                                                                        ArraySubscript {
                                                                                                                                            keys: [
                                                                                                                                                Var(
                                                                                                                                                    "r",
                                                                                                                                                ),
                                                                                                                                            ],
                                                                                                                                            value: None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ),
                                                                        LabelOrCmd(
                                                                            Claim(
                                                                                ClaimCmd {
                                                                                    kind: Assume,
                                                                                    attrs: [
                                                                                        Attr(
                                                                                            AttrContent {
                                                                                                ident: "add_to_pool",
                                                                                                params: [
                                                                                                    String(
                                                                                                        StringLit {
                                                                                                            text: "Node",
                                                                                                        },
                                                                                                    ),
                                                                                                    Expr(
                                                                                                        Var(
                                                                                                            "m",
                                                                                                        ),
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    proposition: Logical(
                                                                                        LogicalExpr {
                                                                                            lhs: Logical(
                                                                                                LogicalExpr {
                                                                                                    lhs: Rel(
                                                                                                        RelExpr {
                                                                                                            lhs: Nat(
                                                                                                                "0",
                                                                                                            ),
                                                                                                            op: Le,
                                                                                                            rhs: Var(
                                                                                                                "m",
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                    op: And,
                                                                                                    rhs: Rel(
                                                                                                        RelExpr {
                                                                                                            lhs: Var(
                                                                                                                "m",
                                                                                                            ),
                                                                                                            op: Le,
                                                                                                            rhs: Var(
                                                                                                                "numNodes",
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            op: And,
                                                                                            rhs: Quant(
                                                                                                QuantExpr {
                                                                                                    kind: ForAll,
                                                                                                    body: QuantBody {
                                                                                                        type_params: [],
                                                                                                        bound_vars: [
                                                                                                            AttrTypedIdentsWhere {
                                                                                                                attrs: [],
                                                                                                                typed_idents_where: TypedIdentsWhere {
                                                                                                                    typed_idents: TypedIdents {
                                                                                                                        idents: [
                                                                                                                            "n",
                                                                                                                        ],
                                                                                                                        type_: App(
                                                                                                                            TypeApp {
                                                                                                                                head: "Node",
                                                                                                                                tail: None,
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                    where_: None,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                        attrs: [],
                                                                                                        expr: Implies(
                                                                                                            ImpliesExpr {
                                                                                                                lhs: Logical(
                                                                                                                    LogicalExpr {
                                                                                                                        lhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Var(
                                                                                                                                    "n",
                                                                                                                                ),
                                                                                                                                op: Lt,
                                                                                                                                rhs: Nat(
                                                                                                                                    "1",
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        op: Or,
                                                                                                                        rhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Var(
                                                                                                                                    "n",
                                                                                                                                ),
                                                                                                                                op: Gt,
                                                                                                                                rhs: Var(
                                                                                                                                    "m",
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                                rhs: Neg(
                                                                                                                    NegExpr {
                                                                                                                        op: Logical,
                                                                                                                        expr: Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: FuncCall(
                                                                                                                                    FuncCall {
                                                                                                                                        target: "ns#VoteInfo",
                                                                                                                                        args: [
                                                                                                                                            FuncCall(
                                                                                                                                                FuncCall {
                                                                                                                                                    target: "t#Some",
                                                                                                                                                    args: [
                                                                                                                                                        Array(
                                                                                                                                                            ArrayExpr {
                                                                                                                                                                expr: Var(
                                                                                                                                                                    "voteInfo",
                                                                                                                                                                ),
                                                                                                                                                                subscripts: [
                                                                                                                                                                    ArraySubscript {
                                                                                                                                                                        keys: [
                                                                                                                                                                            Term(
                                                                                                                                                                                Term {
                                                                                                                                                                                    lhs: Var(
                                                                                                                                                                                        "k",
                                                                                                                                                                                    ),
                                                                                                                                                                                    op: Add,
                                                                                                                                                                                    rhs: Nat(
                                                                                                                                                                                        "1",
                                                                                                                                                                                    ),
                                                                                                                                                                                },
                                                                                                                                                                            ),
                                                                                                                                                                        ],
                                                                                                                                                                        value: None,
                                                                                                                                                                    },
                                                                                                                                                                ],
                                                                                                                                                            },
                                                                                                                                                        ),
                                                                                                                                                    ],
                                                                                                                                                },
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "n",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ),
                                                                        LabelOrCmd(
                                                                            Assign(
                                                                                AssignCmd {
                                                                                    lhs: [
                                                                                        AssignLhs {
                                                                                            ident: "PAs",
                                                                                            subscripts: [],
                                                                                        },
                                                                                    ],
                                                                                    rhs: [
                                                                                        FuncCall(
                                                                                            FuncCall {
                                                                                                target: "ThirdCasePAs",
                                                                                                args: [
                                                                                                    Var(
                                                                                                        "k",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "m",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "value#VoteInfo",
                                                                                                            args: [
                                                                                                                FuncCall(
                                                                                                                    FuncCall {
                                                                                                                        target: "t#Some",
                                                                                                                        args: [
                                                                                                                            Array(
                                                                                                                                ArrayExpr {
                                                                                                                                    expr: Var(
                                                                                                                                        "voteInfo",
                                                                                                                                    ),
                                                                                                                                    subscripts: [
                                                                                                                                        ArraySubscript {
                                                                                                                                            keys: [
                                                                                                                                                Term(
                                                                                                                                                    Term {
                                                                                                                                                        lhs: Var(
                                                                                                                                                            "k",
                                                                                                                                                        ),
                                                                                                                                                        op: Add,
                                                                                                                                                        rhs: Nat(
                                                                                                                                                            "1",
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                ),
                                                                                                                                            ],
                                                                                                                                            value: None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "numRounds",
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ),
                                                                        LabelOrCmd(
                                                                            Assign(
                                                                                AssignCmd {
                                                                                    lhs: [
                                                                                        AssignLhs {
                                                                                            ident: "choice",
                                                                                            subscripts: [],
                                                                                        },
                                                                                    ],
                                                                                    rhs: [
                                                                                        FuncCall(
                                                                                            FuncCall {
                                                                                                target: "ThirdCaseChoice",
                                                                                                args: [
                                                                                                    Var(
                                                                                                        "k",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "m",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "value#VoteInfo",
                                                                                                            args: [
                                                                                                                FuncCall(
                                                                                                                    FuncCall {
                                                                                                                        target: "t#Some",
                                                                                                                        args: [
                                                                                                                            Array(
                                                                                                                                ArrayExpr {
                                                                                                                                    expr: Var(
                                                                                                                                        "voteInfo",
                                                                                                                                    ),
                                                                                                                                    subscripts: [
                                                                                                                                        ArraySubscript {
                                                                                                                                            keys: [
                                                                                                                                                Term(
                                                                                                                                                    Term {
                                                                                                                                                        lhs: Var(
                                                                                                                                                            "k",
                                                                                                                                                        ),
                                                                                                                                                        op: Add,
                                                                                                                                                        rhs: Nat(
                                                                                                                                                            "1",
                                                                                                                                                        ),
                                                                                                                                                    },
                                                                                                                                                ),
                                                                                                                                            ],
                                                                                                                                            value: None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r",
                                                                ],
                                                                type_: App(
                                                                    TypeApp {
                                                                        head: "Round",
                                                                        tail: None,
                                                                    },
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: FuncCall(
                                                            FuncCall {
                                                                target: "is#Some",
                                                                args: [
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "decision",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "r",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        rhs: Logical(
                                                            LogicalExpr {
                                                                lhs: Logical(
                                                                    LogicalExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "is#Some",
                                                                                args: [
                                                                                    Array(
                                                                                        ArrayExpr {
                                                                                            expr: Var(
                                                                                                "voteInfo",
                                                                                            ),
                                                                                            subscripts: [
                                                                                                ArraySubscript {
                                                                                                    keys: [
                                                                                                        Var(
                                                                                                            "r",
                                                                                                        ),
                                                                                                    ],
                                                                                                    value: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "value#VoteInfo",
                                                                                        args: [
                                                                                            FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "t#Some",
                                                                                                    args: [
                                                                                                        Array(
                                                                                                            ArrayExpr {
                                                                                                                expr: Var(
                                                                                                                    "voteInfo",
                                                                                                                ),
                                                                                                                subscripts: [
                                                                                                                    ArraySubscript {
                                                                                                                        keys: [
                                                                                                                            Var(
                                                                                                                                "r",
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                        value: None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Eq,
                                                                                rhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "t#Some",
                                                                                        args: [
                                                                                            Array(
                                                                                                ArrayExpr {
                                                                                                    expr: Var(
                                                                                                        "decision",
                                                                                                    ),
                                                                                                    subscripts: [
                                                                                                        ArraySubscript {
                                                                                                            keys: [
                                                                                                                Var(
                                                                                                                    "r",
                                                                                                                ),
                                                                                                            ],
                                                                                                            value: None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                op: And,
                                                                rhs: Quant(
                                                                    QuantExpr {
                                                                        kind: Exists,
                                                                        body: QuantBody {
                                                                            type_params: [],
                                                                            bound_vars: [
                                                                                AttrTypedIdentsWhere {
                                                                                    attrs: [],
                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                        typed_idents: TypedIdents {
                                                                                            idents: [
                                                                                                "q",
                                                                                            ],
                                                                                            type_: App(
                                                                                                TypeApp {
                                                                                                    head: "NodeSet",
                                                                                                    tail: None,
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        where_: None,
                                                                                    },
                                                                                },
                                                                            ],
                                                                            attrs: [
                                                                                Trigger(
                                                                                    [
                                                                                        FuncCall(
                                                                                            FuncCall {
                                                                                                target: "IsSubset",
                                                                                                args: [
                                                                                                    Var(
                                                                                                        "q",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "ns#VoteInfo",
                                                                                                            args: [
                                                                                                                FuncCall(
                                                                                                                    FuncCall {
                                                                                                                        target: "t#Some",
                                                                                                                        args: [
                                                                                                                            Array(
                                                                                                                                ArrayExpr {
                                                                                                                                    expr: Var(
                                                                                                                                        "voteInfo",
                                                                                                                                    ),
                                                                                                                                    subscripts: [
                                                                                                                                        ArraySubscript {
                                                                                                                                            keys: [
                                                                                                                                                Var(
                                                                                                                                                    "r",
                                                                                                                                                ),
                                                                                                                                            ],
                                                                                                                                            value: None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                        FuncCall(
                                                                                            FuncCall {
                                                                                                target: "IsQuorum",
                                                                                                args: [
                                                                                                    Var(
                                                                                                        "q",
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                ),
                                                                            ],
                                                                            expr: Logical(
                                                                                LogicalExpr {
                                                                                    lhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "IsSubset",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "q",
                                                                                                ),
                                                                                                FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "ns#VoteInfo",
                                                                                                        args: [
                                                                                                            FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "t#Some",
                                                                                                                    args: [
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "voteInfo",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "r",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                    op: And,
                                                                                    rhs: FuncCall(
                                                                                        FuncCall {
                                                                                            target: "IsQuorum",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "q",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r1",
                                                                ],
                                                                type_: App(
                                                                    TypeApp {
                                                                        head: "Round",
                                                                        tail: None,
                                                                    },
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r2",
                                                                ],
                                                                type_: App(
                                                                    TypeApp {
                                                                        head: "Round",
                                                                        tail: None,
                                                                    },
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Logical(
                                                            LogicalExpr {
                                                                lhs: Logical(
                                                                    LogicalExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "is#Some",
                                                                                args: [
                                                                                    Array(
                                                                                        ArrayExpr {
                                                                                            expr: Var(
                                                                                                "decision",
                                                                                            ),
                                                                                            subscripts: [
                                                                                                ArraySubscript {
                                                                                                    keys: [
                                                                                                        Var(
                                                                                                            "r1",
                                                                                                        ),
                                                                                                    ],
                                                                                                    value: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Var(
                                                                                    "r1",
                                                                                ),
                                                                                op: Le,
                                                                                rhs: Var(
                                                                                    "r2",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                op: And,
                                                                rhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "is#Some",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "voteInfo",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "r2",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "value#VoteInfo",
                                                                        args: [
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "t#Some",
                                                                                    args: [
                                                                                        Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "voteInfo",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "r2",
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Eq,
                                                                rhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "t#Some",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "decision",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "r1",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r1",
                                                                ],
                                                                type_: App(
                                                                    TypeApp {
                                                                        head: "Round",
                                                                        tail: None,
                                                                    },
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r2",
                                                                ],
                                                                type_: App(
                                                                    TypeApp {
                                                                        head: "Round",
                                                                        tail: None,
                                                                    },
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Logical(
                                                            LogicalExpr {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "is#Some",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "decision",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "r1",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: And,
                                                                rhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "is#Some",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "decision",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "r2",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "decision",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "r1",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Eq,
                                                                rhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "decision",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "r2",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "pendingAsyncs",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "PAs",
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
procedure {:atomic} {:layer 3} A_Paxos'({:linear_in "perm"} rs: [Round]bool)
  modifies joinedNodes, voteInfo, decision, pendingAsyncs;
{
  assert Init(rs, joinedNodes, voteInfo, decision, pendingAsyncs);
  havoc joinedNodes, voteInfo, decision, pendingAsyncs;
  assume (forall r1: Round, r2: Round :: is#Some(decision[r1]) && is#Some(decision[r2]) ==> decision[r1] == decision[r2]);
}

procedure {:atomic} {:layer 2} {:IS "A_Paxos'", "INV"} {:elim "A_StartRound", "A_StartRound'"} {:elim "A_Propose", "A_Propose'"} {:elim "A_Conclude", "A_Conclude'"} {:elim "A_Join", "A_Join'"} {:elim "A_Vote", "A_Vote'"} A_Paxos({:linear_in "perm"} rs: [Round]bool) returns ({:pending_async "A_StartRound"} PAs: [PA]int)
  modifies pendingAsyncs;
{
  var numRounds: int;

  assert {:add_to_pool "Round", 0, numRounds} Init(rs, joinedNodes, voteInfo, decision, pendingAsyncs);
  assume {:add_to_pool "NumRounds", numRounds} 0 <= numRounds;
  PAs := (lambda pa: PA :: if is#A_StartRound(pa) && round#A_StartRound(pa) == round_lin#A_StartRound(pa) && Round(round#A_StartRound(pa)) && round#A_StartRound(pa) <= numRounds then 1 else 0);
  pendingAsyncs := PAs;
}

function {:inline} FirstCasePAs(k: int, numRounds: int): [PA]int {
  (lambda pa: PA :: if is#A_StartRound(pa) && round#A_StartRound(pa) == round_lin#A_StartRound(pa) && k < round#A_StartRound(pa) && round#A_StartRound(pa) <= numRounds then 1 else 0)
}

function {:inline} SecondCasePAs(k: int, m: Node, numRounds: int): [PA]int {
  (lambda pa: PA :: if (is#A_StartRound(pa) && round#A_StartRound(pa) == round_lin#A_StartRound(pa) && k + 1 < round#A_StartRound(pa) && round#A_StartRound(pa) <= numRounds) || pa == A_Propose(k + 1, ProposePermissions(k + 1)) || (is#A_Join(pa) && round#A_Join(pa) == k + 1 && m < node#A_Join(pa) && node#A_Join(pa) <= numNodes && p#A_Join(pa) == JoinPerm(k + 1, node#A_Join(pa))) then 1 else 0)
}

function {:inline} SecondCaseChoice(k: int, m: Node): PA {
  if m == numNodes then A_Propose(k + 1, ProposePermissions(k + 1)) else A_Join(k + 1, m + 1, JoinPerm(k + 1, m + 1))
}

function {:inline} ThirdCasePAs(k: int, m: Node, v: Value, numRounds: int): [PA]int {
  (lambda pa: PA :: if (is#A_StartRound(pa) && round#A_StartRound(pa) == round_lin#A_StartRound(pa) && k + 1 < round#A_StartRound(pa) && round#A_StartRound(pa) <= numRounds) || pa == A_Conclude(k + 1, v, ConcludePerm(k + 1)) || (is#A_Vote(pa) && round#A_Vote(pa) == k + 1 && m < node#A_Vote(pa) && node#A_Vote(pa) <= numNodes && value#A_Vote(pa) == v && p#A_Vote(pa) == VotePerm(k + 1, node#A_Vote(pa))) then 1 else 0)
}

function {:inline} ThirdCaseChoice(k: int, m: Node, v: Value): PA {
  if m == numNodes then A_Conclude(k + 1, v, ConcludePerm(k + 1)) else A_Vote(k + 1, m + 1, v, VotePerm(k + 1, m + 1))
}

procedure {:IS_invariant} {:layer 2} INV({:linear_in "perm"} rs: [Round]bool) returns ({:pending_async "A_StartRound", "A_Propose", "A_Conclude", "A_Join", "A_Vote"} PAs: [PA]int, {:choice} choice: PA)
  modifies joinedNodes, voteInfo, decision, pendingAsyncs;
{
  var {:pool "NumRounds"} numRounds: int;
  var {:pool "Round"} k: int;
  var {:pool "Node"} m: Node;

  assert Init(rs, joinedNodes, voteInfo, decision, pendingAsyncs);
  havoc joinedNodes, voteInfo, decision;
  assume {:add_to_pool "NumRounds", numRounds} {:add_to_pool "Round", k, k + 1, numRounds} 0 <= k && k <= numRounds;
  if (k == numRounds) {
    PAs := NoPAs();
  } else if (*) {
    assume (forall r: Round :: r < 1 || r > k ==> joinedNodes[r] == NoNodes()) && (forall r: Round :: r < 1 || r > k ==> is#None(voteInfo[r])) && (forall r: Round :: r < 1 || r > k ==> is#None(decision[r]));
    PAs := FirstCasePAs(k, numRounds);
    choice := A_StartRound(k + 1, k + 1);
  } else if (*) {
    assume (forall r: Round :: r < 1 || r > k + 1 ==> joinedNodes[r] == NoNodes()) && (forall r: Round :: r < 1 || r > k ==> is#None(voteInfo[r])) && (forall r: Round :: r < 1 || r > k ==> is#None(decision[r]));
    assume {:add_to_pool "Node", m} 0 <= m && m <= numNodes && (forall n: Node :: n < 1 || n > m ==> !joinedNodes[k + 1][n]);
    PAs := SecondCasePAs(k, m, numRounds);
    choice := SecondCaseChoice(k, m);
  } else {
    assume is#Some(voteInfo[k + 1]) && (forall r: Round :: r < 1 || r > k + 1 ==> joinedNodes[r] == NoNodes()) && (forall r: Round :: r < 1 || r > k + 1 ==> is#None(voteInfo[r])) && (forall r: Round :: r < 1 || r > k ==> is#None(decision[r]));
    assume {:add_to_pool "Node", m} 0 <= m && m <= numNodes && (forall n: Node :: n < 1 || n > m ==> !ns#VoteInfo(t#Some(voteInfo[k + 1]))[n]);
    PAs := ThirdCasePAs(k, m, value#VoteInfo(t#Some(voteInfo[k + 1])), numRounds);
    choice := ThirdCaseChoice(k, m, value#VoteInfo(t#Some(voteInfo[k + 1])));
  }
  assume (forall r: Round :: is#Some(decision[r]) ==> is#Some(voteInfo[r]) && value#VoteInfo(t#Some(voteInfo[r])) == t#Some(decision[r]) && (exists q: NodeSet :: {IsSubset(q, ns#VoteInfo(t#Some(voteInfo[r]))), IsQuorum(q)} IsSubset(q, ns#VoteInfo(t#Some(voteInfo[r]))) && IsQuorum(q)));
  assume (forall r1: Round, r2: Round :: is#Some(decision[r1]) && r1 <= r2 && is#Some(voteInfo[r2]) ==> value#VoteInfo(t#Some(voteInfo[r2])) == t#Some(decision[r1]));
  assume (forall r1: Round, r2: Round :: is#Some(decision[r1]) && is#Some(decision[r2]) ==> decision[r1] == decision[r2]);
  pendingAsyncs := PAs;
}

[Input - ../../vendor/boogie/Test/civl/inductive-sequentialization/paxos/PaxosSeq.bpl]
procedure {:atomic}{:layer 3} A_Paxos'({:linear_in "perm"} rs: [Round]bool)
returns ()
modifies joinedNodes, voteInfo, decision, pendingAsyncs;
{
  assert Init(rs, joinedNodes, voteInfo, decision, pendingAsyncs);
  havoc joinedNodes, voteInfo, decision, pendingAsyncs;
  assume (forall r1: Round, r2: Round :: is#Some(decision[r1]) && is#Some(decision[r2]) ==> decision[r1] == decision[r2]);
}

procedure {:atomic}{:layer 2}
{:IS "A_Paxos'","INV"}
{:elim "A_StartRound","A_StartRound'"}
{:elim "A_Propose","A_Propose'"}
{:elim "A_Conclude","A_Conclude'"}
{:elim "A_Join","A_Join'"}
{:elim "A_Vote","A_Vote'"}
A_Paxos({:linear_in "perm"} rs: [Round]bool)
returns ({:pending_async "A_StartRound"} PAs:[PA]int)
modifies pendingAsyncs;
{
  var numRounds: int;
  assert
    {:add_to_pool "Round", 0, numRounds}
    Init(rs, joinedNodes, voteInfo, decision, pendingAsyncs);
  assume
    {:add_to_pool "NumRounds", numRounds}
    0 <= numRounds;
  PAs := (lambda pa: PA :: if is#A_StartRound(pa) && round#A_StartRound(pa) == round_lin#A_StartRound(pa) && Round(round#A_StartRound(pa)) && round#A_StartRound(pa) <= numRounds then 1 else 0);
  pendingAsyncs := PAs;
}

function {:inline} FirstCasePAs(k: int, numRounds: int) : [PA]int
{
  (lambda pa: PA :: if (is#A_StartRound(pa) && round#A_StartRound(pa) == round_lin#A_StartRound(pa) && k < round#A_StartRound(pa) && round#A_StartRound(pa) <= numRounds) then 1 else 0)
}

function {:inline} SecondCasePAs(k: int, m: Node, numRounds: int) : [PA]int
{
  (lambda pa : PA ::
    if (is#A_StartRound(pa) && round#A_StartRound(pa) == round_lin#A_StartRound(pa) && k+1 < round#A_StartRound(pa) && round#A_StartRound(pa) <= numRounds) ||
       (pa == A_Propose(k+1, ProposePermissions(k+1))) ||
       (is#A_Join(pa) && round#A_Join(pa) == k+1 && m < node#A_Join(pa) && node#A_Join(pa) <= numNodes &&
         p#A_Join(pa) == JoinPerm(k+1, node#A_Join(pa)))
    then 1 else 0)
}

function {:inline} SecondCaseChoice(k: int, m: Node) : PA
{
  if m == numNodes then A_Propose(k+1, ProposePermissions(k+1)) else A_Join(k+1, m+1, JoinPerm(k+1, m+1))
}

function {:inline} ThirdCasePAs(k: int, m: Node, v: Value, numRounds: int) : [PA]int
{
  ( lambda pa: PA ::
    if (is#A_StartRound(pa) && round#A_StartRound(pa) == round_lin#A_StartRound(pa) && k+1 < round#A_StartRound(pa) && round#A_StartRound(pa) <= numRounds) ||
       (pa == A_Conclude(k+1, v, ConcludePerm(k+1))) ||
       (is#A_Vote(pa) && round#A_Vote(pa) == k+1 && m < node#A_Vote(pa) && node#A_Vote(pa) <= numNodes &&
         value#A_Vote(pa) == v && p#A_Vote(pa) == VotePerm(k+1, node#A_Vote(pa)))
    then 1 else 0)
}

function {:inline} ThirdCaseChoice(k: int, m: Node, v: Value) : PA
{
  if m == numNodes then A_Conclude(k+1, v, ConcludePerm(k+1)) else A_Vote(k+1, m+1, v, VotePerm(k+1, m+1))
}

procedure {:IS_invariant}{:layer 2} INV({:linear_in "perm"} rs: [Round]bool)
returns ({:pending_async "A_StartRound","A_Propose","A_Conclude","A_Join","A_Vote"} PAs:[PA]int, {:choice} choice:PA)
modifies joinedNodes, voteInfo, decision, pendingAsyncs;
{
  var {:pool "NumRounds"} numRounds: int;
  var {:pool "Round"} k: int;
  var {:pool "Node"} m: Node;

  assert Init(rs, joinedNodes, voteInfo, decision, pendingAsyncs);

  havoc joinedNodes, voteInfo, decision;

  // This invariant is the "pending async skeleton" which states the possible
  // pending asyncs in the sequentialization. The existentially quantified k
  // denotes the number of rounds that already finished (i.e., rounds 1 to k
  // finished and k+1 is the round that currently executes), and similarly the
  // existentially quantified m denotes the number of nodes that already
  // finished in the current round.

  assume
    {:add_to_pool "NumRounds", numRounds}
    {:add_to_pool "Round", k, k+1, numRounds}
    0 <= k && k <= numRounds;

  if (k == numRounds) {
      PAs := NoPAs();
  } else if (*) {
      assume
        (forall r: Round :: r < 1 || r > k ==> joinedNodes[r] == NoNodes()) &&
        (forall r: Round :: r < 1 || r > k ==> is#None(voteInfo[r])) &&
        (forall r: Round :: r < 1 || r > k ==> is#None(decision[r]));
      PAs := FirstCasePAs(k, numRounds);
      choice := A_StartRound(k+1, k+1);
  } else if (*) {
      assume
        (forall r: Round :: r < 1 || r > k+1 ==> joinedNodes[r] == NoNodes()) &&
        (forall r: Round :: r < 1 || r > k ==> is#None(voteInfo[r])) &&
        (forall r: Round :: r < 1 || r > k ==> is#None(decision[r]));
      assume
        {:add_to_pool "Node", m}
        0 <= m && m <= numNodes &&
        (forall n: Node :: n < 1 || n > m ==> !joinedNodes[k+1][n]);
      PAs := SecondCasePAs(k, m, numRounds);
      choice := SecondCaseChoice(k, m);
  } else {
      assume
        is#Some(voteInfo[k+1]) &&
        (forall r: Round :: r < 1 || r > k+1 ==> joinedNodes[r] == NoNodes()) &&
        (forall r: Round :: r < 1 || r > k+1 ==> is#None(voteInfo[r])) &&
        (forall r: Round :: r < 1 || r > k ==> is#None(decision[r]));
      assume
        {:add_to_pool "Node", m}
        0 <= m && m <= numNodes &&
        (forall n: Node :: n < 1 || n > m ==> !ns#VoteInfo(t#Some(voteInfo[k+1]))[n]);
      PAs := ThirdCasePAs(k, m, value#VoteInfo(t#Some(voteInfo[k+1])), numRounds);
      choice := ThirdCaseChoice(k, m, value#VoteInfo(t#Some(voteInfo[k+1])));
  }

  // If there was a decision for some value, then there must have been a
  // proposal of the same value and a quorum of nodes that voted for it.
  assume (forall r: Round :: is#Some(decision[r]) ==>
    is#Some(voteInfo[r]) &&
    value#VoteInfo(t#Some(voteInfo[r])) == t#Some(decision[r]) &&
    (exists q: NodeSet :: { IsSubset(q, ns#VoteInfo(t#Some(voteInfo[r]))), IsQuorum(q) }
      IsSubset(q, ns#VoteInfo(t#Some(voteInfo[r]))) && IsQuorum(q)));

  // This is the main invariant to prove
  assume (forall r1: Round, r2: Round :: is#Some(decision[r1]) && r1 <= r2 && is#Some(voteInfo[r2]) ==> value#VoteInfo(t#Some(voteInfo[r2])) == t#Some(decision[r1]));

  // This is the main property to prove
  assume (forall r1: Round, r2: Round :: is#Some(decision[r1]) && is#Some(decision[r2]) ==> decision[r1] == decision[r2]);

  pendingAsyncs := PAs;
}

// Local Variables:
// flycheck-disabled-checkers: (boogie)
// End:
