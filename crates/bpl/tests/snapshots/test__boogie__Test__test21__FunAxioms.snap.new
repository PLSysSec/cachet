---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "Pair",
                    type_params: [
                        "a",
                        "b",
                    ],
                    type_: None,
                },
            ],
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "MP",
            type_params: [
                "a",
                "b",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: App(
                        TypeApp {
                            head: "a",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "y",
                    ),
                    type_: App(
                        TypeApp {
                            head: "b",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "Pair",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "a",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "b",
                                                tail: None,
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Left",
            type_params: [
                "a",
                "b",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "Pair",
                            tail: Some(
                                App(
                                    TypeApp {
                                        head: "a",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "b",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "a",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Right",
            type_params: [
                "a",
                "b",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "Pair",
                            tail: Some(
                                App(
                                    TypeApp {
                                        head: "a",
                                        tail: Some(
                                            App(
                                                TypeApp {
                                                    head: "b",
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "b",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "a",
                            "b",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "a",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "y",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "b",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [],
                        expr: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Left",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "MP",
                                                    args: [
                                                        Var(
                                                            "x",
                                                        ),
                                                        Var(
                                                            "y",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: Var(
                                    "x",
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "a",
                            "b",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "a",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "y",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "b",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [],
                        expr: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Right",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "MP",
                                                    args: [
                                                        Var(
                                                            "x",
                                                        ),
                                                        Var(
                                                            "y",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: Var(
                                    "y",
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "A",
                    type_params: [],
                    type_: None,
                },
                TypeDecl {
                    ident: "B",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "P",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "A",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "y",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "B",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "z",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "A",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "p",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Pair",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "A",
                                                            tail: Some(
                                                                App(
                                                                    TypeApp {
                                                                        head: "B",
                                                                        tail: None,
                                                                    },
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Left",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "MP",
                                                                args: [
                                                                    Var(
                                                                        "x",
                                                                    ),
                                                                    Var(
                                                                        "y",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "x",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Right",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "MP",
                                                                args: [
                                                                    Var(
                                                                        "x",
                                                                    ),
                                                                    Var(
                                                                        "y",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "y",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Right",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "MP",
                                                                args: [
                                                                    Var(
                                                                        "x",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "MP",
                                                                            args: [
                                                                                Var(
                                                                                    "x",
                                                                                ),
                                                                                Var(
                                                                                    "y",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "MP",
                                                    args: [
                                                        Var(
                                                            "x",
                                                        ),
                                                        Var(
                                                            "y",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Left",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "MP",
                                                                args: [
                                                                    Var(
                                                                        "x",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "MP",
                                                                            args: [
                                                                                Var(
                                                                                    "x",
                                                                                ),
                                                                                Var(
                                                                                    "y",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "x",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Right",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Right",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "MP",
                                                                            args: [
                                                                                Var(
                                                                                    "x",
                                                                                ),
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "MP",
                                                                                        args: [
                                                                                            Var(
                                                                                                "x",
                                                                                            ),
                                                                                            Var(
                                                                                                "y",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "y",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "p",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "MP",
                                                args: [
                                                    Var(
                                                        "x",
                                                    ),
                                                    Var(
                                                        "y",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "p",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "MP",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "Left",
                                                            args: [
                                                                Var(
                                                                    "p",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Var(
                                                        "y",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Logical(
                                        LogicalExpr {
                                            lhs: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Left",
                                                            args: [
                                                                Var(
                                                                    "p",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: Var(
                                                        "x",
                                                    ),
                                                },
                                            ),
                                            op: And,
                                            rhs: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Right",
                                                            args: [
                                                                Var(
                                                                    "p",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: Var(
                                                        "y",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Left",
                                                    args: [
                                                        Var(
                                                            "p",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "z",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Q",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Left",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "MP",
                                                                args: [
                                                                    Nat(
                                                                        "1",
                                                                    ),
                                                                    Nat(
                                                                        "3",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Right",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "MP",
                                                                args: [
                                                                    Nat(
                                                                        "1",
                                                                    ),
                                                                    Nat(
                                                                        "3",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "3",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Right",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "MP",
                                                                args: [
                                                                    Nat(
                                                                        "1",
                                                                    ),
                                                                    BoolLit(
                                                                        true,
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: BoolLit(
                                                true,
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
type Pair a b;

function MP<a, b>(x: a, y: b): Pair a b;

function Left<a, b>(Pair a b): a;

function Right<a, b>(Pair a b): b;

axiom (forall <a, b> x: a, y: b :: Left(MP(x, y)) == x);

axiom (forall <a, b> x: a, y: b :: Right(MP(x, y)) == y);

type A,
  B;

procedure P() {
  var x: A, y: B, z: A, p: Pair A B;

  assert Left(MP(x, y)) == x;
  assert Right(MP(x, y)) == y;
  assert Right(MP(x, MP(x, y))) == MP(x, y);
  assert Left(MP(x, MP(x, y))) == x;
  assert Right(Right(MP(x, MP(x, y)))) == y;
  p := MP(x, y);
  p := MP(Left(p), y);
  assert Left(p) == x && Right(p) == y;
  assert Left(p) == z;
}

procedure Q() {
  assert Left(MP(1, 3)) == 1;
  assert Right(MP(1, 3)) == 3;
  assert Right(MP(1, true)) == true;
}

[Input - ../../vendor/boogie/Test/test21/FunAxioms.bpl]
// RUN: %boogie -typeEncoding:p -logPrefix:0p "%s" > "%t"
// RUN: %diff "%s.p.expect" "%t"
// RUN: %boogie -typeEncoding:a -logPrefix:0a "%s" > "%t"
// RUN: %diff "%s.a.expect" "%t"


type Pair a b;

function MP<a,b>(x:a, y:b) returns (Pair a b);
function Left<a,b>(Pair a b) returns (a);
function Right<a,b>(Pair a b) returns (b);

axiom (forall<a,b> x:a, y:b :: Left(MP(x,y)) == x);
axiom (forall<a,b> x:a, y:b :: Right(MP(x,y)) == y);

type A, B;

procedure P() returns () {

  var x:A, y:B, z:A, p : Pair A B;

  assert Left(MP(x,y)) == x;
  assert Right(MP(x,y)) == y;
  assert Right(MP(x,MP(x,y))) == MP(x,y);
  assert Left(MP(x,MP(x,y))) == x;
  assert Right(Right(MP(x,MP(x,y)))) == y;

  p := MP(x, y);

  p := MP(Left(p), y);

  assert Left(p) == x && Right(p) == y;

  assert Left(p) == z;            // should not be provable

}

procedure Q() returns () {

  assert Left(MP(1,3)) == 1;
  assert Right(MP(1,3)) == 3;
  assert Right(MP(1,true)) == true;

}
