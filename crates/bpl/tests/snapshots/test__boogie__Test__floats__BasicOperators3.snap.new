---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "main",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "float24e8",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "y",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "float24e8",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "z",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "float24e8",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "r",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "float24e8",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "x",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Float(
                                            Float {
                                                value: Plain(
                                                    PlainFloatValue {
                                                        is_neg: false,
                                                        whole: "1",
                                                        fract: "0",
                                                        exp: Exp {
                                                            is_neg: false,
                                                            digits: "10",
                                                        },
                                                    },
                                                ),
                                                sig_size: "24",
                                                exp_size: "8",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "y",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "x",
                                                ),
                                                op: Add,
                                                rhs: Float(
                                                    Float {
                                                        value: Plain(
                                                            PlainFloatValue {
                                                                is_neg: false,
                                                                whole: "1",
                                                                fract: "0",
                                                                exp: Exp {
                                                                    is_neg: false,
                                                                    digits: "0",
                                                                },
                                                            },
                                                        ),
                                                        sig_size: "24",
                                                        exp_size: "8",
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "z",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "x",
                                                ),
                                                op: Sub,
                                                rhs: Float(
                                                    Float {
                                                        value: Plain(
                                                            PlainFloatValue {
                                                                is_neg: false,
                                                                whole: "1",
                                                                fract: "0",
                                                                exp: Exp {
                                                                    is_neg: false,
                                                                    digits: "0",
                                                                },
                                                            },
                                                        ),
                                                        sig_size: "24",
                                                        exp_size: "8",
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "r",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "y",
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "z",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "r",
                                            ),
                                            op: Eq,
                                            rhs: Float(
                                                Float {
                                                    value: Plain(
                                                        PlainFloatValue {
                                                            is_neg: false,
                                                            whole: "2",
                                                            fract: "0",
                                                            exp: Exp {
                                                                is_neg: false,
                                                                digits: "0",
                                                            },
                                                        },
                                                    ),
                                                    sig_size: "24",
                                                    exp_size: "8",
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
procedure main() {
  var x: float24e8;
  var y: float24e8;
  var z: float24e8;
  var r: float24e8;

  x := 0x1.0e10f24e8;
  y := x + 0x1.0e0f24e8;
  z := x - 0x1.0e0f24e8;
  r := y - z;
  assert r == 0x2.0e0f24e8;
}

[Input - ../../vendor/boogie/Test/floats/BasicOperators3.bpl]
// RUN: %boogie -proverWarnings:1 "%s" > "%t"
// RUN: %diff "%s.expect" "%t"
procedure main() returns () {
  var x : float24e8;
  var y : float24e8;
  var z : float24e8;
  var r : float24e8;
  x := 0x1.0e10f24e8;
  y := x + 0x1.0e0f24e8;
  z := x - 0x1.0e0f24e8;
  r := y - z;
  assert r == 0x2.0e0f24e8;
}
