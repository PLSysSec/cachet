---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "checksum",
                            params: [
                                String(
                                    StringLit {
                                        text: "0",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "P",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Impl(
        ImplDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "id",
                            params: [
                                String(
                                    StringLit {
                                        text: "P",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "checksum",
                            params: [
                                String(
                                    StringLit {
                                        text: "1",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "P",
                type_params: [],
                var_params: [],
                returns: [],
            },
            impl_body: ImplBody {
                local_vars: [],
                stmt_list: [
                    LabelOrCmd(
                        Call(
                            CallCmd {
                                attrs: [],
                                call_params: CallParams {
                                    returns: [],
                                    target: "Q",
                                    params: [],
                                },
                                is_async: false,
                                is_free: false,
                            },
                        ),
                    ),
                ],
            },
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "checksum",
                            params: [
                                String(
                                    StringLit {
                                        text: "2",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "Q",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Nat(
                                    "0",
                                ),
                                op: Eq,
                                rhs: Nat(
                                    "0",
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Nat(
                                    "1",
                                ),
                                op: Eq,
                                rhs: Nat(
                                    "1",
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Nat(
                                    "2",
                                ),
                                op: Neq,
                                rhs: Nat(
                                    "2",
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Nat(
                                    "3",
                                ),
                                op: Eq,
                                rhs: Nat(
                                    "3",
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Nat(
                                    "4",
                                ),
                                op: Eq,
                                rhs: Nat(
                                    "4",
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: None,
        },
    ),
]

[Printed]
procedure {:checksum "0"} P();

implementation {:id "P"} {:checksum "1"} P() {
  call Q();
}

procedure {:checksum "2"} Q();
  requires 0 == 0;
  requires 1 == 1;
  requires 2 != 2;
  requires 3 == 3;
  requires 4 == 4;

[Input - ../../vendor/boogie/Test/snapshots/Snapshots30.v0.bpl]
procedure {:checksum "0"} P();

implementation {:id "P"} {:checksum "1"} P()
{
    call Q();
}

procedure {:checksum "2"} Q();
  requires 0 == 0;
  requires 1 == 1;
  requires 2 != 2;
  requires 3 == 3;
  requires 4 == 4;
