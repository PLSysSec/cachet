---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Type(
        TypeDecls {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "linear",
                        params: [
                            String(
                                StringLit {
                                    text: "pid",
                                },
                            ),
                        ],
                    },
                ),
            ],
            decls: [
                TypeDecl {
                    ident: "Pid",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "n",
                ],
                type_: Atom(
                    Int,
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "price",
                ],
                type_: Atom(
                    Int,
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "wallet",
                ],
                type_: Atom(
                    Int,
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Logical(
                LogicalExpr {
                    lhs: Logical(
                        LogicalExpr {
                            lhs: Rel(
                                RelExpr {
                                    lhs: Var(
                                        "n",
                                    ),
                                    op: Gt,
                                    rhs: Nat(
                                        "1",
                                    ),
                                },
                            ),
                            op: And,
                            rhs: Rel(
                                RelExpr {
                                    lhs: Var(
                                        "wallet",
                                    ),
                                    op: Ge,
                                    rhs: Nat(
                                        "0",
                                    ),
                                },
                            ),
                        },
                    ),
                    op: And,
                    rhs: Rel(
                        RelExpr {
                            lhs: Var(
                                "price",
                            ),
                            op: Ge,
                            rhs: Nat(
                                "0",
                            ),
                        },
                    ),
                },
            ),
        },
    ),
    Var(
        VarDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "layer",
                        params: [
                            Expr(
                                Nat(
                                    "0",
                                ),
                            ),
                            Expr(
                                Nat(
                                    "6",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "contribution",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [],
                                keys: [
                                    Atom(
                                        Int,
                                    ),
                                ],
                                value: Atom(
                                    Int,
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "layer",
                        params: [
                            Expr(
                                Nat(
                                    "0",
                                ),
                            ),
                            Expr(
                                Nat(
                                    "6",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "ReqCH",
                        ],
                        type_: Atom(
                            Int,
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "layer",
                        params: [
                            Expr(
                                Nat(
                                    "0",
                                ),
                            ),
                            Expr(
                                Nat(
                                    "6",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "QuoteCH",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [],
                                keys: [
                                    Atom(
                                        Int,
                                    ),
                                ],
                                value: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "layer",
                        params: [
                            Expr(
                                Nat(
                                    "0",
                                ),
                            ),
                            Expr(
                                Nat(
                                    "6",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "RemCH",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [],
                                keys: [
                                    Atom(
                                        Int,
                                    ),
                                ],
                                value: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "layer",
                        params: [
                            Expr(
                                Nat(
                                    "0",
                                ),
                            ),
                            Expr(
                                Nat(
                                    "6",
                                ),
                            ),
                        ],
                    },
                ),
            ],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "DecCH",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [],
                                keys: [
                                    Atom(
                                        Bool,
                                    ),
                                ],
                                value: Atom(
                                    Int,
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "sellerID",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "pid",
                        ),
                        op: Eq,
                        rhs: Nat(
                            "0",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "buyerID",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Logical(
                    LogicalExpr {
                        lhs: Rel(
                            RelExpr {
                                lhs: Nat(
                                    "1",
                                ),
                                op: Le,
                                rhs: Var(
                                    "pid",
                                ),
                            },
                        ),
                        op: And,
                        rhs: Rel(
                            RelExpr {
                                lhs: Var(
                                    "pid",
                                ),
                                op: Le,
                                rhs: Var(
                                    "n",
                                ),
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "firstBuyerID",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "pid",
                        ),
                        op: Eq,
                        rhs: Nat(
                            "1",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "middleBuyerID",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Logical(
                    LogicalExpr {
                        lhs: Rel(
                            RelExpr {
                                lhs: Nat(
                                    "1",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "pid",
                                ),
                            },
                        ),
                        op: And,
                        rhs: Rel(
                            RelExpr {
                                lhs: Var(
                                    "pid",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "n",
                                ),
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "lastBuyerID",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Rel(
                    RelExpr {
                        lhs: Var(
                            "pid",
                        ),
                        op: Eq,
                        rhs: Var(
                            "n",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "nextBuyer",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: Some(
                Term(
                    Term {
                        lhs: Var(
                            "pid",
                        ),
                        op: Add,
                        rhs: Nat(
                            "1",
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "min",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "y",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "x",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "y",
                                ),
                            },
                        ),
                        then: Var(
                            "x",
                        ),
                        else_: Var(
                            "y",
                        ),
                    },
                ),
            ),
        },
    ),
    Type(
        TypeDecls {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "pending_async",
                        params: [],
                    },
                ),
                Attr(
                    AttrContent {
                        ident: "datatype",
                        params: [],
                    },
                ),
            ],
            decls: [
                TypeDecl {
                    ident: "PA",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "FirstBuyerInit",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "PA",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "FirstBuyer",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "PA",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "MiddleBuyer",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "PA",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "LastBuyer",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "PA",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "SellerInit",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "PA",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "constructor",
                        params: [],
                    },
                ),
            ],
            ident: "SellerFinish",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pid",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "PA",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "NoPAs",
            type_params: [],
            var_params: [],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "PA",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Int,
                        ),
                    },
                ),
            },
            body: Some(
                Quant(
                    QuantExpr {
                        kind: Lambda,
                        body: QuantBody {
                            type_params: [],
                            bound_vars: [
                                AttrTypedIdentsWhere {
                                    attrs: [],
                                    typed_idents_where: TypedIdentsWhere {
                                        typed_idents: TypedIdents {
                                            idents: [
                                                "pa",
                                            ],
                                            type_: App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        },
                                        where_: None,
                                    },
                                },
                            ],
                            attrs: [],
                            expr: Nat(
                                "0",
                            ),
                        },
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "SingletonPA",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pa",
                    ),
                    type_: App(
                        TypeApp {
                            head: "PA",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "PA",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Int,
                        ),
                    },
                ),
            },
            body: Some(
                Array(
                    ArrayExpr {
                        expr: FuncCall(
                            FuncCall {
                                target: "NoPAs",
                                args: [],
                            },
                        ),
                        subscripts: [
                            ArraySubscript {
                                keys: [
                                    Var(
                                        "pa",
                                    ),
                                ],
                                value: Some(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            },
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "builtin",
                        params: [
                            String(
                                StringLit {
                                    text: "MapAdd",
                                },
                            ),
                        ],
                    },
                ),
            ],
            ident: "MapAddPA",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "PA",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Int,
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "PA",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Int,
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "PA",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Int,
                        ),
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "MapAddPA3",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "a",
                    ),
                    type_: App(
                        TypeApp {
                            head: "PA",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "b",
                    ),
                    type_: App(
                        TypeApp {
                            head: "PA",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "c",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "PA",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Int,
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "PA",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Int,
                        ),
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "MapAddPA",
                        args: [
                            FuncCall(
                                FuncCall {
                                    target: "SingletonPA",
                                    args: [
                                        Var(
                                            "a",
                                        ),
                                    ],
                                },
                            ),
                            FuncCall(
                                FuncCall {
                                    target: "MapAddPA",
                                    args: [
                                        FuncCall(
                                            FuncCall {
                                                target: "SingletonPA",
                                                args: [
                                                    Var(
                                                        "b",
                                                    ),
                                                ],
                                            },
                                        ),
                                        Var(
                                            "c",
                                        ),
                                    ],
                                },
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "MapAddPA4",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "a",
                    ),
                    type_: App(
                        TypeApp {
                            head: "PA",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "b",
                    ),
                    type_: App(
                        TypeApp {
                            head: "PA",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "c",
                    ),
                    type_: App(
                        TypeApp {
                            head: "PA",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "d",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "PA",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Int,
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "PA",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Int,
                        ),
                    },
                ),
            },
            body: Some(
                FuncCall(
                    FuncCall {
                        target: "MapAddPA",
                        args: [
                            FuncCall(
                                FuncCall {
                                    target: "SingletonPA",
                                    args: [
                                        Var(
                                            "a",
                                        ),
                                    ],
                                },
                            ),
                            FuncCall(
                                FuncCall {
                                    target: "MapAddPA",
                                    args: [
                                        FuncCall(
                                            FuncCall {
                                                target: "SingletonPA",
                                                args: [
                                                    Var(
                                                        "b",
                                                    ),
                                                ],
                                            },
                                        ),
                                        FuncCall(
                                            FuncCall {
                                                target: "MapAddPA",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "SingletonPA",
                                                            args: [
                                                                Var(
                                                                    "c",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Var(
                                                        "d",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "sum",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "A",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                Atom(
                                    Int,
                                ),
                            ],
                            value: Atom(
                                Int,
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "i",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "j",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: Some(
                IfThenElse(
                    IfThenElseExpr {
                        cond: Rel(
                            RelExpr {
                                lhs: Var(
                                    "j",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "i",
                                ),
                            },
                        ),
                        then: Nat(
                            "0",
                        ),
                        else_: IfThenElse(
                            IfThenElseExpr {
                                cond: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "i",
                                        ),
                                        op: Eq,
                                        rhs: Var(
                                            "j",
                                        ),
                                    },
                                ),
                                then: Array(
                                    ArrayExpr {
                                        expr: Var(
                                            "A",
                                        ),
                                        subscripts: [
                                            ArraySubscript {
                                                keys: [
                                                    Var(
                                                        "i",
                                                    ),
                                                ],
                                                value: None,
                                            },
                                        ],
                                    },
                                ),
                                else_: Term(
                                    Term {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "sum",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                    Var(
                                                        "i",
                                                    ),
                                                    Term(
                                                        Term {
                                                            lhs: Var(
                                                                "j",
                                                            ),
                                                            op: Sub,
                                                            rhs: Nat(
                                                                "1",
                                                            ),
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Add,
                                        rhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "A",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "j",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "A",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    Atom(
                                                        Int,
                                                    ),
                                                ],
                                                value: Atom(
                                                    Int,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "k",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "k'",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "v",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "k'",
                                                ),
                                                op: Gt,
                                                rhs: Var(
                                                    "k",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "k",
                                                ),
                                                op: Gt,
                                                rhs: Nat(
                                                    "0",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "sum",
                                                args: [
                                                    Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "A",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "k'",
                                                                        ),
                                                                    ],
                                                                    value: Some(
                                                                        Var(
                                                                            "v",
                                                                        ),
                                                                    ),
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    Nat(
                                                        "1",
                                                    ),
                                                    Var(
                                                        "k",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "sum",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                    Nat(
                                                        "1",
                                                    ),
                                                    Var(
                                                        "k",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "A",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    Atom(
                                                        Int,
                                                    ),
                                                ],
                                                value: Atom(
                                                    Int,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "B",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    Atom(
                                                        Int,
                                                    ),
                                                ],
                                                value: Atom(
                                                    Int,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "j",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "i",
                                                ),
                                                op: Le,
                                                rhs: Var(
                                                    "j",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Quant(
                                            QuantExpr {
                                                kind: ForAll,
                                                body: QuantBody {
                                                    type_params: [],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "l",
                                                                    ],
                                                                    type_: Atom(
                                                                        Int,
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: Implies(
                                                        ImpliesExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "i",
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Var(
                                                                                "l",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "l",
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Var(
                                                                                "j",
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "A",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "l",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "B",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "l",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "sum",
                                                args: [
                                                    Var(
                                                        "A",
                                                    ),
                                                    Var(
                                                        "i",
                                                    ),
                                                    Var(
                                                        "j",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "sum",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                    Var(
                                                        "i",
                                                    ),
                                                    Var(
                                                        "j",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "Init",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pids",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                Atom(
                                    Int,
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "ReqCH",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "QuoteCH",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                Atom(
                                    Int,
                                ),
                            ],
                            value: Map(
                                MapType {
                                    type_params: [],
                                    keys: [
                                        Atom(
                                            Int,
                                        ),
                                    ],
                                    value: Atom(
                                        Int,
                                    ),
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "RemCH",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                Atom(
                                    Int,
                                ),
                            ],
                            value: Map(
                                MapType {
                                    type_params: [],
                                    keys: [
                                        Atom(
                                            Int,
                                        ),
                                    ],
                                    value: Atom(
                                        Int,
                                    ),
                                },
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "DecCH",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                Atom(
                                    Bool,
                                ),
                            ],
                            value: Atom(
                                Int,
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "contribution",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                Atom(
                                    Int,
                                ),
                            ],
                            value: Atom(
                                Int,
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Logical(
                    LogicalExpr {
                        lhs: Logical(
                            LogicalExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Logical(
                                            LogicalExpr {
                                                lhs: Logical(
                                                    LogicalExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "pids",
                                                                ),
                                                                op: Eq,
                                                                rhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "MapConst",
                                                                        args: [
                                                                            BoolLit(
                                                                                true,
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        op: And,
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "ReqCH",
                                                                ),
                                                                op: Eq,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                op: And,
                                                rhs: Rel(
                                                    RelExpr {
                                                        lhs: Var(
                                                            "QuoteCH",
                                                        ),
                                                        op: Eq,
                                                        rhs: Quant(
                                                            QuantExpr {
                                                                kind: Lambda,
                                                                body: QuantBody {
                                                                    type_params: [],
                                                                    bound_vars: [
                                                                        AttrTypedIdentsWhere {
                                                                            attrs: [],
                                                                            typed_idents_where: TypedIdentsWhere {
                                                                                typed_idents: TypedIdents {
                                                                                    idents: [
                                                                                        "i",
                                                                                    ],
                                                                                    type_: Atom(
                                                                                        Int,
                                                                                    ),
                                                                                },
                                                                                where_: None,
                                                                            },
                                                                        },
                                                                    ],
                                                                    attrs: [],
                                                                    expr: Quant(
                                                                        QuantExpr {
                                                                            kind: Lambda,
                                                                            body: QuantBody {
                                                                                type_params: [],
                                                                                bound_vars: [
                                                                                    AttrTypedIdentsWhere {
                                                                                        attrs: [],
                                                                                        typed_idents_where: TypedIdentsWhere {
                                                                                            typed_idents: TypedIdents {
                                                                                                idents: [
                                                                                                    "q",
                                                                                                ],
                                                                                                type_: Atom(
                                                                                                    Int,
                                                                                                ),
                                                                                            },
                                                                                            where_: None,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                                attrs: [],
                                                                                expr: Nat(
                                                                                    "0",
                                                                                ),
                                                                            },
                                                                        },
                                                                    ),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "RemCH",
                                                ),
                                                op: Eq,
                                                rhs: Quant(
                                                    QuantExpr {
                                                        kind: Lambda,
                                                        body: QuantBody {
                                                            type_params: [],
                                                            bound_vars: [
                                                                AttrTypedIdentsWhere {
                                                                    attrs: [],
                                                                    typed_idents_where: TypedIdentsWhere {
                                                                        typed_idents: TypedIdents {
                                                                            idents: [
                                                                                "i",
                                                                            ],
                                                                            type_: Atom(
                                                                                Int,
                                                                            ),
                                                                        },
                                                                        where_: None,
                                                                    },
                                                                },
                                                            ],
                                                            attrs: [],
                                                            expr: Quant(
                                                                QuantExpr {
                                                                    kind: Lambda,
                                                                    body: QuantBody {
                                                                        type_params: [],
                                                                        bound_vars: [
                                                                            AttrTypedIdentsWhere {
                                                                                attrs: [],
                                                                                typed_idents_where: TypedIdentsWhere {
                                                                                    typed_idents: TypedIdents {
                                                                                        idents: [
                                                                                            "r",
                                                                                        ],
                                                                                        type_: Atom(
                                                                                            Int,
                                                                                        ),
                                                                                    },
                                                                                    where_: None,
                                                                                },
                                                                            },
                                                                        ],
                                                                        attrs: [],
                                                                        expr: Nat(
                                                                            "0",
                                                                        ),
                                                                    },
                                                                },
                                                            ),
                                                        },
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "DecCH",
                                        ),
                                        op: Eq,
                                        rhs: Quant(
                                            QuantExpr {
                                                kind: Lambda,
                                                body: QuantBody {
                                                    type_params: [],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "b",
                                                                    ],
                                                                    type_: Atom(
                                                                        Bool,
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: Nat(
                                                        "0",
                                                    ),
                                                },
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                        op: And,
                        rhs: Rel(
                            RelExpr {
                                lhs: Var(
                                    "contribution",
                                ),
                                op: Eq,
                                rhs: Quant(
                                    QuantExpr {
                                        kind: Lambda,
                                        body: QuantBody {
                                            type_params: [],
                                            bound_vars: [
                                                AttrTypedIdentsWhere {
                                                    attrs: [],
                                                    typed_idents_where: TypedIdentsWhere {
                                                        typed_idents: TypedIdents {
                                                            idents: [
                                                                "i",
                                                            ],
                                                            type_: Atom(
                                                                Int,
                                                            ),
                                                        },
                                                        where_: None,
                                                    },
                                                },
                                            ],
                                            attrs: [],
                                            expr: Nat(
                                                "0",
                                            ),
                                        },
                                    },
                                ),
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "6",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "MAIN5",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "contribution",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "pids",
                                                ),
                                                Var(
                                                    "ReqCH",
                                                ),
                                                Var(
                                                    "QuoteCH",
                                                ),
                                                Var(
                                                    "RemCH",
                                                ),
                                                Var(
                                                    "DecCH",
                                                ),
                                                Var(
                                                    "contribution",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Havoc(
                                HavocCmd {
                                    vars: [
                                        "contribution",
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_invariant",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "5",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "INV4",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "SellerFinish",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "DecCH",
                            "contribution",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "pids",
                                                ),
                                                Var(
                                                    "ReqCH",
                                                ),
                                                Var(
                                                    "QuoteCH",
                                                ),
                                                Var(
                                                    "RemCH",
                                                ),
                                                Var(
                                                    "DecCH",
                                                ),
                                                Var(
                                                    "contribution",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Havoc(
                                HavocCmd {
                                    vars: [
                                        "contribution",
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "DecCH",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Quant(
                                                            QuantExpr {
                                                                kind: Lambda,
                                                                body: QuantBody {
                                                                    type_params: [],
                                                                    bound_vars: [
                                                                        AttrTypedIdentsWhere {
                                                                            attrs: [],
                                                                            typed_idents_where: TypedIdentsWhere {
                                                                                typed_idents: TypedIdents {
                                                                                    idents: [
                                                                                        "b",
                                                                                    ],
                                                                                    type_: Atom(
                                                                                        Bool,
                                                                                    ),
                                                                                },
                                                                                where_: None,
                                                                            },
                                                                        },
                                                                    ],
                                                                    attrs: [],
                                                                    expr: IfThenElse(
                                                                        IfThenElseExpr {
                                                                            cond: Rel(
                                                                                RelExpr {
                                                                                    lhs: Var(
                                                                                        "b",
                                                                                    ),
                                                                                    op: Eq,
                                                                                    rhs: Rel(
                                                                                        RelExpr {
                                                                                            lhs: FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "sum",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "contribution",
                                                                                                        ),
                                                                                                        Nat(
                                                                                                            "1",
                                                                                                        ),
                                                                                                        Var(
                                                                                                            "n",
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                            op: Eq,
                                                                                            rhs: Var(
                                                                                                "price",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            then: Nat(
                                                                                "1",
                                                                            ),
                                                                            else_: Nat(
                                                                                "0",
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "PAs",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "SingletonPA",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "SellerFinish",
                                                                            args: [
                                                                                Nat(
                                                                                    "0",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "PAs",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "NoPAs",
                                                                        args: [],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_abstraction",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "5",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "SellerFinish'",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "DecCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "dec",
                                        ],
                                        type_: Atom(
                                            Bool,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "sellerID",
                                            args: [
                                                Var(
                                                    "pid",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "DecCH",
                                            ),
                                            op: Eq,
                                            rhs: Quant(
                                                QuantExpr {
                                                    kind: Lambda,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "b",
                                                                        ],
                                                                        type_: Atom(
                                                                            Bool,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: IfThenElse(
                                                            IfThenElseExpr {
                                                                cond: Rel(
                                                                    RelExpr {
                                                                        lhs: Var(
                                                                            "b",
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "sum",
                                                                                        args: [
                                                                                            Var(
                                                                                                "contribution",
                                                                                            ),
                                                                                            Nat(
                                                                                                "1",
                                                                                            ),
                                                                                            Var(
                                                                                                "n",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Eq,
                                                                                rhs: Var(
                                                                                    "price",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                then: Nat(
                                                                    "1",
                                                                ),
                                                                else_: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "dec",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Rel(
                                            RelExpr {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "sum",
                                                        args: [
                                                            Var(
                                                                "contribution",
                                                            ),
                                                            Nat(
                                                                "1",
                                                            ),
                                                            Var(
                                                                "n",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: Eq,
                                                rhs: Var(
                                                    "price",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "DecCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "dec",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "DecCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "dec",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "5",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "IS",
                            params: [
                                String(
                                    StringLit {
                                        text: "MAIN5",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "INV4",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "SellerFinish",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "SellerFinish'",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "MAIN4",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "SellerFinish",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "DecCH",
                            "contribution",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "pids",
                                                ),
                                                Var(
                                                    "ReqCH",
                                                ),
                                                Var(
                                                    "QuoteCH",
                                                ),
                                                Var(
                                                    "RemCH",
                                                ),
                                                Var(
                                                    "DecCH",
                                                ),
                                                Var(
                                                    "contribution",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Havoc(
                                HavocCmd {
                                    vars: [
                                        "contribution",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "DecCH",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Quant(
                                            QuantExpr {
                                                kind: Lambda,
                                                body: QuantBody {
                                                    type_params: [],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "b",
                                                                    ],
                                                                    type_: Atom(
                                                                        Bool,
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: IfThenElse(
                                                        IfThenElseExpr {
                                                            cond: Rel(
                                                                RelExpr {
                                                                    lhs: Var(
                                                                        "b",
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: Rel(
                                                                        RelExpr {
                                                                            lhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "sum",
                                                                                    args: [
                                                                                        Var(
                                                                                            "contribution",
                                                                                        ),
                                                                                        Nat(
                                                                                            "1",
                                                                                        ),
                                                                                        Var(
                                                                                            "n",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            op: Eq,
                                                                            rhs: Var(
                                                                                "price",
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            then: Nat(
                                                                "1",
                                                            ),
                                                            else_: Nat(
                                                                "0",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "PAs",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "SingletonPA",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "SellerFinish",
                                                            args: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_invariant",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "4",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "INV3",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "SellerFinish",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "FirstBuyer",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "MiddleBuyer",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "LastBuyer",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "choice",
                                    params: [],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "choice",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "PA",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "QuoteCH",
                            "RemCH",
                            "DecCH",
                            "contribution",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [
                                Attr(
                                    AttrContent {
                                        ident: "pool",
                                        params: [
                                            String(
                                                StringLit {
                                                    text: "INV3",
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            ],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "k",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "pids",
                                                ),
                                                Var(
                                                    "ReqCH",
                                                ),
                                                Var(
                                                    "QuoteCH",
                                                ),
                                                Var(
                                                    "RemCH",
                                                ),
                                                Var(
                                                    "DecCH",
                                                ),
                                                Var(
                                                    "contribution",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Havoc(
                                HavocCmd {
                                    vars: [
                                        "contribution",
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "QuoteCH",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Quant(
                                                            QuantExpr {
                                                                kind: Lambda,
                                                                body: QuantBody {
                                                                    type_params: [],
                                                                    bound_vars: [
                                                                        AttrTypedIdentsWhere {
                                                                            attrs: [],
                                                                            typed_idents_where: TypedIdentsWhere {
                                                                                typed_idents: TypedIdents {
                                                                                    idents: [
                                                                                        "i",
                                                                                    ],
                                                                                    type_: Atom(
                                                                                        Int,
                                                                                    ),
                                                                                },
                                                                                where_: None,
                                                                            },
                                                                        },
                                                                    ],
                                                                    attrs: [],
                                                                    expr: Quant(
                                                                        QuantExpr {
                                                                            kind: Lambda,
                                                                            body: QuantBody {
                                                                                type_params: [],
                                                                                bound_vars: [
                                                                                    AttrTypedIdentsWhere {
                                                                                        attrs: [],
                                                                                        typed_idents_where: TypedIdentsWhere {
                                                                                            typed_idents: TypedIdents {
                                                                                                idents: [
                                                                                                    "q",
                                                                                                ],
                                                                                                type_: Atom(
                                                                                                    Int,
                                                                                                ),
                                                                                            },
                                                                                            where_: None,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                                attrs: [],
                                                                                expr: IfThenElse(
                                                                                    IfThenElseExpr {
                                                                                        cond: Logical(
                                                                                            LogicalExpr {
                                                                                                lhs: FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "buyerID",
                                                                                                        args: [
                                                                                                            Var(
                                                                                                                "i",
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                                op: And,
                                                                                                rhs: Rel(
                                                                                                    RelExpr {
                                                                                                        lhs: Var(
                                                                                                            "q",
                                                                                                        ),
                                                                                                        op: Eq,
                                                                                                        rhs: Var(
                                                                                                            "price",
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        then: Nat(
                                                                                            "1",
                                                                                        ),
                                                                                        else_: Nat(
                                                                                            "0",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ),
                                                                },
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "PAs",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "MapAddPA4",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "SellerFinish",
                                                                            args: [
                                                                                Nat(
                                                                                    "0",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FirstBuyer",
                                                                            args: [
                                                                                Nat(
                                                                                    "1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "LastBuyer",
                                                                            args: [
                                                                                Var(
                                                                                    "n",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Quant(
                                                                        QuantExpr {
                                                                            kind: Lambda,
                                                                            body: QuantBody {
                                                                                type_params: [],
                                                                                bound_vars: [
                                                                                    AttrTypedIdentsWhere {
                                                                                        attrs: [],
                                                                                        typed_idents_where: TypedIdentsWhere {
                                                                                            typed_idents: TypedIdents {
                                                                                                idents: [
                                                                                                    "pa",
                                                                                                ],
                                                                                                type_: App(
                                                                                                    TypeApp {
                                                                                                        head: "PA",
                                                                                                        tail: None,
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            where_: None,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                                attrs: [],
                                                                                expr: IfThenElse(
                                                                                    IfThenElseExpr {
                                                                                        cond: Logical(
                                                                                            LogicalExpr {
                                                                                                lhs: FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "is#MiddleBuyer",
                                                                                                        args: [
                                                                                                            Var(
                                                                                                                "pa",
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                                op: And,
                                                                                                rhs: FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "middleBuyerID",
                                                                                                        args: [
                                                                                                            FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "pid#MiddleBuyer",
                                                                                                                    args: [
                                                                                                                        Var(
                                                                                                                            "pa",
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        then: Nat(
                                                                                            "1",
                                                                                        ),
                                                                                        else_: Nat(
                                                                                            "0",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "choice",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "FirstBuyer",
                                                                args: [
                                                                    Nat(
                                                                        "1",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        ElseIf(
                                            IfCmd {
                                                guard: Asterisk,
                                                then: [
                                                    LabelOrCmd(
                                                        Claim(
                                                            ClaimCmd {
                                                                kind: Assume,
                                                                attrs: [
                                                                    Attr(
                                                                        AttrContent {
                                                                            ident: "add_to_pool",
                                                                            params: [
                                                                                String(
                                                                                    StringLit {
                                                                                        text: "INV3",
                                                                                    },
                                                                                ),
                                                                                Expr(
                                                                                    Var(
                                                                                        "k",
                                                                                    ),
                                                                                ),
                                                                                Expr(
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "k",
                                                                                            ),
                                                                                            op: Add,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                proposition: Logical(
                                                                    LogicalExpr {
                                                                        lhs: Logical(
                                                                            LogicalExpr {
                                                                                lhs: Logical(
                                                                                    LogicalExpr {
                                                                                        lhs: Rel(
                                                                                            RelExpr {
                                                                                                lhs: Nat(
                                                                                                    "1",
                                                                                                ),
                                                                                                op: Le,
                                                                                                rhs: Var(
                                                                                                    "k",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        op: And,
                                                                                        rhs: Rel(
                                                                                            RelExpr {
                                                                                                lhs: Var(
                                                                                                    "k",
                                                                                                ),
                                                                                                op: Lt,
                                                                                                rhs: Var(
                                                                                                    "n",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                                op: And,
                                                                                rhs: Rel(
                                                                                    RelExpr {
                                                                                        lhs: Nat(
                                                                                            "0",
                                                                                        ),
                                                                                        op: Le,
                                                                                        rhs: FuncCall(
                                                                                            FuncCall {
                                                                                                target: "sum",
                                                                                                args: [
                                                                                                    Var(
                                                                                                        "contribution",
                                                                                                    ),
                                                                                                    Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "k",
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "sum",
                                                                                        args: [
                                                                                            Var(
                                                                                                "contribution",
                                                                                            ),
                                                                                            Nat(
                                                                                                "1",
                                                                                            ),
                                                                                            Var(
                                                                                                "k",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Le,
                                                                                rhs: Var(
                                                                                    "price",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    LabelOrCmd(
                                                        Assign(
                                                            AssignCmd {
                                                                lhs: [
                                                                    AssignLhs {
                                                                        ident: "QuoteCH",
                                                                        subscripts: [],
                                                                    },
                                                                ],
                                                                rhs: [
                                                                    Quant(
                                                                        QuantExpr {
                                                                            kind: Lambda,
                                                                            body: QuantBody {
                                                                                type_params: [],
                                                                                bound_vars: [
                                                                                    AttrTypedIdentsWhere {
                                                                                        attrs: [],
                                                                                        typed_idents_where: TypedIdentsWhere {
                                                                                            typed_idents: TypedIdents {
                                                                                                idents: [
                                                                                                    "i",
                                                                                                ],
                                                                                                type_: Atom(
                                                                                                    Int,
                                                                                                ),
                                                                                            },
                                                                                            where_: None,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                                attrs: [],
                                                                                expr: Quant(
                                                                                    QuantExpr {
                                                                                        kind: Lambda,
                                                                                        body: QuantBody {
                                                                                            type_params: [],
                                                                                            bound_vars: [
                                                                                                AttrTypedIdentsWhere {
                                                                                                    attrs: [],
                                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                                        typed_idents: TypedIdents {
                                                                                                            idents: [
                                                                                                                "q",
                                                                                                            ],
                                                                                                            type_: Atom(
                                                                                                                Int,
                                                                                                            ),
                                                                                                        },
                                                                                                        where_: None,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                            attrs: [],
                                                                                            expr: IfThenElse(
                                                                                                IfThenElseExpr {
                                                                                                    cond: Logical(
                                                                                                        LogicalExpr {
                                                                                                            lhs: Logical(
                                                                                                                LogicalExpr {
                                                                                                                    lhs: FuncCall(
                                                                                                                        FuncCall {
                                                                                                                            target: "buyerID",
                                                                                                                            args: [
                                                                                                                                Var(
                                                                                                                                    "i",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                    op: And,
                                                                                                                    rhs: Rel(
                                                                                                                        RelExpr {
                                                                                                                            lhs: Var(
                                                                                                                                "i",
                                                                                                                            ),
                                                                                                                            op: Gt,
                                                                                                                            rhs: Var(
                                                                                                                                "k",
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                            op: And,
                                                                                                            rhs: Rel(
                                                                                                                RelExpr {
                                                                                                                    lhs: Var(
                                                                                                                        "q",
                                                                                                                    ),
                                                                                                                    op: Eq,
                                                                                                                    rhs: Var(
                                                                                                                        "price",
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                    then: Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                    else_: Nat(
                                                                                                        "0",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                    LabelOrCmd(
                                                        Assign(
                                                            AssignCmd {
                                                                lhs: [
                                                                    AssignLhs {
                                                                        ident: "RemCH",
                                                                        subscripts: [],
                                                                    },
                                                                ],
                                                                rhs: [
                                                                    Quant(
                                                                        QuantExpr {
                                                                            kind: Lambda,
                                                                            body: QuantBody {
                                                                                type_params: [],
                                                                                bound_vars: [
                                                                                    AttrTypedIdentsWhere {
                                                                                        attrs: [],
                                                                                        typed_idents_where: TypedIdentsWhere {
                                                                                            typed_idents: TypedIdents {
                                                                                                idents: [
                                                                                                    "i",
                                                                                                ],
                                                                                                type_: Atom(
                                                                                                    Int,
                                                                                                ),
                                                                                            },
                                                                                            where_: None,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                                attrs: [],
                                                                                expr: Quant(
                                                                                    QuantExpr {
                                                                                        kind: Lambda,
                                                                                        body: QuantBody {
                                                                                            type_params: [],
                                                                                            bound_vars: [
                                                                                                AttrTypedIdentsWhere {
                                                                                                    attrs: [],
                                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                                        typed_idents: TypedIdents {
                                                                                                            idents: [
                                                                                                                "r",
                                                                                                            ],
                                                                                                            type_: Atom(
                                                                                                                Int,
                                                                                                            ),
                                                                                                        },
                                                                                                        where_: None,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                            attrs: [],
                                                                                            expr: IfThenElse(
                                                                                                IfThenElseExpr {
                                                                                                    cond: Logical(
                                                                                                        LogicalExpr {
                                                                                                            lhs: Rel(
                                                                                                                RelExpr {
                                                                                                                    lhs: Var(
                                                                                                                        "i",
                                                                                                                    ),
                                                                                                                    op: Eq,
                                                                                                                    rhs: Term(
                                                                                                                        Term {
                                                                                                                            lhs: Var(
                                                                                                                                "k",
                                                                                                                            ),
                                                                                                                            op: Add,
                                                                                                                            rhs: Nat(
                                                                                                                                "1",
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                            op: And,
                                                                                                            rhs: Rel(
                                                                                                                RelExpr {
                                                                                                                    lhs: Var(
                                                                                                                        "r",
                                                                                                                    ),
                                                                                                                    op: Eq,
                                                                                                                    rhs: Term(
                                                                                                                        Term {
                                                                                                                            lhs: Var(
                                                                                                                                "price",
                                                                                                                            ),
                                                                                                                            op: Sub,
                                                                                                                            rhs: FuncCall(
                                                                                                                                FuncCall {
                                                                                                                                    target: "sum",
                                                                                                                                    args: [
                                                                                                                                        Var(
                                                                                                                                            "contribution",
                                                                                                                                        ),
                                                                                                                                        Nat(
                                                                                                                                            "1",
                                                                                                                                        ),
                                                                                                                                        Var(
                                                                                                                                            "k",
                                                                                                                                        ),
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                    then: Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                    else_: Nat(
                                                                                                        "0",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                    LabelOrCmd(
                                                        Assign(
                                                            AssignCmd {
                                                                lhs: [
                                                                    AssignLhs {
                                                                        ident: "PAs",
                                                                        subscripts: [],
                                                                    },
                                                                ],
                                                                rhs: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "MapAddPA3",
                                                                            args: [
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "SellerFinish",
                                                                                        args: [
                                                                                            Nat(
                                                                                                "0",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "LastBuyer",
                                                                                        args: [
                                                                                            Var(
                                                                                                "n",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                Quant(
                                                                                    QuantExpr {
                                                                                        kind: Lambda,
                                                                                        body: QuantBody {
                                                                                            type_params: [],
                                                                                            bound_vars: [
                                                                                                AttrTypedIdentsWhere {
                                                                                                    attrs: [],
                                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                                        typed_idents: TypedIdents {
                                                                                                            idents: [
                                                                                                                "pa",
                                                                                                            ],
                                                                                                            type_: App(
                                                                                                                TypeApp {
                                                                                                                    head: "PA",
                                                                                                                    tail: None,
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                        where_: None,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                            attrs: [],
                                                                                            expr: IfThenElse(
                                                                                                IfThenElseExpr {
                                                                                                    cond: Logical(
                                                                                                        LogicalExpr {
                                                                                                            lhs: Logical(
                                                                                                                LogicalExpr {
                                                                                                                    lhs: FuncCall(
                                                                                                                        FuncCall {
                                                                                                                            target: "is#MiddleBuyer",
                                                                                                                            args: [
                                                                                                                                Var(
                                                                                                                                    "pa",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                    op: And,
                                                                                                                    rhs: FuncCall(
                                                                                                                        FuncCall {
                                                                                                                            target: "middleBuyerID",
                                                                                                                            args: [
                                                                                                                                FuncCall(
                                                                                                                                    FuncCall {
                                                                                                                                        target: "pid#MiddleBuyer",
                                                                                                                                        args: [
                                                                                                                                            Var(
                                                                                                                                                "pa",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                            op: And,
                                                                                                            rhs: Rel(
                                                                                                                RelExpr {
                                                                                                                    lhs: FuncCall(
                                                                                                                        FuncCall {
                                                                                                                            target: "pid#MiddleBuyer",
                                                                                                                            args: [
                                                                                                                                Var(
                                                                                                                                    "pa",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                    op: Gt,
                                                                                                                    rhs: Var(
                                                                                                                        "k",
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                    then: Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                    else_: Nat(
                                                                                                        "0",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                    LabelOrCmd(
                                                        Assign(
                                                            AssignCmd {
                                                                lhs: [
                                                                    AssignLhs {
                                                                        ident: "choice",
                                                                        subscripts: [],
                                                                    },
                                                                ],
                                                                rhs: [
                                                                    IfThenElse(
                                                                        IfThenElseExpr {
                                                                            cond: FuncCall(
                                                                                FuncCall {
                                                                                    target: "lastBuyerID",
                                                                                    args: [
                                                                                        Term(
                                                                                            Term {
                                                                                                lhs: Var(
                                                                                                    "k",
                                                                                                ),
                                                                                                op: Add,
                                                                                                rhs: Nat(
                                                                                                    "1",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            then: FuncCall(
                                                                                FuncCall {
                                                                                    target: "LastBuyer",
                                                                                    args: [
                                                                                        Term(
                                                                                            Term {
                                                                                                lhs: Var(
                                                                                                    "k",
                                                                                                ),
                                                                                                op: Add,
                                                                                                rhs: Nat(
                                                                                                    "1",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            else_: FuncCall(
                                                                                FuncCall {
                                                                                    target: "MiddleBuyer",
                                                                                    args: [
                                                                                        Term(
                                                                                            Term {
                                                                                                lhs: Var(
                                                                                                    "k",
                                                                                                ),
                                                                                                op: Add,
                                                                                                rhs: Nat(
                                                                                                    "1",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ),
                                                ],
                                                else_: Some(
                                                    ElseIf(
                                                        IfCmd {
                                                            guard: Asterisk,
                                                            then: [
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "QuoteCH",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                Quant(
                                                                                    QuantExpr {
                                                                                        kind: Lambda,
                                                                                        body: QuantBody {
                                                                                            type_params: [],
                                                                                            bound_vars: [
                                                                                                AttrTypedIdentsWhere {
                                                                                                    attrs: [],
                                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                                        typed_idents: TypedIdents {
                                                                                                            idents: [
                                                                                                                "i",
                                                                                                            ],
                                                                                                            type_: Atom(
                                                                                                                Int,
                                                                                                            ),
                                                                                                        },
                                                                                                        where_: None,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                            attrs: [],
                                                                                            expr: Quant(
                                                                                                QuantExpr {
                                                                                                    kind: Lambda,
                                                                                                    body: QuantBody {
                                                                                                        type_params: [],
                                                                                                        bound_vars: [
                                                                                                            AttrTypedIdentsWhere {
                                                                                                                attrs: [],
                                                                                                                typed_idents_where: TypedIdentsWhere {
                                                                                                                    typed_idents: TypedIdents {
                                                                                                                        idents: [
                                                                                                                            "q",
                                                                                                                        ],
                                                                                                                        type_: Atom(
                                                                                                                            Int,
                                                                                                                        ),
                                                                                                                    },
                                                                                                                    where_: None,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                        attrs: [],
                                                                                                        expr: IfThenElse(
                                                                                                            IfThenElseExpr {
                                                                                                                cond: Logical(
                                                                                                                    LogicalExpr {
                                                                                                                        lhs: FuncCall(
                                                                                                                            FuncCall {
                                                                                                                                target: "lastBuyerID",
                                                                                                                                args: [
                                                                                                                                    Var(
                                                                                                                                        "i",
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        op: And,
                                                                                                                        rhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Var(
                                                                                                                                    "q",
                                                                                                                                ),
                                                                                                                                op: Eq,
                                                                                                                                rhs: Var(
                                                                                                                                    "price",
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                                then: Nat(
                                                                                                                    "1",
                                                                                                                ),
                                                                                                                else_: Nat(
                                                                                                                    "0",
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                                LabelOrCmd(
                                                                    Claim(
                                                                        ClaimCmd {
                                                                            kind: Assume,
                                                                            attrs: [],
                                                                            proposition: Logical(
                                                                                LogicalExpr {
                                                                                    lhs: Rel(
                                                                                        RelExpr {
                                                                                            lhs: Nat(
                                                                                                "0",
                                                                                            ),
                                                                                            op: Le,
                                                                                            rhs: FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "sum",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "contribution",
                                                                                                        ),
                                                                                                        Nat(
                                                                                                            "1",
                                                                                                        ),
                                                                                                        Term(
                                                                                                            Term {
                                                                                                                lhs: Var(
                                                                                                                    "n",
                                                                                                                ),
                                                                                                                op: Sub,
                                                                                                                rhs: Nat(
                                                                                                                    "1",
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    op: And,
                                                                                    rhs: Rel(
                                                                                        RelExpr {
                                                                                            lhs: FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "sum",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "contribution",
                                                                                                        ),
                                                                                                        Nat(
                                                                                                            "1",
                                                                                                        ),
                                                                                                        Term(
                                                                                                            Term {
                                                                                                                lhs: Var(
                                                                                                                    "n",
                                                                                                                ),
                                                                                                                op: Sub,
                                                                                                                rhs: Nat(
                                                                                                                    "1",
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                            op: Le,
                                                                                            rhs: Var(
                                                                                                "price",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "RemCH",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                Quant(
                                                                                    QuantExpr {
                                                                                        kind: Lambda,
                                                                                        body: QuantBody {
                                                                                            type_params: [],
                                                                                            bound_vars: [
                                                                                                AttrTypedIdentsWhere {
                                                                                                    attrs: [],
                                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                                        typed_idents: TypedIdents {
                                                                                                            idents: [
                                                                                                                "i",
                                                                                                            ],
                                                                                                            type_: Atom(
                                                                                                                Int,
                                                                                                            ),
                                                                                                        },
                                                                                                        where_: None,
                                                                                                    },
                                                                                                },
                                                                                            ],
                                                                                            attrs: [],
                                                                                            expr: Quant(
                                                                                                QuantExpr {
                                                                                                    kind: Lambda,
                                                                                                    body: QuantBody {
                                                                                                        type_params: [],
                                                                                                        bound_vars: [
                                                                                                            AttrTypedIdentsWhere {
                                                                                                                attrs: [],
                                                                                                                typed_idents_where: TypedIdentsWhere {
                                                                                                                    typed_idents: TypedIdents {
                                                                                                                        idents: [
                                                                                                                            "r",
                                                                                                                        ],
                                                                                                                        type_: Atom(
                                                                                                                            Int,
                                                                                                                        ),
                                                                                                                    },
                                                                                                                    where_: None,
                                                                                                                },
                                                                                                            },
                                                                                                        ],
                                                                                                        attrs: [],
                                                                                                        expr: IfThenElse(
                                                                                                            IfThenElseExpr {
                                                                                                                cond: Logical(
                                                                                                                    LogicalExpr {
                                                                                                                        lhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Var(
                                                                                                                                    "i",
                                                                                                                                ),
                                                                                                                                op: Eq,
                                                                                                                                rhs: Var(
                                                                                                                                    "n",
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        op: And,
                                                                                                                        rhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Var(
                                                                                                                                    "r",
                                                                                                                                ),
                                                                                                                                op: Eq,
                                                                                                                                rhs: Term(
                                                                                                                                    Term {
                                                                                                                                        lhs: Var(
                                                                                                                                            "price",
                                                                                                                                        ),
                                                                                                                                        op: Sub,
                                                                                                                                        rhs: FuncCall(
                                                                                                                                            FuncCall {
                                                                                                                                                target: "sum",
                                                                                                                                                args: [
                                                                                                                                                    Var(
                                                                                                                                                        "contribution",
                                                                                                                                                    ),
                                                                                                                                                    Nat(
                                                                                                                                                        "1",
                                                                                                                                                    ),
                                                                                                                                                    Term(
                                                                                                                                                        Term {
                                                                                                                                                            lhs: Var(
                                                                                                                                                                "n",
                                                                                                                                                            ),
                                                                                                                                                            op: Sub,
                                                                                                                                                            rhs: Nat(
                                                                                                                                                                "1",
                                                                                                                                                            ),
                                                                                                                                                        },
                                                                                                                                                    ),
                                                                                                                                                ],
                                                                                                                                            },
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                                then: Nat(
                                                                                                                    "1",
                                                                                                                ),
                                                                                                                else_: Nat(
                                                                                                                    "0",
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "PAs",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "MapAddPA",
                                                                                        args: [
                                                                                            FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "SingletonPA",
                                                                                                    args: [
                                                                                                        FuncCall(
                                                                                                            FuncCall {
                                                                                                                target: "SellerFinish",
                                                                                                                args: [
                                                                                                                    Nat(
                                                                                                                        "0",
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                            FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "SingletonPA",
                                                                                                    args: [
                                                                                                        FuncCall(
                                                                                                            FuncCall {
                                                                                                                target: "LastBuyer",
                                                                                                                args: [
                                                                                                                    Var(
                                                                                                                        "n",
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "choice",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "LastBuyer",
                                                                                        args: [
                                                                                            Var(
                                                                                                "n",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                            else_: Some(
                                                                Else(
                                                                    [
                                                                        LabelOrCmd(
                                                                            Assign(
                                                                                AssignCmd {
                                                                                    lhs: [
                                                                                        AssignLhs {
                                                                                            ident: "DecCH",
                                                                                            subscripts: [],
                                                                                        },
                                                                                    ],
                                                                                    rhs: [
                                                                                        Quant(
                                                                                            QuantExpr {
                                                                                                kind: Lambda,
                                                                                                body: QuantBody {
                                                                                                    type_params: [],
                                                                                                    bound_vars: [
                                                                                                        AttrTypedIdentsWhere {
                                                                                                            attrs: [],
                                                                                                            typed_idents_where: TypedIdentsWhere {
                                                                                                                typed_idents: TypedIdents {
                                                                                                                    idents: [
                                                                                                                        "b",
                                                                                                                    ],
                                                                                                                    type_: Atom(
                                                                                                                        Bool,
                                                                                                                    ),
                                                                                                                },
                                                                                                                where_: None,
                                                                                                            },
                                                                                                        },
                                                                                                    ],
                                                                                                    attrs: [],
                                                                                                    expr: IfThenElse(
                                                                                                        IfThenElseExpr {
                                                                                                            cond: Rel(
                                                                                                                RelExpr {
                                                                                                                    lhs: Var(
                                                                                                                        "b",
                                                                                                                    ),
                                                                                                                    op: Eq,
                                                                                                                    rhs: Rel(
                                                                                                                        RelExpr {
                                                                                                                            lhs: FuncCall(
                                                                                                                                FuncCall {
                                                                                                                                    target: "sum",
                                                                                                                                    args: [
                                                                                                                                        Var(
                                                                                                                                            "contribution",
                                                                                                                                        ),
                                                                                                                                        Nat(
                                                                                                                                            "1",
                                                                                                                                        ),
                                                                                                                                        Var(
                                                                                                                                            "n",
                                                                                                                                        ),
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            ),
                                                                                                                            op: Eq,
                                                                                                                            rhs: Var(
                                                                                                                                "price",
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                            then: Nat(
                                                                                                                "1",
                                                                                                            ),
                                                                                                            else_: Nat(
                                                                                                                "0",
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ),
                                                                        LabelOrCmd(
                                                                            Assign(
                                                                                AssignCmd {
                                                                                    lhs: [
                                                                                        AssignLhs {
                                                                                            ident: "PAs",
                                                                                            subscripts: [],
                                                                                        },
                                                                                    ],
                                                                                    rhs: [
                                                                                        FuncCall(
                                                                                            FuncCall {
                                                                                                target: "SingletonPA",
                                                                                                args: [
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "SellerFinish",
                                                                                                            args: [
                                                                                                                Nat(
                                                                                                                    "0",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                ),
                                                            ),
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_abstraction",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "4",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "FirstBuyer'",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "QuoteCH",
                            "RemCH",
                            "contribution",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "rem",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "amount",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "firstBuyerID",
                                            args: [
                                                Var(
                                                    "pid",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "q",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "QuoteCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "q",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "q",
                                                                ),
                                                                op: Eq,
                                                                rhs: Var(
                                                                    "price",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "DecCH",
                                            ),
                                            op: Eq,
                                            rhs: Quant(
                                                QuantExpr {
                                                    kind: Lambda,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "b",
                                                                        ],
                                                                        type_: Atom(
                                                                            Bool,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Nat(
                                                            "0",
                                                        ),
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "i",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Neq,
                                                                rhs: Var(
                                                                    "pid",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "RemCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "i",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Eq,
                                                                rhs: Quant(
                                                                    QuantExpr {
                                                                        kind: Lambda,
                                                                        body: QuantBody {
                                                                            type_params: [],
                                                                            bound_vars: [
                                                                                AttrTypedIdentsWhere {
                                                                                    attrs: [],
                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                        typed_idents: TypedIdents {
                                                                                            idents: [
                                                                                                "r",
                                                                                            ],
                                                                                            type_: Atom(
                                                                                                Int,
                                                                                            ),
                                                                                        },
                                                                                        where_: None,
                                                                                    },
                                                                                },
                                                                            ],
                                                                            attrs: [],
                                                                            expr: Nat(
                                                                                "0",
                                                                            ),
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "QuoteCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "price",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "QuoteCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "price",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "QuoteCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "price",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "rem",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "price",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "amount",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "min",
                                                                args: [
                                                                    Var(
                                                                        "wallet",
                                                                    ),
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "amount",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "contribution",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "amount",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "rem",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "rem",
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "amount",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "RemCH",
                                            subscripts: [
                                                [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "nextBuyer",
                                                            args: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "rem",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "RemCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "nextBuyer",
                                                                            args: [
                                                                                Var(
                                                                                    "pid",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_abstraction",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "4",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "MiddleBuyer'",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "QuoteCH",
                            "RemCH",
                            "contribution",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "rem",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "amount",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "middleBuyerID",
                                            args: [
                                                Var(
                                                    "pid",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "q",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "QuoteCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "q",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "q",
                                                                ),
                                                                op: Eq,
                                                                rhs: Var(
                                                                    "price",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "RemCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "r",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Logical(
                                                            LogicalExpr {
                                                                lhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Nat(
                                                                            "0",
                                                                        ),
                                                                        op: Le,
                                                                        rhs: Var(
                                                                            "r",
                                                                        ),
                                                                    },
                                                                ),
                                                                op: And,
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Var(
                                                                            "r",
                                                                        ),
                                                                        op: Le,
                                                                        rhs: Var(
                                                                            "price",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "RemCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "r",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "r",
                                                                ),
                                                                op: Eq,
                                                                rhs: Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "price",
                                                                        ),
                                                                        op: Sub,
                                                                        rhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "sum",
                                                                                args: [
                                                                                    Var(
                                                                                        "contribution",
                                                                                    ),
                                                                                    Nat(
                                                                                        "1",
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "pid",
                                                                                            ),
                                                                                            op: Sub,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "RemCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "price",
                                                                        ),
                                                                        op: Sub,
                                                                        rhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "sum",
                                                                                args: [
                                                                                    Var(
                                                                                        "contribution",
                                                                                    ),
                                                                                    Nat(
                                                                                        "1",
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "pid",
                                                                                            ),
                                                                                            op: Sub,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: Exists,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Rel(
                                                    RelExpr {
                                                        lhs: Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "RemCH",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "pid",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "r",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                        op: Gt,
                                                        rhs: Nat(
                                                            "0",
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "DecCH",
                                            ),
                                            op: Eq,
                                            rhs: Quant(
                                                QuantExpr {
                                                    kind: Lambda,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "b",
                                                                        ],
                                                                        type_: Atom(
                                                                            Bool,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Nat(
                                                            "0",
                                                        ),
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "i",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Lt,
                                                                rhs: Var(
                                                                    "pid",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "QuoteCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "i",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Eq,
                                                                rhs: Quant(
                                                                    QuantExpr {
                                                                        kind: Lambda,
                                                                        body: QuantBody {
                                                                            type_params: [],
                                                                            bound_vars: [
                                                                                AttrTypedIdentsWhere {
                                                                                    attrs: [],
                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                        typed_idents: TypedIdents {
                                                                                            idents: [
                                                                                                "r",
                                                                                            ],
                                                                                            type_: Atom(
                                                                                                Int,
                                                                                            ),
                                                                                        },
                                                                                        where_: None,
                                                                                    },
                                                                                },
                                                                            ],
                                                                            attrs: [],
                                                                            expr: Nat(
                                                                                "0",
                                                                            ),
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "i",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Neq,
                                                                rhs: Var(
                                                                    "pid",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "RemCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "i",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Eq,
                                                                rhs: Quant(
                                                                    QuantExpr {
                                                                        kind: Lambda,
                                                                        body: QuantBody {
                                                                            type_params: [],
                                                                            bound_vars: [
                                                                                AttrTypedIdentsWhere {
                                                                                    attrs: [],
                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                        typed_idents: TypedIdents {
                                                                                            idents: [
                                                                                                "r",
                                                                                            ],
                                                                                            type_: Atom(
                                                                                                Int,
                                                                                            ),
                                                                                        },
                                                                                        where_: None,
                                                                                    },
                                                                                },
                                                                            ],
                                                                            attrs: [],
                                                                            expr: Nat(
                                                                                "0",
                                                                            ),
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "QuoteCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "price",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "RemCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "rem",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "QuoteCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "price",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "QuoteCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "price",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "RemCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "rem",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "RemCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "amount",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "min",
                                                                args: [
                                                                    Var(
                                                                        "wallet",
                                                                    ),
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "amount",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "contribution",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "amount",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "rem",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "rem",
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "amount",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "RemCH",
                                            subscripts: [
                                                [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "nextBuyer",
                                                            args: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "rem",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "RemCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "nextBuyer",
                                                                            args: [
                                                                                Var(
                                                                                    "pid",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_abstraction",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "4",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "LastBuyer'",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "QuoteCH",
                            "RemCH",
                            "DecCH",
                            "contribution",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "rem",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "amount",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "lastBuyerID",
                                            args: [
                                                Var(
                                                    "pid",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "q",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "QuoteCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "q",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "q",
                                                                ),
                                                                op: Eq,
                                                                rhs: Var(
                                                                    "price",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "RemCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "r",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Logical(
                                                            LogicalExpr {
                                                                lhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Nat(
                                                                            "0",
                                                                        ),
                                                                        op: Le,
                                                                        rhs: Var(
                                                                            "r",
                                                                        ),
                                                                    },
                                                                ),
                                                                op: And,
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Var(
                                                                            "r",
                                                                        ),
                                                                        op: Le,
                                                                        rhs: Var(
                                                                            "price",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "RemCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "r",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "r",
                                                                ),
                                                                op: Eq,
                                                                rhs: Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "price",
                                                                        ),
                                                                        op: Sub,
                                                                        rhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "sum",
                                                                                args: [
                                                                                    Var(
                                                                                        "contribution",
                                                                                    ),
                                                                                    Nat(
                                                                                        "1",
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "pid",
                                                                                            ),
                                                                                            op: Sub,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "RemCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "n",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "price",
                                                                        ),
                                                                        op: Sub,
                                                                        rhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "sum",
                                                                                args: [
                                                                                    Var(
                                                                                        "contribution",
                                                                                    ),
                                                                                    Nat(
                                                                                        "1",
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "n",
                                                                                            ),
                                                                                            op: Sub,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: Exists,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Rel(
                                                    RelExpr {
                                                        lhs: Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "RemCH",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "pid",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "r",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                        op: Gt,
                                                        rhs: Nat(
                                                            "0",
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "DecCH",
                                            ),
                                            op: Eq,
                                            rhs: Quant(
                                                QuantExpr {
                                                    kind: Lambda,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "b",
                                                                        ],
                                                                        type_: Atom(
                                                                            Bool,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Nat(
                                                            "0",
                                                        ),
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "i",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Lt,
                                                                rhs: Var(
                                                                    "pid",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "QuoteCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "i",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Eq,
                                                                rhs: Quant(
                                                                    QuantExpr {
                                                                        kind: Lambda,
                                                                        body: QuantBody {
                                                                            type_params: [],
                                                                            bound_vars: [
                                                                                AttrTypedIdentsWhere {
                                                                                    attrs: [],
                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                        typed_idents: TypedIdents {
                                                                                            idents: [
                                                                                                "r",
                                                                                            ],
                                                                                            type_: Atom(
                                                                                                Int,
                                                                                            ),
                                                                                        },
                                                                                        where_: None,
                                                                                    },
                                                                                },
                                                                            ],
                                                                            attrs: [],
                                                                            expr: Nat(
                                                                                "0",
                                                                            ),
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "QuoteCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "price",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "RemCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "rem",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "QuoteCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "price",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "QuoteCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "price",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "RemCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "rem",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "RemCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "amount",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "min",
                                                                args: [
                                                                    Var(
                                                                        "wallet",
                                                                    ),
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "amount",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "contribution",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "amount",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "amount",
                                                ),
                                                op: Eq,
                                                rhs: Var(
                                                    "rem",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "DecCH",
                                                            subscripts: [
                                                                [
                                                                    BoolLit(
                                                                        true,
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "DecCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    BoolLit(
                                                                                        true,
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "DecCH",
                                                                    subscripts: [
                                                                        [
                                                                            BoolLit(
                                                                                false,
                                                                            ),
                                                                        ],
                                                                    ],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Term(
                                                                    Term {
                                                                        lhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "DecCH",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            BoolLit(
                                                                                                false,
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Add,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "4",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "IS",
                            params: [
                                String(
                                    StringLit {
                                        text: "MAIN4",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "INV3",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "FirstBuyer",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "FirstBuyer'",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "MiddleBuyer",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "MiddleBuyer'",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "LastBuyer",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "LastBuyer'",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "MAIN3",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "SellerFinish",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "FirstBuyer",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "MiddleBuyer",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "LastBuyer",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "QuoteCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "pids",
                                                ),
                                                Var(
                                                    "ReqCH",
                                                ),
                                                Var(
                                                    "QuoteCH",
                                                ),
                                                Var(
                                                    "RemCH",
                                                ),
                                                Var(
                                                    "DecCH",
                                                ),
                                                Var(
                                                    "contribution",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "QuoteCH",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Quant(
                                            QuantExpr {
                                                kind: Lambda,
                                                body: QuantBody {
                                                    type_params: [],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "i",
                                                                    ],
                                                                    type_: Atom(
                                                                        Int,
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: Quant(
                                                        QuantExpr {
                                                            kind: Lambda,
                                                            body: QuantBody {
                                                                type_params: [],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "q",
                                                                                ],
                                                                                type_: Atom(
                                                                                    Int,
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [],
                                                                expr: IfThenElse(
                                                                    IfThenElseExpr {
                                                                        cond: Logical(
                                                                            LogicalExpr {
                                                                                lhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "buyerID",
                                                                                        args: [
                                                                                            Var(
                                                                                                "i",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: And,
                                                                                rhs: Rel(
                                                                                    RelExpr {
                                                                                        lhs: Var(
                                                                                            "q",
                                                                                        ),
                                                                                        op: Eq,
                                                                                        rhs: Var(
                                                                                            "price",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        then: Nat(
                                                                            "1",
                                                                        ),
                                                                        else_: Nat(
                                                                            "0",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "PAs",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "MapAddPA4",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "SellerFinish",
                                                            args: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "FirstBuyer",
                                                            args: [
                                                                Nat(
                                                                    "1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "LastBuyer",
                                                            args: [
                                                                Var(
                                                                    "n",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Quant(
                                                        QuantExpr {
                                                            kind: Lambda,
                                                            body: QuantBody {
                                                                type_params: [],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "pa",
                                                                                ],
                                                                                type_: App(
                                                                                    TypeApp {
                                                                                        head: "PA",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [],
                                                                expr: IfThenElse(
                                                                    IfThenElseExpr {
                                                                        cond: Logical(
                                                                            LogicalExpr {
                                                                                lhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "is#MiddleBuyer",
                                                                                        args: [
                                                                                            Var(
                                                                                                "pa",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: And,
                                                                                rhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "middleBuyerID",
                                                                                        args: [
                                                                                            FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "pid#MiddleBuyer",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "pa",
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        then: Nat(
                                                                            "1",
                                                                        ),
                                                                        else_: Nat(
                                                                            "0",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_invariant",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "3",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "INV2",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "SellerInit",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "SellerFinish",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "FirstBuyer",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "MiddleBuyer",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "LastBuyer",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ReqCH",
                            "QuoteCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "pids",
                                                ),
                                                Var(
                                                    "ReqCH",
                                                ),
                                                Var(
                                                    "QuoteCH",
                                                ),
                                                Var(
                                                    "RemCH",
                                                ),
                                                Var(
                                                    "DecCH",
                                                ),
                                                Var(
                                                    "contribution",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "ReqCH",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Nat(
                                                            "1",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "PAs",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "MapAddPA4",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "SellerInit",
                                                                            args: [
                                                                                Nat(
                                                                                    "0",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FirstBuyer",
                                                                            args: [
                                                                                Nat(
                                                                                    "1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "LastBuyer",
                                                                            args: [
                                                                                Var(
                                                                                    "n",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Quant(
                                                                        QuantExpr {
                                                                            kind: Lambda,
                                                                            body: QuantBody {
                                                                                type_params: [],
                                                                                bound_vars: [
                                                                                    AttrTypedIdentsWhere {
                                                                                        attrs: [],
                                                                                        typed_idents_where: TypedIdentsWhere {
                                                                                            typed_idents: TypedIdents {
                                                                                                idents: [
                                                                                                    "pa",
                                                                                                ],
                                                                                                type_: App(
                                                                                                    TypeApp {
                                                                                                        head: "PA",
                                                                                                        tail: None,
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            where_: None,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                                attrs: [],
                                                                                expr: IfThenElse(
                                                                                    IfThenElseExpr {
                                                                                        cond: Logical(
                                                                                            LogicalExpr {
                                                                                                lhs: FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "is#MiddleBuyer",
                                                                                                        args: [
                                                                                                            Var(
                                                                                                                "pa",
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                                op: And,
                                                                                                rhs: FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "middleBuyerID",
                                                                                                        args: [
                                                                                                            FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "pid#MiddleBuyer",
                                                                                                                    args: [
                                                                                                                        Var(
                                                                                                                            "pa",
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        then: Nat(
                                                                                            "1",
                                                                                        ),
                                                                                        else_: Nat(
                                                                                            "0",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "QuoteCH",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Quant(
                                                                    QuantExpr {
                                                                        kind: Lambda,
                                                                        body: QuantBody {
                                                                            type_params: [],
                                                                            bound_vars: [
                                                                                AttrTypedIdentsWhere {
                                                                                    attrs: [],
                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                        typed_idents: TypedIdents {
                                                                                            idents: [
                                                                                                "i",
                                                                                            ],
                                                                                            type_: Atom(
                                                                                                Int,
                                                                                            ),
                                                                                        },
                                                                                        where_: None,
                                                                                    },
                                                                                },
                                                                            ],
                                                                            attrs: [],
                                                                            expr: Quant(
                                                                                QuantExpr {
                                                                                    kind: Lambda,
                                                                                    body: QuantBody {
                                                                                        type_params: [],
                                                                                        bound_vars: [
                                                                                            AttrTypedIdentsWhere {
                                                                                                attrs: [],
                                                                                                typed_idents_where: TypedIdentsWhere {
                                                                                                    typed_idents: TypedIdents {
                                                                                                        idents: [
                                                                                                            "q",
                                                                                                        ],
                                                                                                        type_: Atom(
                                                                                                            Int,
                                                                                                        ),
                                                                                                    },
                                                                                                    where_: None,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                        attrs: [],
                                                                                        expr: IfThenElse(
                                                                                            IfThenElseExpr {
                                                                                                cond: Logical(
                                                                                                    LogicalExpr {
                                                                                                        lhs: FuncCall(
                                                                                                            FuncCall {
                                                                                                                target: "buyerID",
                                                                                                                args: [
                                                                                                                    Var(
                                                                                                                        "i",
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                        op: And,
                                                                                                        rhs: Rel(
                                                                                                            RelExpr {
                                                                                                                lhs: Var(
                                                                                                                    "q",
                                                                                                                ),
                                                                                                                op: Eq,
                                                                                                                rhs: Var(
                                                                                                                    "price",
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                                then: Nat(
                                                                                                    "1",
                                                                                                ),
                                                                                                else_: Nat(
                                                                                                    "0",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "PAs",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "MapAddPA4",
                                                                        args: [
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "SellerFinish",
                                                                                    args: [
                                                                                        Nat(
                                                                                            "0",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "FirstBuyer",
                                                                                    args: [
                                                                                        Nat(
                                                                                            "1",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "LastBuyer",
                                                                                    args: [
                                                                                        Var(
                                                                                            "n",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            Quant(
                                                                                QuantExpr {
                                                                                    kind: Lambda,
                                                                                    body: QuantBody {
                                                                                        type_params: [],
                                                                                        bound_vars: [
                                                                                            AttrTypedIdentsWhere {
                                                                                                attrs: [],
                                                                                                typed_idents_where: TypedIdentsWhere {
                                                                                                    typed_idents: TypedIdents {
                                                                                                        idents: [
                                                                                                            "pa",
                                                                                                        ],
                                                                                                        type_: App(
                                                                                                            TypeApp {
                                                                                                                head: "PA",
                                                                                                                tail: None,
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    where_: None,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                        attrs: [],
                                                                                        expr: IfThenElse(
                                                                                            IfThenElseExpr {
                                                                                                cond: Logical(
                                                                                                    LogicalExpr {
                                                                                                        lhs: FuncCall(
                                                                                                            FuncCall {
                                                                                                                target: "is#MiddleBuyer",
                                                                                                                args: [
                                                                                                                    Var(
                                                                                                                        "pa",
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                        op: And,
                                                                                                        rhs: FuncCall(
                                                                                                            FuncCall {
                                                                                                                target: "middleBuyerID",
                                                                                                                args: [
                                                                                                                    FuncCall(
                                                                                                                        FuncCall {
                                                                                                                            target: "pid#MiddleBuyer",
                                                                                                                            args: [
                                                                                                                                Var(
                                                                                                                                    "pa",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                                then: Nat(
                                                                                                    "1",
                                                                                                ),
                                                                                                else_: Nat(
                                                                                                    "0",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "3",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "SellerInit'",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "SellerFinish",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ReqCH",
                            "QuoteCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "sellerID",
                                            args: [
                                                Var(
                                                    "pid",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "QuoteCH",
                                            ),
                                            op: Eq,
                                            rhs: Quant(
                                                QuantExpr {
                                                    kind: Lambda,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "i",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Quant(
                                                            QuantExpr {
                                                                kind: Lambda,
                                                                body: QuantBody {
                                                                    type_params: [],
                                                                    bound_vars: [
                                                                        AttrTypedIdentsWhere {
                                                                            attrs: [],
                                                                            typed_idents_where: TypedIdentsWhere {
                                                                                typed_idents: TypedIdents {
                                                                                    idents: [
                                                                                        "q",
                                                                                    ],
                                                                                    type_: Atom(
                                                                                        Int,
                                                                                    ),
                                                                                },
                                                                                where_: None,
                                                                            },
                                                                        },
                                                                    ],
                                                                    attrs: [],
                                                                    expr: Nat(
                                                                        "0",
                                                                    ),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "ReqCH",
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "ReqCH",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "ReqCH",
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "QuoteCH",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Quant(
                                            QuantExpr {
                                                kind: Lambda,
                                                body: QuantBody {
                                                    type_params: [],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "i",
                                                                    ],
                                                                    type_: Atom(
                                                                        Int,
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: Quant(
                                                        QuantExpr {
                                                            kind: Lambda,
                                                            body: QuantBody {
                                                                type_params: [],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "q",
                                                                                ],
                                                                                type_: Atom(
                                                                                    Int,
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [],
                                                                expr: IfThenElse(
                                                                    IfThenElseExpr {
                                                                        cond: Logical(
                                                                            LogicalExpr {
                                                                                lhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "buyerID",
                                                                                        args: [
                                                                                            Var(
                                                                                                "i",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: And,
                                                                                rhs: Rel(
                                                                                    RelExpr {
                                                                                        lhs: Var(
                                                                                            "q",
                                                                                        ),
                                                                                        op: Eq,
                                                                                        rhs: Var(
                                                                                            "price",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        then: Term(
                                                                            Term {
                                                                                lhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "QuoteCH",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "i",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "q",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        else_: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "QuoteCH",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "i",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "q",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "PAs",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "SingletonPA",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "SellerFinish",
                                                            args: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "3",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "IS",
                            params: [
                                String(
                                    StringLit {
                                        text: "MAIN3",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "INV2",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "SellerInit",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "SellerInit'",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "MAIN2",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "SellerInit",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "FirstBuyer",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "MiddleBuyer",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "LastBuyer",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ReqCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "pids",
                                                ),
                                                Var(
                                                    "ReqCH",
                                                ),
                                                Var(
                                                    "QuoteCH",
                                                ),
                                                Var(
                                                    "RemCH",
                                                ),
                                                Var(
                                                    "DecCH",
                                                ),
                                                Var(
                                                    "contribution",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "ReqCH",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "1",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "PAs",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "MapAddPA4",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "SellerInit",
                                                            args: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "FirstBuyer",
                                                            args: [
                                                                Nat(
                                                                    "1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "LastBuyer",
                                                            args: [
                                                                Var(
                                                                    "n",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Quant(
                                                        QuantExpr {
                                                            kind: Lambda,
                                                            body: QuantBody {
                                                                type_params: [],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "pa",
                                                                                ],
                                                                                type_: App(
                                                                                    TypeApp {
                                                                                        head: "PA",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [],
                                                                expr: IfThenElse(
                                                                    IfThenElseExpr {
                                                                        cond: Logical(
                                                                            LogicalExpr {
                                                                                lhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "is#MiddleBuyer",
                                                                                        args: [
                                                                                            Var(
                                                                                                "pa",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: And,
                                                                                rhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "middleBuyerID",
                                                                                        args: [
                                                                                            FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "pid#MiddleBuyer",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "pa",
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        then: Nat(
                                                                            "1",
                                                                        ),
                                                                        else_: Nat(
                                                                            "0",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "IS_invariant",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "INV1",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "SellerInit",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "FirstBuyerInit",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "FirstBuyer",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "MiddleBuyer",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "LastBuyer",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ReqCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "pids",
                                                ),
                                                Var(
                                                    "ReqCH",
                                                ),
                                                Var(
                                                    "QuoteCH",
                                                ),
                                                Var(
                                                    "RemCH",
                                                ),
                                                Var(
                                                    "DecCH",
                                                ),
                                                Var(
                                                    "contribution",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "PAs",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "MapAddPA4",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "SellerInit",
                                                                            args: [
                                                                                Nat(
                                                                                    "0",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FirstBuyerInit",
                                                                            args: [
                                                                                Nat(
                                                                                    "1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "LastBuyer",
                                                                            args: [
                                                                                Var(
                                                                                    "n",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    Quant(
                                                                        QuantExpr {
                                                                            kind: Lambda,
                                                                            body: QuantBody {
                                                                                type_params: [],
                                                                                bound_vars: [
                                                                                    AttrTypedIdentsWhere {
                                                                                        attrs: [],
                                                                                        typed_idents_where: TypedIdentsWhere {
                                                                                            typed_idents: TypedIdents {
                                                                                                idents: [
                                                                                                    "pa",
                                                                                                ],
                                                                                                type_: App(
                                                                                                    TypeApp {
                                                                                                        head: "PA",
                                                                                                        tail: None,
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                            where_: None,
                                                                                        },
                                                                                    },
                                                                                ],
                                                                                attrs: [],
                                                                                expr: IfThenElse(
                                                                                    IfThenElseExpr {
                                                                                        cond: Logical(
                                                                                            LogicalExpr {
                                                                                                lhs: FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "is#MiddleBuyer",
                                                                                                        args: [
                                                                                                            Var(
                                                                                                                "pa",
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                                op: And,
                                                                                                rhs: FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "middleBuyerID",
                                                                                                        args: [
                                                                                                            FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "pid#MiddleBuyer",
                                                                                                                    args: [
                                                                                                                        Var(
                                                                                                                            "pa",
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        then: Nat(
                                                                                            "1",
                                                                                        ),
                                                                                        else_: Nat(
                                                                                            "0",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "ReqCH",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Nat(
                                                                    "1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "PAs",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "MapAddPA4",
                                                                        args: [
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "SellerInit",
                                                                                    args: [
                                                                                        Nat(
                                                                                            "0",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "FirstBuyer",
                                                                                    args: [
                                                                                        Nat(
                                                                                            "1",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "LastBuyer",
                                                                                    args: [
                                                                                        Var(
                                                                                            "n",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            Quant(
                                                                                QuantExpr {
                                                                                    kind: Lambda,
                                                                                    body: QuantBody {
                                                                                        type_params: [],
                                                                                        bound_vars: [
                                                                                            AttrTypedIdentsWhere {
                                                                                                attrs: [],
                                                                                                typed_idents_where: TypedIdentsWhere {
                                                                                                    typed_idents: TypedIdents {
                                                                                                        idents: [
                                                                                                            "pa",
                                                                                                        ],
                                                                                                        type_: App(
                                                                                                            TypeApp {
                                                                                                                head: "PA",
                                                                                                                tail: None,
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                    where_: None,
                                                                                                },
                                                                                            },
                                                                                        ],
                                                                                        attrs: [],
                                                                                        expr: IfThenElse(
                                                                                            IfThenElseExpr {
                                                                                                cond: Logical(
                                                                                                    LogicalExpr {
                                                                                                        lhs: FuncCall(
                                                                                                            FuncCall {
                                                                                                                target: "is#MiddleBuyer",
                                                                                                                args: [
                                                                                                                    Var(
                                                                                                                        "pa",
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                        op: And,
                                                                                                        rhs: FuncCall(
                                                                                                            FuncCall {
                                                                                                                target: "middleBuyerID",
                                                                                                                args: [
                                                                                                                    FuncCall(
                                                                                                                        FuncCall {
                                                                                                                            target: "pid#MiddleBuyer",
                                                                                                                            args: [
                                                                                                                                Var(
                                                                                                                                    "pa",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                                then: Nat(
                                                                                                    "1",
                                                                                                ),
                                                                                                else_: Nat(
                                                                                                    "0",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "IS",
                            params: [
                                String(
                                    StringLit {
                                        text: "MAIN2",
                                    },
                                ),
                                String(
                                    StringLit {
                                        text: "INV1",
                                    },
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "elim",
                            params: [
                                String(
                                    StringLit {
                                        text: "FirstBuyerInit",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "MAIN1",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "SellerInit",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "FirstBuyerInit",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "MiddleBuyer",
                                            },
                                        ),
                                        String(
                                            StringLit {
                                                text: "LastBuyer",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Init",
                                            args: [
                                                Var(
                                                    "pids",
                                                ),
                                                Var(
                                                    "ReqCH",
                                                ),
                                                Var(
                                                    "QuoteCH",
                                                ),
                                                Var(
                                                    "RemCH",
                                                ),
                                                Var(
                                                    "DecCH",
                                                ),
                                                Var(
                                                    "contribution",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "PAs",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "MapAddPA4",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "SellerInit",
                                                            args: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "FirstBuyerInit",
                                                            args: [
                                                                Nat(
                                                                    "1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "LastBuyer",
                                                            args: [
                                                                Var(
                                                                    "n",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Quant(
                                                        QuantExpr {
                                                            kind: Lambda,
                                                            body: QuantBody {
                                                                type_params: [],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "pa",
                                                                                ],
                                                                                type_: App(
                                                                                    TypeApp {
                                                                                        head: "PA",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [],
                                                                expr: IfThenElse(
                                                                    IfThenElseExpr {
                                                                        cond: Logical(
                                                                            LogicalExpr {
                                                                                lhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "is#MiddleBuyer",
                                                                                        args: [
                                                                                            Var(
                                                                                                "pa",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: And,
                                                                                rhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "middleBuyerID",
                                                                                        args: [
                                                                                            FuncCall(
                                                                                                FuncCall {
                                                                                                    target: "pid#MiddleBuyer",
                                                                                                    args: [
                                                                                                        Var(
                                                                                                            "pa",
                                                                                                        ),
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        then: Nat(
                                                                            "1",
                                                                        ),
                                                                        else_: Nat(
                                                                            "0",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                                Expr(
                                    Nat(
                                        "3",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "SellerInit",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "SellerFinish",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ReqCH",
                            "QuoteCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "sellerID",
                                            args: [
                                                Var(
                                                    "pid",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "ReqCH",
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "ReqCH",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "ReqCH",
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "QuoteCH",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Quant(
                                            QuantExpr {
                                                kind: Lambda,
                                                body: QuantBody {
                                                    type_params: [],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "i",
                                                                    ],
                                                                    type_: Atom(
                                                                        Int,
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: Quant(
                                                        QuantExpr {
                                                            kind: Lambda,
                                                            body: QuantBody {
                                                                type_params: [],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "q",
                                                                                ],
                                                                                type_: Atom(
                                                                                    Int,
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [],
                                                                expr: IfThenElse(
                                                                    IfThenElseExpr {
                                                                        cond: Logical(
                                                                            LogicalExpr {
                                                                                lhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "buyerID",
                                                                                        args: [
                                                                                            Var(
                                                                                                "i",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: And,
                                                                                rhs: Rel(
                                                                                    RelExpr {
                                                                                        lhs: Var(
                                                                                            "q",
                                                                                        ),
                                                                                        op: Eq,
                                                                                        rhs: Var(
                                                                                            "price",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        then: Term(
                                                                            Term {
                                                                                lhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "QuoteCH",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "i",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "q",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        else_: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "QuoteCH",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "i",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "q",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "PAs",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "SingletonPA",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "SellerFinish",
                                                            args: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                                Expr(
                                    Nat(
                                        "5",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "SellerFinish",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "DecCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "dec",
                                        ],
                                        type_: Atom(
                                            Bool,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "sellerID",
                                            args: [
                                                Var(
                                                    "pid",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Implies(
                                        ImpliesExpr {
                                            lhs: Rel(
                                                RelExpr {
                                                    lhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "DecCH",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        BoolLit(
                                                                            true,
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    op: Gt,
                                                    rhs: Nat(
                                                        "0",
                                                    ),
                                                },
                                            ),
                                            rhs: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "sum",
                                                            args: [
                                                                Var(
                                                                    "contribution",
                                                                ),
                                                                Nat(
                                                                    "1",
                                                                ),
                                                                Var(
                                                                    "n",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: Var(
                                                        "price",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "DecCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "dec",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "DecCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "dec",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "DecCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "dec",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                                Expr(
                                    Nat(
                                        "4",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "FirstBuyerInit",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "pending_async",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "FirstBuyer",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "PAs",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "PA",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Int,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ReqCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "firstBuyerID",
                                            args: [
                                                Var(
                                                    "pid",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "ReqCH",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "ReqCH",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "PAs",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "SingletonPA",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "FirstBuyer",
                                                            args: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                                Expr(
                                    Nat(
                                        "4",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "FirstBuyer",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "QuoteCH",
                            "RemCH",
                            "contribution",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "rem",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "amount",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "firstBuyerID",
                                            args: [
                                                Var(
                                                    "pid",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "q",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "QuoteCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "q",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "q",
                                                                ),
                                                                op: Eq,
                                                                rhs: Var(
                                                                    "price",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "QuoteCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "price",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "QuoteCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "price",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "QuoteCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "price",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "rem",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "price",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "amount",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "min",
                                                                args: [
                                                                    Var(
                                                                        "wallet",
                                                                    ),
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "amount",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "contribution",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "amount",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "rem",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "rem",
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "amount",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "RemCH",
                                            subscripts: [
                                                [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "nextBuyer",
                                                            args: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "rem",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "RemCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "nextBuyer",
                                                                            args: [
                                                                                Var(
                                                                                    "pid",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                                Expr(
                                    Nat(
                                        "4",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "MiddleBuyer",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "QuoteCH",
                            "RemCH",
                            "contribution",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "rem",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "amount",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "middleBuyerID",
                                            args: [
                                                Var(
                                                    "pid",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "q",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "QuoteCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "q",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "q",
                                                                ),
                                                                op: Eq,
                                                                rhs: Var(
                                                                    "price",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "RemCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "r",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Logical(
                                                            LogicalExpr {
                                                                lhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Nat(
                                                                            "0",
                                                                        ),
                                                                        op: Le,
                                                                        rhs: Var(
                                                                            "r",
                                                                        ),
                                                                    },
                                                                ),
                                                                op: And,
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Var(
                                                                            "r",
                                                                        ),
                                                                        op: Le,
                                                                        rhs: Var(
                                                                            "price",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "QuoteCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "price",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "QuoteCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "price",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "QuoteCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "price",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "RemCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "rem",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "RemCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "rem",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "RemCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "amount",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "min",
                                                                args: [
                                                                    Var(
                                                                        "wallet",
                                                                    ),
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "amount",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "contribution",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "amount",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "rem",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "rem",
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "amount",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "RemCH",
                                            subscripts: [
                                                [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "nextBuyer",
                                                            args: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "rem",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "RemCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "nextBuyer",
                                                                            args: [
                                                                                Var(
                                                                                    "pid",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "2",
                                    ),
                                ),
                                Expr(
                                    Nat(
                                        "4",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "LastBuyer",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "QuoteCH",
                            "RemCH",
                            "DecCH",
                            "contribution",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "rem",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "amount",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "lastBuyerID",
                                            args: [
                                                Var(
                                                    "pid",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "q",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "QuoteCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "q",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "q",
                                                                ),
                                                                op: Eq,
                                                                rhs: Var(
                                                                    "price",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Quant(
                                        QuantExpr {
                                            kind: ForAll,
                                            body: QuantBody {
                                                type_params: [],
                                                bound_vars: [
                                                    AttrTypedIdentsWhere {
                                                        attrs: [],
                                                        typed_idents_where: TypedIdentsWhere {
                                                            typed_idents: TypedIdents {
                                                                idents: [
                                                                    "r",
                                                                ],
                                                                type_: Atom(
                                                                    Int,
                                                                ),
                                                            },
                                                            where_: None,
                                                        },
                                                    },
                                                ],
                                                attrs: [],
                                                expr: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "RemCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "pid",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "r",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: Nat(
                                                                    "0",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: Logical(
                                                            LogicalExpr {
                                                                lhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Nat(
                                                                            "0",
                                                                        ),
                                                                        op: Le,
                                                                        rhs: Var(
                                                                            "r",
                                                                        ),
                                                                    },
                                                                ),
                                                                op: And,
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Var(
                                                                            "r",
                                                                        ),
                                                                        op: Le,
                                                                        rhs: Var(
                                                                            "price",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "QuoteCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "price",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "QuoteCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "price",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "QuoteCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "price",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "RemCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "rem",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "RemCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "rem",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "RemCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "amount",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "min",
                                                                args: [
                                                                    Var(
                                                                        "wallet",
                                                                    ),
                                                                    Var(
                                                                        "rem",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "amount",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "contribution",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "amount",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "amount",
                                                ),
                                                op: Eq,
                                                rhs: Var(
                                                    "rem",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "DecCH",
                                                            subscripts: [
                                                                [
                                                                    BoolLit(
                                                                        true,
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "DecCH",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    BoolLit(
                                                                                        true,
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "DecCH",
                                                                    subscripts: [
                                                                        [
                                                                            BoolLit(
                                                                                false,
                                                                            ),
                                                                        ],
                                                                    ],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Term(
                                                                    Term {
                                                                        lhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "DecCH",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            BoolLit(
                                                                                                false,
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Add,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "MAIN1",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "main",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "layer",
                                    params: [
                                        Expr(
                                            Nat(
                                                "1",
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ],
                        proposition: FuncCall(
                            FuncCall {
                                target: "Init",
                                args: [
                                    Var(
                                        "pids",
                                    ),
                                    Var(
                                        "ReqCH",
                                    ),
                                    Var(
                                        "QuoteCH",
                                    ),
                                    Var(
                                        "RemCH",
                                    ),
                                    Var(
                                        "DecCH",
                                    ),
                                    Var(
                                        "contribution",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [
                                Attr(
                                    AttrContent {
                                        ident: "pending_async",
                                        params: [],
                                    },
                                ),
                                Attr(
                                    AttrContent {
                                        ident: "layer",
                                        params: [
                                            Expr(
                                                Nat(
                                                    "1",
                                                ),
                                            ),
                                        ],
                                    },
                                ),
                            ],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "PAs",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "PA",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Int,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [
                                Attr(
                                    AttrContent {
                                        ident: "linear",
                                        params: [
                                            String(
                                                StringLit {
                                                    text: "pid",
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            ],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "pid",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [
                                Attr(
                                    AttrContent {
                                        ident: "linear",
                                        params: [
                                            String(
                                                StringLit {
                                                    text: "pid",
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            ],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "pids'",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    Atom(
                                                        Int,
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "pids'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "pids",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "pid",
                                            "pids'",
                                        ],
                                        target: "linear_transfer",
                                        params: [
                                            Nat(
                                                "0",
                                            ),
                                            Var(
                                                "pids'",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "sellerInit",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                        ],
                                    },
                                    is_async: true,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "pid",
                                            "pids'",
                                        ],
                                        target: "linear_transfer",
                                        params: [
                                            Nat(
                                                "1",
                                            ),
                                            Var(
                                                "pids'",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "firstBuyerInit",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                        ],
                                    },
                                    is_async: true,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "pid",
                                            "pids'",
                                        ],
                                        target: "linear_transfer",
                                        params: [
                                            Var(
                                                "n",
                                            ),
                                            Var(
                                                "pids'",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "lastBuyer",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                        ],
                                    },
                                    is_async: true,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "2",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            While(
                                WhileCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "i",
                                                ),
                                                op: Lt,
                                                rhs: Var(
                                                    "n",
                                                ),
                                            },
                                        ),
                                    ),
                                    invariants: [
                                        Invariant {
                                            attrs: [
                                                Attr(
                                                    AttrContent {
                                                        ident: "layer",
                                                        params: [
                                                            Expr(
                                                                Nat(
                                                                    "1",
                                                                ),
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                Attr(
                                                    AttrContent {
                                                        ident: "cooperates",
                                                        params: [],
                                                    },
                                                ),
                                            ],
                                            expr: BoolLit(
                                                true,
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [
                                                Attr(
                                                    AttrContent {
                                                        ident: "layer",
                                                        params: [
                                                            Expr(
                                                                Nat(
                                                                    "1",
                                                                ),
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                            expr: Logical(
                                                LogicalExpr {
                                                    lhs: Rel(
                                                        RelExpr {
                                                            lhs: Nat(
                                                                "2",
                                                            ),
                                                            op: Le,
                                                            rhs: Var(
                                                                "i",
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "i",
                                                            ),
                                                            op: Le,
                                                            rhs: Var(
                                                                "n",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [
                                                Attr(
                                                    AttrContent {
                                                        ident: "layer",
                                                        params: [
                                                            Expr(
                                                                Nat(
                                                                    "1",
                                                                ),
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                            expr: Quant(
                                                QuantExpr {
                                                    kind: ForAll,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "ii",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Implies(
                                                            ImpliesExpr {
                                                                lhs: Logical(
                                                                    LogicalExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "middleBuyerID",
                                                                                args: [
                                                                                    Var(
                                                                                        "ii",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Var(
                                                                                    "ii",
                                                                                ),
                                                                                op: Ge,
                                                                                rhs: Var(
                                                                                    "i",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "pids'",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "ii",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [
                                                Attr(
                                                    AttrContent {
                                                        ident: "layer",
                                                        params: [
                                                            Expr(
                                                                Nat(
                                                                    "1",
                                                                ),
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "PAs",
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "MapAddPA4",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "SellerInit",
                                                                        args: [
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "FirstBuyerInit",
                                                                        args: [
                                                                            Nat(
                                                                                "1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "LastBuyer",
                                                                        args: [
                                                                            Var(
                                                                                "n",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Quant(
                                                                    QuantExpr {
                                                                        kind: Lambda,
                                                                        body: QuantBody {
                                                                            type_params: [],
                                                                            bound_vars: [
                                                                                AttrTypedIdentsWhere {
                                                                                    attrs: [],
                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                        typed_idents: TypedIdents {
                                                                                            idents: [
                                                                                                "pa",
                                                                                            ],
                                                                                            type_: App(
                                                                                                TypeApp {
                                                                                                    head: "PA",
                                                                                                    tail: None,
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        where_: None,
                                                                                    },
                                                                                },
                                                                            ],
                                                                            attrs: [],
                                                                            expr: IfThenElse(
                                                                                IfThenElseExpr {
                                                                                    cond: Logical(
                                                                                        LogicalExpr {
                                                                                            lhs: Logical(
                                                                                                LogicalExpr {
                                                                                                    lhs: FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "is#MiddleBuyer",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "pa",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                    op: And,
                                                                                                    rhs: FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "middleBuyerID",
                                                                                                            args: [
                                                                                                                FuncCall(
                                                                                                                    FuncCall {
                                                                                                                        target: "pid#MiddleBuyer",
                                                                                                                        args: [
                                                                                                                            Var(
                                                                                                                                "pa",
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            op: And,
                                                                                            rhs: Rel(
                                                                                                RelExpr {
                                                                                                    lhs: FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "pid#MiddleBuyer",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "pa",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                    op: Lt,
                                                                                                    rhs: Var(
                                                                                                        "i",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    then: Nat(
                                                                                        "1",
                                                                                    ),
                                                                                    else_: Nat(
                                                                                        "0",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                    ],
                                    body: [
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [
                                                            "pid",
                                                            "pids'",
                                                        ],
                                                        target: "linear_transfer",
                                                        params: [
                                                            Var(
                                                                "i",
                                                            ),
                                                            Var(
                                                                "pids'",
                                                            ),
                                                        ],
                                                    },
                                                    is_async: false,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [],
                                                        target: "middleBuyer",
                                                        params: [
                                                            Var(
                                                                "pid",
                                                            ),
                                                        ],
                                                    },
                                                    is_async: true,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "i",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "SellerInit",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "sellerInit",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "layer",
                                    params: [
                                        Expr(
                                            Nat(
                                                "1",
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ],
                        proposition: FuncCall(
                            FuncCall {
                                target: "sellerID",
                                args: [
                                    Var(
                                        "pid",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [
                                Attr(
                                    AttrContent {
                                        ident: "layer",
                                        params: [
                                            Expr(
                                                Nat(
                                                    "1",
                                                ),
                                            ),
                                        ],
                                    },
                                ),
                            ],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "old_QuoteCH",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    Atom(
                                                        Int,
                                                    ),
                                                ],
                                                value: Map(
                                                    MapType {
                                                        type_params: [],
                                                        keys: [
                                                            Atom(
                                                                Int,
                                                            ),
                                                        ],
                                                        value: Atom(
                                                            Int,
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "old_QuoteCH",
                                        ],
                                        target: "Snapshot_QuoteCH",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "receive_req",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "1",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            While(
                                WhileCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "i",
                                                ),
                                                op: Le,
                                                rhs: Var(
                                                    "n",
                                                ),
                                            },
                                        ),
                                    ),
                                    invariants: [
                                        Invariant {
                                            attrs: [
                                                Attr(
                                                    AttrContent {
                                                        ident: "layer",
                                                        params: [
                                                            Expr(
                                                                Nat(
                                                                    "1",
                                                                ),
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                Attr(
                                                    AttrContent {
                                                        ident: "cooperates",
                                                        params: [],
                                                    },
                                                ),
                                            ],
                                            expr: BoolLit(
                                                true,
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [
                                                Attr(
                                                    AttrContent {
                                                        ident: "layer",
                                                        params: [
                                                            Expr(
                                                                Nat(
                                                                    "1",
                                                                ),
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                            expr: Logical(
                                                LogicalExpr {
                                                    lhs: Rel(
                                                        RelExpr {
                                                            lhs: Nat(
                                                                "1",
                                                            ),
                                                            op: Le,
                                                            rhs: Var(
                                                                "i",
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "i",
                                                            ),
                                                            op: Le,
                                                            rhs: Term(
                                                                Term {
                                                                    lhs: Var(
                                                                        "n",
                                                                    ),
                                                                    op: Add,
                                                                    rhs: Nat(
                                                                        "1",
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [
                                                Attr(
                                                    AttrContent {
                                                        ident: "layer",
                                                        params: [
                                                            Expr(
                                                                Nat(
                                                                    "1",
                                                                ),
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "QuoteCH",
                                                    ),
                                                    op: Eq,
                                                    rhs: Quant(
                                                        QuantExpr {
                                                            kind: Lambda,
                                                            body: QuantBody {
                                                                type_params: [],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "ii",
                                                                                ],
                                                                                type_: Atom(
                                                                                    Int,
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [],
                                                                expr: Quant(
                                                                    QuantExpr {
                                                                        kind: Lambda,
                                                                        body: QuantBody {
                                                                            type_params: [],
                                                                            bound_vars: [
                                                                                AttrTypedIdentsWhere {
                                                                                    attrs: [],
                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                        typed_idents: TypedIdents {
                                                                                            idents: [
                                                                                                "q",
                                                                                            ],
                                                                                            type_: Atom(
                                                                                                Int,
                                                                                            ),
                                                                                        },
                                                                                        where_: None,
                                                                                    },
                                                                                },
                                                                            ],
                                                                            attrs: [],
                                                                            expr: IfThenElse(
                                                                                IfThenElseExpr {
                                                                                    cond: Logical(
                                                                                        LogicalExpr {
                                                                                            lhs: Logical(
                                                                                                LogicalExpr {
                                                                                                    lhs: FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "buyerID",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "ii",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                    op: And,
                                                                                                    rhs: Rel(
                                                                                                        RelExpr {
                                                                                                            lhs: Var(
                                                                                                                "ii",
                                                                                                            ),
                                                                                                            op: Lt,
                                                                                                            rhs: Var(
                                                                                                                "i",
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            op: And,
                                                                                            rhs: Rel(
                                                                                                RelExpr {
                                                                                                    lhs: Var(
                                                                                                        "q",
                                                                                                    ),
                                                                                                    op: Eq,
                                                                                                    rhs: Var(
                                                                                                        "price",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    then: Term(
                                                                                        Term {
                                                                                            lhs: Array(
                                                                                                ArrayExpr {
                                                                                                    expr: Var(
                                                                                                        "old_QuoteCH",
                                                                                                    ),
                                                                                                    subscripts: [
                                                                                                        ArraySubscript {
                                                                                                            keys: [
                                                                                                                Var(
                                                                                                                    "ii",
                                                                                                                ),
                                                                                                            ],
                                                                                                            value: None,
                                                                                                        },
                                                                                                        ArraySubscript {
                                                                                                            keys: [
                                                                                                                Var(
                                                                                                                    "q",
                                                                                                                ),
                                                                                                            ],
                                                                                                            value: None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                            op: Add,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    else_: Array(
                                                                                        ArrayExpr {
                                                                                            expr: Var(
                                                                                                "old_QuoteCH",
                                                                                            ),
                                                                                            subscripts: [
                                                                                                ArraySubscript {
                                                                                                    keys: [
                                                                                                        Var(
                                                                                                            "ii",
                                                                                                        ),
                                                                                                    ],
                                                                                                    value: None,
                                                                                                },
                                                                                                ArraySubscript {
                                                                                                    keys: [
                                                                                                        Var(
                                                                                                            "q",
                                                                                                        ),
                                                                                                    ],
                                                                                                    value: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                    ],
                                    body: [
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [],
                                                        target: "send_quote",
                                                        params: [
                                                            Var(
                                                                "i",
                                                            ),
                                                            Var(
                                                                "price",
                                                            ),
                                                        ],
                                                    },
                                                    is_async: false,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "i",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "sellerFinish",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                        ],
                                    },
                                    is_async: true,
                                    is_free: false,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "SellerFinish",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "sellerFinish",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "layer",
                                    params: [
                                        Expr(
                                            Nat(
                                                "1",
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ],
                        proposition: FuncCall(
                            FuncCall {
                                target: "sellerID",
                                args: [
                                    Var(
                                        "pid",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "d",
                                        ],
                                        type_: Atom(
                                            Bool,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "d",
                                        ],
                                        target: "receive_dec",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Var(
                                            "d",
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Call(
                                                CallCmd {
                                                    attrs: [],
                                                    call_params: CallParams {
                                                        returns: [],
                                                        target: "assert_sum",
                                                        params: [],
                                                    },
                                                    is_async: false,
                                                    is_free: false,
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "FirstBuyerInit",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "firstBuyerInit",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "layer",
                                    params: [
                                        Expr(
                                            Nat(
                                                "1",
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ],
                        proposition: FuncCall(
                            FuncCall {
                                target: "firstBuyerID",
                                args: [
                                    Var(
                                        "pid",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "send_req",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "firstBuyer",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                        ],
                                    },
                                    is_async: true,
                                    is_free: false,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "FirstBuyer",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "firstBuyer",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "layer",
                                    params: [
                                        Expr(
                                            Nat(
                                                "1",
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ],
                        proposition: FuncCall(
                            FuncCall {
                                target: "firstBuyerID",
                                args: [
                                    Var(
                                        "pid",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "q",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "amount",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "q",
                                        ],
                                        target: "receive_quote",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "amount",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "min",
                                                                args: [
                                                                    Var(
                                                                        "wallet",
                                                                    ),
                                                                    Var(
                                                                        "q",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "amount",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "set_contribution",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                            Var(
                                                "amount",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "send_rem",
                                        params: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "nextBuyer",
                                                    args: [
                                                        Var(
                                                            "pid",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "q",
                                                    ),
                                                    op: Sub,
                                                    rhs: Var(
                                                        "amount",
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "MiddleBuyer",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "middleBuyer",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "layer",
                                    params: [
                                        Expr(
                                            Nat(
                                                "1",
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ],
                        proposition: FuncCall(
                            FuncCall {
                                target: "middleBuyerID",
                                args: [
                                    Var(
                                        "pid",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "q",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "r",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "amount",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "q",
                                        ],
                                        target: "receive_quote",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "r",
                                        ],
                                        target: "receive_rem",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "amount",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "min",
                                                                args: [
                                                                    Var(
                                                                        "wallet",
                                                                    ),
                                                                    Var(
                                                                        "r",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "amount",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "set_contribution",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                            Var(
                                                "amount",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "send_rem",
                                        params: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "nextBuyer",
                                                    args: [
                                                        Var(
                                                            "pid",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Term(
                                                Term {
                                                    lhs: Var(
                                                        "r",
                                                    ),
                                                    op: Sub,
                                                    rhs: Var(
                                                        "amount",
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "LastBuyer",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "lastBuyer",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "layer",
                                    params: [
                                        Expr(
                                            Nat(
                                                "1",
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ],
                        proposition: FuncCall(
                            FuncCall {
                                target: "lastBuyerID",
                                args: [
                                    Var(
                                        "pid",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "q",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "r",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "amount",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "q",
                                        ],
                                        target: "receive_quote",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "r",
                                        ],
                                        target: "receive_rem",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "amount",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "min",
                                                                args: [
                                                                    Var(
                                                                        "wallet",
                                                                    ),
                                                                    Var(
                                                                        "r",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: Some(
                                        Else(
                                            [
                                                LabelOrCmd(
                                                    Assign(
                                                        AssignCmd {
                                                            lhs: [
                                                                AssignLhs {
                                                                    ident: "amount",
                                                                    subscripts: [],
                                                                },
                                                            ],
                                                            rhs: [
                                                                Nat(
                                                                    "0",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ),
                                            ],
                                        ),
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "set_contribution",
                                        params: [
                                            Var(
                                                "pid",
                                            ),
                                            Var(
                                                "amount",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "send_dec",
                                        params: [
                                            Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "amount",
                                                    ),
                                                    op: Eq,
                                                    rhs: Var(
                                                        "r",
                                                    ),
                                                },
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "intro",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "Snapshot_QuoteCH",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "snapshot",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    Atom(
                                                        Int,
                                                    ),
                                                ],
                                                value: Atom(
                                                    Int,
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "snapshot",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "QuoteCH",
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "SET_CONTRIBUTION",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "c",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "contribution",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "contribution",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "c",
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "atomic",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "ASSERT_SUM",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "sum",
                                                    args: [
                                                        Var(
                                                            "contribution",
                                                        ),
                                                        Nat(
                                                            "1",
                                                        ),
                                                        Var(
                                                            "n",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "price",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "left",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "SEND_REQ",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ReqCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "ReqCH",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "ReqCH",
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "right",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "RECEIVE_REQ",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "ReqCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "ReqCH",
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "ReqCH",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "ReqCH",
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "left",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "SEND_QUOTE",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "q",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "QuoteCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "QuoteCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "QuoteCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "q",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "right",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "RECEIVE_QUOTE",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "q",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "QuoteCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "QuoteCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "q",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "QuoteCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "QuoteCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "q",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "left",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "SEND_REM",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "r",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "RemCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "RemCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "r",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "RemCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "r",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "right",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "RECEIVE_REM",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "r",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "RemCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "RemCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "pid",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "r",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "RemCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "pid",
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "r",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "RemCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "pid",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "r",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "left",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "SEND_DEC",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "d",
                                ],
                                type_: Atom(
                                    Bool,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "DecCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "DecCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "d",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "DecCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "d",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "right",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "RECEIVE_DEC",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "d",
                                ],
                                type_: Atom(
                                    Bool,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "DecCH",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "DecCH",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "d",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Gt,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "DecCH",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "d",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "DecCH",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "d",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "SET_CONTRIBUTION",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "set_contribution",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "c",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "ASSERT_SUM",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "assert_sum",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "SEND_REQ",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "send_req",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "RECEIVE_REQ",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "receive_req",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "SEND_QUOTE",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "send_quote",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "q",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "RECEIVE_QUOTE",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "receive_quote",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "q",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "SEND_REM",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "send_rem",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "r",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "RECEIVE_REM",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "receive_rem",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pid",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "r",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "SEND_DEC",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "send_dec",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "d",
                                ],
                                type_: Atom(
                                    Bool,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "RECEIVE_DEC",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "receive_dec",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "d",
                                ],
                                type_: Atom(
                                    Bool,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "both",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "1",
                                    ),
                                ),
                            ],
                        },
                    ),
                ],
                ident: "LINEAR_TRANSFER",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "p",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids'",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "pids",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "i",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "p",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "i",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "pids'",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "pids",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "i",
                                                            ),
                                                        ],
                                                        value: Some(
                                                            BoolLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [
                    Attr(
                        AttrContent {
                            ident: "yields",
                            params: [],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "layer",
                            params: [
                                Expr(
                                    Nat(
                                        "0",
                                    ),
                                ),
                            ],
                        },
                    ),
                    Attr(
                        AttrContent {
                            ident: "refines",
                            params: [
                                String(
                                    StringLit {
                                        text: "LINEAR_TRANSFER",
                                    },
                                ),
                            ],
                        },
                    ),
                ],
                ident: "linear_transfer",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "p",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "pid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "pids'",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            Atom(
                                                Int,
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: None,
        },
    ),
]

[Printed]
type {:linear "pid"} Pid = int;

const n: int;

const price: int;

const wallet: int;

axiom n > 1 && wallet >= 0 && price >= 0;

var {:layer 0, 6} contribution: [int]int;

var {:layer 0, 6} ReqCH: int;

var {:layer 0, 6} QuoteCH: [int][int]int;

var {:layer 0, 6} RemCH: [int][int]int;

var {:layer 0, 6} DecCH: [bool]int;

function {:inline} sellerID(pid: int): bool {
  pid == 0
}

function {:inline} buyerID(pid: int): bool {
  1 <= pid && pid <= n
}

function {:inline} firstBuyerID(pid: int): bool {
  pid == 1
}

function {:inline} middleBuyerID(pid: int): bool {
  1 < pid && pid < n
}

function {:inline} lastBuyerID(pid: int): bool {
  pid == n
}

function {:inline} nextBuyer(pid: int): int {
  pid + 1
}

function {:inline} min(x: int, y: int): int {
  if x < y then x else y
}

type {:pending_async} {:datatype} PA;

function {:constructor} FirstBuyerInit(pid: int): PA;

function {:constructor} FirstBuyer(pid: int): PA;

function {:constructor} MiddleBuyer(pid: int): PA;

function {:constructor} LastBuyer(pid: int): PA;

function {:constructor} SellerInit(pid: int): PA;

function {:constructor} SellerFinish(pid: int): PA;

function {:inline} NoPAs(): [PA]int {
  (lambda pa: PA :: 0)
}

function {:inline} SingletonPA(pa: PA): [PA]int {
  NoPAs()[pa := 1]
}

function {:builtin "MapAdd"} MapAddPA([PA]int, [PA]int): [PA]int;

function MapAddPA3(a: PA, b: PA, c: [PA]int): [PA]int {
  MapAddPA(SingletonPA(a), MapAddPA(SingletonPA(b), c))
}

function MapAddPA4(a: PA, b: PA, c: PA, d: [PA]int): [PA]int {
  MapAddPA(SingletonPA(a), MapAddPA(SingletonPA(b), MapAddPA(SingletonPA(c), d)))
}

function sum(A: [int]int, i: int, j: int): int {
  if j < i then 0 else if i == j then A[i] else sum(A, i, j - 1) + A[j]
}

axiom (forall A: [int]int, k: int, k': int, v: int :: k' > k && k > 0 ==> sum(A[k' := v], 1, k) == sum(A, 1, k));

axiom (forall A: [int]int, B: [int]int, i: int, j: int :: i <= j && (forall l: int :: i <= l && l <= j ==> A[l] == B[l]) ==> sum(A, i, j) == sum(B, i, j));

function {:inline} Init(pids: [int]bool, ReqCH: int, QuoteCH: [int][int]int, RemCH: [int][int]int, DecCH: [bool]int, contribution: [int]int): bool {
  pids == MapConst(true) && ReqCH == 0 && QuoteCH == (lambda i: int :: (lambda q: int :: 0)) && RemCH == (lambda i: int :: (lambda r: int :: 0)) && DecCH == (lambda b: bool :: 0) && contribution == (lambda i: int :: 0)
}

procedure {:atomic} {:layer 6} MAIN5({:linear_in "pid"} pids: [int]bool)
  modifies contribution;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  havoc contribution;
}

procedure {:IS_invariant} {:layer 5} INV4({:linear_in "pid"} pids: [int]bool) returns ({:pending_async "SellerFinish"} PAs: [PA]int)
  modifies DecCH, contribution;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  havoc contribution;
  if (*) {
    DecCH := (lambda b: bool :: if b == (sum(contribution, 1, n) == price) then 1 else 0);
    PAs := SingletonPA(SellerFinish(0));
  } else {
    PAs := NoPAs();
  }
}

procedure {:IS_abstraction} {:layer 5} SellerFinish'({:linear_in "pid"} pid: int)
  modifies DecCH;
{
  var dec: bool;

  assert sellerID(pid);
  assert DecCH == (lambda b: bool :: if b == (sum(contribution, 1, n) == price) then 1 else 0);
  dec := sum(contribution, 1, n) == price;
  DecCH[dec] := DecCH[dec] - 1;
}

procedure {:atomic} {:layer 5} {:IS "MAIN5", "INV4"} {:elim "SellerFinish", "SellerFinish'"} MAIN4({:linear_in "pid"} pids: [int]bool) returns ({:pending_async "SellerFinish"} PAs: [PA]int)
  modifies DecCH, contribution;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  havoc contribution;
  DecCH := (lambda b: bool :: if b == (sum(contribution, 1, n) == price) then 1 else 0);
  PAs := SingletonPA(SellerFinish(0));
}

procedure {:IS_invariant} {:layer 4} INV3({:linear_in "pid"} pids: [int]bool) returns ({:pending_async "SellerFinish", "FirstBuyer", "MiddleBuyer", "LastBuyer"} PAs: [PA]int, {:choice} choice: PA)
  modifies QuoteCH, RemCH, DecCH, contribution;
{
  var {:pool "INV3"} k: int;

  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  havoc contribution;
  if (*) {
    QuoteCH := (lambda i: int :: (lambda q: int :: if buyerID(i) && q == price then 1 else 0));
    PAs := MapAddPA4(SellerFinish(0), FirstBuyer(1), LastBuyer(n), (lambda pa: PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
    choice := FirstBuyer(1);
  } else if (*) {
    assume {:add_to_pool "INV3", k, k + 1} 1 <= k && k < n && 0 <= sum(contribution, 1, k) && sum(contribution, 1, k) <= price;
    QuoteCH := (lambda i: int :: (lambda q: int :: if buyerID(i) && i > k && q == price then 1 else 0));
    RemCH := (lambda i: int :: (lambda r: int :: if i == k + 1 && r == price - sum(contribution, 1, k) then 1 else 0));
    PAs := MapAddPA3(SellerFinish(0), LastBuyer(n), (lambda pa: PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) && pid#MiddleBuyer(pa) > k then 1 else 0));
    choice := if lastBuyerID(k + 1) then LastBuyer(k + 1) else MiddleBuyer(k + 1);
  } else if (*) {
    QuoteCH := (lambda i: int :: (lambda q: int :: if lastBuyerID(i) && q == price then 1 else 0));
    assume 0 <= sum(contribution, 1, n - 1) && sum(contribution, 1, n - 1) <= price;
    RemCH := (lambda i: int :: (lambda r: int :: if i == n && r == price - sum(contribution, 1, n - 1) then 1 else 0));
    PAs := MapAddPA(SingletonPA(SellerFinish(0)), SingletonPA(LastBuyer(n)));
    choice := LastBuyer(n);
  } else {
    DecCH := (lambda b: bool :: if b == (sum(contribution, 1, n) == price) then 1 else 0);
    PAs := SingletonPA(SellerFinish(0));
  }
}

procedure {:IS_abstraction} {:layer 4} FirstBuyer'({:linear_in "pid"} pid: int)
  modifies QuoteCH, RemCH, contribution;
{
  var rem: int;
  var amount: int;

  assert firstBuyerID(pid);
  assert (forall q: int :: QuoteCH[pid][q] > 0 ==> q == price);
  assert DecCH == (lambda b: bool :: 0);
  assert (forall i: int :: i != pid ==> RemCH[i] == (lambda r: int :: 0));
  assert QuoteCH[pid][price] > 0;
  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;
  rem := price;
  if (*) {
    amount := min(wallet, rem);
  } else {
    amount := 0;
  }
  contribution[pid] := amount;
  rem := rem - amount;
  RemCH[nextBuyer(pid)][rem] := RemCH[nextBuyer(pid)][rem] + 1;
}

procedure {:IS_abstraction} {:layer 4} MiddleBuyer'({:linear_in "pid"} pid: int)
  modifies QuoteCH, RemCH, contribution;
{
  var rem: int;
  var amount: int;

  assert middleBuyerID(pid);
  assert (forall q: int :: QuoteCH[pid][q] > 0 ==> q == price);
  assert (forall r: int :: RemCH[pid][r] > 0 ==> 0 <= r && r <= price);
  assert (forall r: int :: RemCH[pid][r] > 0 ==> r == price - sum(contribution, 1, pid - 1));
  assert RemCH[pid][price - sum(contribution, 1, pid - 1)] > 0;
  assert (exists r: int :: RemCH[pid][r] > 0);
  assert DecCH == (lambda b: bool :: 0);
  assert (forall i: int :: i < pid ==> QuoteCH[i] == (lambda r: int :: 0));
  assert (forall i: int :: i != pid ==> RemCH[i] == (lambda r: int :: 0));
  assert QuoteCH[pid][price] > 0;
  assume RemCH[pid][rem] > 0;
  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;
  RemCH[pid][rem] := RemCH[pid][rem] - 1;
  if (*) {
    amount := min(wallet, rem);
  } else {
    amount := 0;
  }
  contribution[pid] := amount;
  rem := rem - amount;
  RemCH[nextBuyer(pid)][rem] := RemCH[nextBuyer(pid)][rem] + 1;
}

procedure {:IS_abstraction} {:layer 4} LastBuyer'({:linear_in "pid"} pid: int)
  modifies QuoteCH, RemCH, DecCH, contribution;
{
  var rem: int;
  var amount: int;

  assert lastBuyerID(pid);
  assert (forall q: int :: QuoteCH[pid][q] > 0 ==> q == price);
  assert (forall r: int :: RemCH[pid][r] > 0 ==> 0 <= r && r <= price);
  assert (forall r: int :: RemCH[pid][r] > 0 ==> r == price - sum(contribution, 1, pid - 1));
  assert RemCH[n][price - sum(contribution, 1, n - 1)] > 0;
  assert (exists r: int :: RemCH[pid][r] > 0);
  assert DecCH == (lambda b: bool :: 0);
  assert (forall i: int :: i < pid ==> QuoteCH[i] == (lambda r: int :: 0));
  assert QuoteCH[pid][price] > 0;
  assume RemCH[pid][rem] > 0;
  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;
  RemCH[pid][rem] := RemCH[pid][rem] - 1;
  if (*) {
    amount := min(wallet, rem);
  } else {
    amount := 0;
  }
  contribution[pid] := amount;
  if (amount == rem) {
    DecCH[true] := DecCH[true] + 1;
  } else {
    DecCH[false] := DecCH[false] + 1;
  }
}

procedure {:atomic} {:layer 4} {:IS "MAIN4", "INV3"} {:elim "FirstBuyer", "FirstBuyer'"} {:elim "MiddleBuyer", "MiddleBuyer'"} {:elim "LastBuyer", "LastBuyer'"} MAIN3({:linear_in "pid"} pids: [int]bool) returns ({:pending_async "SellerFinish", "FirstBuyer", "MiddleBuyer", "LastBuyer"} PAs: [PA]int)
  modifies QuoteCH;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  QuoteCH := (lambda i: int :: (lambda q: int :: if buyerID(i) && q == price then 1 else 0));
  PAs := MapAddPA4(SellerFinish(0), FirstBuyer(1), LastBuyer(n), (lambda pa: PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
}

procedure {:IS_invariant} {:layer 3} INV2({:linear_in "pid"} pids: [int]bool) returns ({:pending_async "SellerInit", "SellerFinish", "FirstBuyer", "MiddleBuyer", "LastBuyer"} PAs: [PA]int)
  modifies ReqCH, QuoteCH;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  if (*) {
    ReqCH := 1;
    PAs := MapAddPA4(SellerInit(0), FirstBuyer(1), LastBuyer(n), (lambda pa: PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
  } else {
    QuoteCH := (lambda i: int :: (lambda q: int :: if buyerID(i) && q == price then 1 else 0));
    PAs := MapAddPA4(SellerFinish(0), FirstBuyer(1), LastBuyer(n), (lambda pa: PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
  }
}

procedure {:atomic} {:layer 3} SellerInit'({:linear_in "pid"} pid: int) returns ({:pending_async "SellerFinish"} PAs: [PA]int)
  modifies ReqCH, QuoteCH;
{
  assert sellerID(pid);
  assert QuoteCH == (lambda i: int :: (lambda q: int :: 0));
  assert ReqCH > 0;
  ReqCH := ReqCH - 1;
  QuoteCH := (lambda i: int :: (lambda q: int :: if buyerID(i) && q == price then QuoteCH[i][q] + 1 else QuoteCH[i][q]));
  PAs := SingletonPA(SellerFinish(pid));
}

procedure {:atomic} {:layer 3} {:IS "MAIN3", "INV2"} {:elim "SellerInit", "SellerInit'"} MAIN2({:linear_in "pid"} pids: [int]bool) returns ({:pending_async "SellerInit", "FirstBuyer", "MiddleBuyer", "LastBuyer"} PAs: [PA]int)
  modifies ReqCH;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  ReqCH := 1;
  PAs := MapAddPA4(SellerInit(0), FirstBuyer(1), LastBuyer(n), (lambda pa: PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
}

procedure {:IS_invariant} {:layer 2} INV1({:linear_in "pid"} pids: [int]bool) returns ({:pending_async "SellerInit", "FirstBuyerInit", "FirstBuyer", "MiddleBuyer", "LastBuyer"} PAs: [PA]int)
  modifies ReqCH;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  if (*) {
    PAs := MapAddPA4(SellerInit(0), FirstBuyerInit(1), LastBuyer(n), (lambda pa: PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
  } else {
    ReqCH := 1;
    PAs := MapAddPA4(SellerInit(0), FirstBuyer(1), LastBuyer(n), (lambda pa: PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
  }
}

procedure {:atomic} {:layer 2} {:IS "MAIN2", "INV1"} {:elim "FirstBuyerInit"} MAIN1({:linear_in "pid"} pids: [int]bool) returns ({:pending_async "SellerInit", "FirstBuyerInit", "MiddleBuyer", "LastBuyer"} PAs: [PA]int) {
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  PAs := MapAddPA4(SellerInit(0), FirstBuyerInit(1), LastBuyer(n), (lambda pa: PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
}

procedure {:atomic} {:layer 2, 3} SellerInit({:linear_in "pid"} pid: int) returns ({:pending_async "SellerFinish"} PAs: [PA]int)
  modifies ReqCH, QuoteCH;
{
  assert sellerID(pid);
  assume ReqCH > 0;
  ReqCH := ReqCH - 1;
  QuoteCH := (lambda i: int :: (lambda q: int :: if buyerID(i) && q == price then QuoteCH[i][q] + 1 else QuoteCH[i][q]));
  PAs := SingletonPA(SellerFinish(pid));
}

procedure {:atomic} {:layer 2, 5} SellerFinish({:linear_in "pid"} pid: int)
  modifies DecCH;
{
  var dec: bool;

  assert sellerID(pid);
  assert DecCH[true] > 0 ==> sum(contribution, 1, n) == price;
  assume DecCH[dec] > 0;
  DecCH[dec] := DecCH[dec] - 1;
}

procedure {:atomic} {:layer 2, 4} FirstBuyerInit({:linear_in "pid"} pid: int) returns ({:pending_async "FirstBuyer"} PAs: [PA]int)
  modifies ReqCH;
{
  assert firstBuyerID(pid);
  ReqCH := ReqCH + 1;
  PAs := SingletonPA(FirstBuyer(pid));
}

procedure {:atomic} {:layer 2, 4} FirstBuyer({:linear_in "pid"} pid: int)
  modifies QuoteCH, RemCH, contribution;
{
  var rem: int;
  var amount: int;

  assert firstBuyerID(pid);
  assert (forall q: int :: QuoteCH[pid][q] > 0 ==> q == price);
  assume QuoteCH[pid][price] > 0;
  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;
  rem := price;
  if (*) {
    amount := min(wallet, rem);
  } else {
    amount := 0;
  }
  contribution[pid] := amount;
  rem := rem - amount;
  RemCH[nextBuyer(pid)][rem] := RemCH[nextBuyer(pid)][rem] + 1;
}

procedure {:atomic} {:layer 2, 4} MiddleBuyer({:linear_in "pid"} pid: int)
  modifies QuoteCH, RemCH, contribution;
{
  var rem: int;
  var amount: int;

  assert middleBuyerID(pid);
  assert (forall q: int :: QuoteCH[pid][q] > 0 ==> q == price);
  assert (forall r: int :: RemCH[pid][r] > 0 ==> 0 <= r && r <= price);
  assume QuoteCH[pid][price] > 0;
  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;
  assume RemCH[pid][rem] > 0;
  RemCH[pid][rem] := RemCH[pid][rem] - 1;
  if (*) {
    amount := min(wallet, rem);
  } else {
    amount := 0;
  }
  contribution[pid] := amount;
  rem := rem - amount;
  RemCH[nextBuyer(pid)][rem] := RemCH[nextBuyer(pid)][rem] + 1;
}

procedure {:atomic} {:layer 2, 4} LastBuyer({:linear_in "pid"} pid: int)
  modifies QuoteCH, RemCH, DecCH, contribution;
{
  var rem: int;
  var amount: int;

  assert lastBuyerID(pid);
  assert (forall q: int :: QuoteCH[pid][q] > 0 ==> q == price);
  assert (forall r: int :: RemCH[pid][r] > 0 ==> 0 <= r && r <= price);
  assume QuoteCH[pid][price] > 0;
  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;
  assume RemCH[pid][rem] > 0;
  RemCH[pid][rem] := RemCH[pid][rem] - 1;
  if (*) {
    amount := min(wallet, rem);
  } else {
    amount := 0;
  }
  contribution[pid] := amount;
  if (amount == rem) {
    DecCH[true] := DecCH[true] + 1;
  } else {
    DecCH[false] := DecCH[false] + 1;
  }
}

procedure {:yields} {:layer 1} {:refines "MAIN1"} main({:linear_in "pid"} pids: [int]bool)
  requires {:layer 1} Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
{
  var i: int;
  var {:pending_async} {:layer 1} PAs: [PA]int;
  var {:linear "pid"} pid: int;
  var {:linear "pid"} pids': [int]bool;

  pids' := pids;
  call pid, pids' := linear_transfer(0, pids');
  async call sellerInit(pid);
  call pid, pids' := linear_transfer(1, pids');
  async call firstBuyerInit(pid);
  call pid, pids' := linear_transfer(n, pids');
  async call lastBuyer(pid);
  i := 2;
  while (i < n)
    invariant {:layer 1} {:cooperates} true;
    invariant {:layer 1} 2 <= i && i <= n;
    invariant {:layer 1} (forall ii: int :: middleBuyerID(ii) && ii >= i ==> pids'[ii]);
    invariant {:layer 1} PAs == MapAddPA4(SellerInit(0), FirstBuyerInit(1), LastBuyer(n), (lambda pa: PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) && pid#MiddleBuyer(pa) < i then 1 else 0));
  {
    call pid, pids' := linear_transfer(i, pids');
    async call middleBuyer(pid);
    i := i + 1;
  }
}

procedure {:yields} {:layer 1} {:refines "SellerInit"} sellerInit({:linear_in "pid"} pid: int)
  requires {:layer 1} sellerID(pid);
{
  var i: int;
  var {:layer 1} old_QuoteCH: [int][int]int;

  call old_QuoteCH := Snapshot_QuoteCH();
  call receive_req();
  i := 1;
  while (i <= n)
    invariant {:layer 1} {:cooperates} true;
    invariant {:layer 1} 1 <= i && i <= n + 1;
    invariant {:layer 1} QuoteCH == (lambda ii: int :: (lambda q: int :: if buyerID(ii) && ii < i && q == price then old_QuoteCH[ii][q] + 1 else old_QuoteCH[ii][q]));
  {
    call send_quote(i, price);
    i := i + 1;
  }
  async call sellerFinish(pid);
}

procedure {:yields} {:layer 1} {:refines "SellerFinish"} sellerFinish({:linear_in "pid"} pid: int)
  requires {:layer 1} sellerID(pid);
{
  var d: bool;

  call d := receive_dec();
  if (d) {
    call assert_sum();
  }
}

procedure {:yields} {:layer 1} {:refines "FirstBuyerInit"} firstBuyerInit({:linear_in "pid"} pid: int)
  requires {:layer 1} firstBuyerID(pid);
{
  call send_req();
  async call firstBuyer(pid);
}

procedure {:yields} {:layer 1} {:refines "FirstBuyer"} firstBuyer({:linear_in "pid"} pid: int)
  requires {:layer 1} firstBuyerID(pid);
{
  var q: int;
  var amount: int;

  call q := receive_quote(pid);
  if (*) {
    amount := min(wallet, q);
  } else {
    amount := 0;
  }
  call set_contribution(pid, amount);
  call send_rem(nextBuyer(pid), q - amount);
}

procedure {:yields} {:layer 1} {:refines "MiddleBuyer"} middleBuyer({:linear_in "pid"} pid: int)
  requires {:layer 1} middleBuyerID(pid);
{
  var q: int;
  var r: int;
  var amount: int;

  call q := receive_quote(pid);
  call r := receive_rem(pid);
  if (*) {
    amount := min(wallet, r);
  } else {
    amount := 0;
  }
  call set_contribution(pid, amount);
  call send_rem(nextBuyer(pid), r - amount);
}

procedure {:yields} {:layer 1} {:refines "LastBuyer"} lastBuyer({:linear_in "pid"} pid: int)
  requires {:layer 1} lastBuyerID(pid);
{
  var q: int;
  var r: int;
  var amount: int;

  call q := receive_quote(pid);
  call r := receive_rem(pid);
  if (*) {
    amount := min(wallet, r);
  } else {
    amount := 0;
  }
  call set_contribution(pid, amount);
  call send_dec(amount == r);
}

procedure {:intro} {:layer 1} Snapshot_QuoteCH() returns (snapshot: [int][int]int) {
  snapshot := QuoteCH;
}

procedure {:atomic} {:layer 1} SET_CONTRIBUTION({:linear "pid"} pid: int, c: int)
  modifies contribution;
{
  contribution[pid] := c;
}

procedure {:atomic} {:layer 1} ASSERT_SUM() {
  assert sum(contribution, 1, n) == price;
}

procedure {:left} {:layer 1} SEND_REQ()
  modifies ReqCH;
{
  ReqCH := ReqCH + 1;
}

procedure {:right} {:layer 1} RECEIVE_REQ()
  modifies ReqCH;
{
  assume ReqCH > 0;
  ReqCH := ReqCH - 1;
}

procedure {:left} {:layer 1} SEND_QUOTE(pid: int, q: int)
  modifies QuoteCH;
{
  QuoteCH[pid][q] := QuoteCH[pid][q] + 1;
}

procedure {:right} {:layer 1} RECEIVE_QUOTE(pid: int) returns (q: int)
  modifies QuoteCH;
{
  assume QuoteCH[pid][q] > 0;
  QuoteCH[pid][q] := QuoteCH[pid][q] - 1;
}

procedure {:left} {:layer 1} SEND_REM(pid: int, r: int)
  modifies RemCH;
{
  RemCH[pid][r] := RemCH[pid][r] + 1;
}

procedure {:right} {:layer 1} RECEIVE_REM(pid: int) returns (r: int)
  modifies RemCH;
{
  assume RemCH[pid][r] > 0;
  RemCH[pid][r] := RemCH[pid][r] - 1;
}

procedure {:left} {:layer 1} SEND_DEC(d: bool)
  modifies DecCH;
{
  DecCH[d] := DecCH[d] + 1;
}

procedure {:right} {:layer 1} RECEIVE_DEC() returns (d: bool)
  modifies DecCH;
{
  assume DecCH[d] > 0;
  DecCH[d] := DecCH[d] - 1;
}

procedure {:yields} {:layer 0} {:refines "SET_CONTRIBUTION"} set_contribution({:linear "pid"} pid: int, c: int);

procedure {:yields} {:layer 0} {:refines "ASSERT_SUM"} assert_sum();

procedure {:yields} {:layer 0} {:refines "SEND_REQ"} send_req();

procedure {:yields} {:layer 0} {:refines "RECEIVE_REQ"} receive_req();

procedure {:yields} {:layer 0} {:refines "SEND_QUOTE"} send_quote(pid: int, q: int);

procedure {:yields} {:layer 0} {:refines "RECEIVE_QUOTE"} receive_quote(pid: int) returns (q: int);

procedure {:yields} {:layer 0} {:refines "SEND_REM"} send_rem(pid: int, r: int);

procedure {:yields} {:layer 0} {:refines "RECEIVE_REM"} receive_rem(pid: int) returns (r: int);

procedure {:yields} {:layer 0} {:refines "SEND_DEC"} send_dec(d: bool);

procedure {:yields} {:layer 0} {:refines "RECEIVE_DEC"} receive_dec() returns (d: bool);

procedure {:both} {:layer 1} LINEAR_TRANSFER(i: int, {:linear_in "pid"} pids: [int]bool) returns ({:linear "pid"} p: int, {:linear "pid"} pids': [int]bool) {
  assert pids[i];
  p := i;
  pids' := pids[i := false];
}

procedure {:yields} {:layer 0} {:refines "LINEAR_TRANSFER"} linear_transfer(i: int, {:linear_in "pid"} pids: [int]bool) returns ({:linear "pid"} p: int, {:linear "pid"} pids': [int]bool);

[Input - ../../vendor/boogie/Test/civl/inductive-sequentialization/NBuyer.bpl]
// RUN: %boogie "%s" > "%t"
// RUN: %diff "%s.expect" "%t"

type {:linear "pid"} Pid = int;
const n:int;      // Number of buyers
const price:int;  // Item price
const wallet:int; // Available money for each buyer

axiom n > 1 && wallet >= 0 && price >= 0;

var {:layer 0,6} contribution:[int]int; // Contribution of each node (initially 0)

var {:layer 0,6} ReqCH:int;             // Channel of the seller for request messages from the first buyer
var {:layer 0,6} QuoteCH:[int][int]int; // Channel of the buyers for quote messages from the seller
var {:layer 0,6} RemCH:[int][int]int;   // Channel of the buyers for remaining amount messages from other buyers
var {:layer 0,6} DecCH:[bool]int;       // Channel of the seller for receiving final decision message from the last buyer

function {:inline} sellerID (pid:int) : bool { pid == 0 }
function {:inline} buyerID (pid:int) : bool { 1 <= pid && pid <= n }
function {:inline} firstBuyerID (pid:int) : bool { pid == 1 }
function {:inline} middleBuyerID (pid:int) : bool { 1 < pid && pid < n }
function {:inline} lastBuyerID (pid:int) : bool { pid == n }
function {:inline} nextBuyer(pid:int) : int { pid + 1 }

function {:inline} min (x:int, y:int) : int {if x < y then x else y}

type {:pending_async}{:datatype} PA;
function {:constructor} FirstBuyerInit(pid:int) : PA;
function {:constructor} FirstBuyer(pid:int) : PA;
function {:constructor} MiddleBuyer(pid:int) : PA;
function {:constructor} LastBuyer(pid:int) : PA;
function {:constructor} SellerInit(pid:int) : PA;
function {:constructor} SellerFinish(pid:int) : PA;

function {:inline} NoPAs () : [PA]int
{ (lambda pa:PA :: 0) }

function {:inline} SingletonPA (pa:PA) : [PA]int
{ NoPAs()[pa := 1] }

function {:builtin "MapAdd"} MapAddPA([PA]int, [PA]int) : [PA]int;
function MapAddPA3(a:PA, b:PA, c:[PA]int) : [PA]int
{ MapAddPA(SingletonPA(a), MapAddPA(SingletonPA(b), c)) }
function MapAddPA4(a:PA, b:PA, c:PA, d:[PA]int) : [PA]int
{ MapAddPA(SingletonPA(a), MapAddPA(SingletonPA(b), MapAddPA(SingletonPA(c), d))) }

function sum(A:[int]int, i:int, j:int) : int
{
  if j < i then 0 else
  if i == j then A[i] else
  sum(A, i, j-1) + A[j]
}

axiom (forall A:[int]int, k:int, k':int, v:int :: k' > k && k > 0 ==> sum(A[k' := v], 1, k) == sum(A, 1, k));
axiom (forall A:[int]int, B:[int]int, i:int, j:int :: i <= j && (forall l:int :: i <= l && l <= j ==> A[l] == B[l]) ==> sum(A, i, j) == sum(B, i, j));

////////////////////////////////////////////////////////////////////////////////

function {:inline} Init(pids:[int]bool, ReqCH:int, QuoteCH:[int][int]int,
  RemCH:[int][int]int, DecCH:[bool]int, contribution:[int]int) : bool
{
  pids == MapConst(true) &&
  ReqCH == 0 &&
  QuoteCH == (lambda i:int :: (lambda q:int :: 0)) &&
  RemCH == (lambda i:int :: (lambda r:int :: 0)) &&
  DecCH == (lambda b:bool :: 0) &&
  contribution == (lambda i:int :: 0)
}

////////////////////////////////////////////////////////////////////////////////

procedure {:atomic}{:layer 6}
MAIN5 ({:linear_in "pid"} pids:[int]bool)
modifies contribution;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  havoc contribution;
}

procedure {:IS_invariant}{:layer 5}
INV4 ({:linear_in "pid"} pids:[int]bool)
returns ({:pending_async "SellerFinish"} PAs:[PA]int)
modifies DecCH, contribution;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  havoc contribution;
  if (*)
  {
    DecCH := (lambda b:bool :: if b == (sum(contribution, 1, n) == price) then 1 else 0);
    PAs := SingletonPA(SellerFinish(0));
  }
  else
  {
    PAs := NoPAs();
  }
}

procedure {:IS_abstraction}{:layer 5}
SellerFinish' ({:linear_in "pid"} pid:int)
modifies DecCH;
{
  var dec:bool;
  assert sellerID(pid);
  assert DecCH == (lambda b:bool :: if b == (sum(contribution, 1, n) == price) then 1 else 0);
  dec := (sum(contribution, 1, n) == price);
  DecCH[dec] := DecCH[dec] - 1;
}

////////////////////////////////////////////////////////////////////////////////

procedure {:atomic}{:layer 5}
{:IS "MAIN5","INV4"}{:elim "SellerFinish","SellerFinish'"}
MAIN4 ({:linear_in "pid"} pids:[int]bool)
returns ({:pending_async "SellerFinish"} PAs:[PA]int)
modifies DecCH, contribution;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  havoc contribution;
  DecCH := (lambda b:bool :: if b == (sum(contribution, 1, n) == price) then 1 else 0);
  PAs := SingletonPA(SellerFinish(0));
}

procedure {:IS_invariant}{:layer 4}
INV3 ({:linear_in "pid"} pids:[int]bool)
returns ({:pending_async "SellerFinish","FirstBuyer","MiddleBuyer","LastBuyer"} PAs:[PA]int, {:choice} choice:PA)
modifies QuoteCH, RemCH, DecCH, contribution;
{
  var {:pool "INV3"} k: int;

  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);

  havoc contribution;

  if (*)
  {
    QuoteCH := (lambda i:int :: (lambda q:int :: if buyerID(i) && q == price then 1 else 0));
    PAs := MapAddPA4(SellerFinish(0), FirstBuyer(1), LastBuyer(n), (lambda pa:PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
    choice := FirstBuyer(1);
  }
  else if (*)
  {
    assume
      {:add_to_pool "INV3", k, k+1}
      1 <= k && k < n && 0 <= sum(contribution, 1, k) && sum(contribution, 1, k) <= price;
    QuoteCH := (lambda i:int :: (lambda q:int :: if buyerID(i) && i > k && q == price then 1 else 0));
    RemCH := (lambda i:int :: (lambda r:int :: if i == k+1 && r == price - sum(contribution, 1, k) then 1 else 0));
    PAs := MapAddPA3(SellerFinish(0), LastBuyer(n), (lambda pa:PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) && pid#MiddleBuyer(pa) > k then 1 else 0));
    choice := if lastBuyerID(k+1) then LastBuyer(k+1) else MiddleBuyer(k+1);
  }
  else if (*)
  {
    QuoteCH := (lambda i:int :: (lambda q:int :: if lastBuyerID(i) && q == price then 1 else 0));
    assume 0 <= sum(contribution, 1, n-1) && sum(contribution, 1, n-1) <= price;
    RemCH := (lambda i:int :: (lambda r:int :: if i == n && r == price - sum(contribution, 1, n-1) then 1 else 0));
    PAs := MapAddPA(SingletonPA(SellerFinish(0)), SingletonPA(LastBuyer(n)));
    choice := LastBuyer(n);
  }
  else
  {
    DecCH := (lambda b:bool :: if b == (sum(contribution, 1, n) == price) then 1 else 0);
    PAs := SingletonPA(SellerFinish(0));
  }
}

procedure {:IS_abstraction}{:layer 4}
FirstBuyer' ({:linear_in "pid"} pid:int)
modifies QuoteCH, RemCH, contribution;
{
  var rem:int;
  var amount:int;

  assert firstBuyerID(pid);
  assert (forall q:int :: QuoteCH[pid][q] > 0 ==> q == price);

  assert DecCH == (lambda b:bool :: 0);
  assert (forall i:int :: i != pid ==> RemCH[i] == (lambda r:int :: 0));

  assert QuoteCH[pid][price] > 0;
  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;

  rem := price;
  if (*) { amount := min(wallet, rem); } else { amount := 0; }
  contribution[pid] := amount;
  rem := rem - amount;
  RemCH[nextBuyer(pid)][rem] := RemCH[nextBuyer(pid)][rem] + 1;
}

procedure {:IS_abstraction}{:layer 4}
MiddleBuyer' ({:linear_in "pid"} pid:int)
modifies QuoteCH, RemCH, contribution;
{
  var rem:int;
  var amount:int;

  assert middleBuyerID(pid);
  assert (forall q:int :: QuoteCH[pid][q] > 0 ==> q == price);
  assert (forall r:int :: RemCH[pid][r] > 0 ==> 0 <= r && r <= price);
  assert (forall r:int :: RemCH[pid][r] > 0 ==> r == price - sum(contribution, 1, pid - 1));
  assert RemCH[pid][price - sum(contribution, 1, pid - 1)] > 0;
  assert (exists r:int :: RemCH[pid][r] > 0);
  assert DecCH == (lambda b:bool :: 0);
  assert (forall i:int :: i < pid ==> QuoteCH[i] == (lambda r:int :: 0));
  assert (forall i:int :: i != pid ==> RemCH[i] == (lambda r:int :: 0));

  assert QuoteCH[pid][price] > 0;
  assume RemCH[pid][rem] > 0;

  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;
  RemCH[pid][rem] := RemCH[pid][rem] - 1;

  if (*) { amount := min(wallet, rem); } else { amount := 0; }
  contribution[pid] := amount;
  rem := rem - amount;
  RemCH[nextBuyer(pid)][rem] := RemCH[nextBuyer(pid)][rem] + 1;
}

procedure {:IS_abstraction}{:layer 4}
LastBuyer' ({:linear_in "pid"} pid:int)
modifies QuoteCH, RemCH, DecCH, contribution;
{
  var rem:int;
  var amount:int;

  assert lastBuyerID(pid);
  assert (forall q:int :: QuoteCH[pid][q] > 0 ==> q == price);
  assert (forall r:int :: RemCH[pid][r] > 0 ==> 0 <= r && r <= price);
  assert (forall r:int :: RemCH[pid][r] > 0 ==> r == price - sum(contribution, 1, pid - 1));
  assert RemCH[n][price - sum(contribution, 1, n-1)] > 0;
  assert (exists r:int :: RemCH[pid][r] > 0);
  assert DecCH == (lambda b:bool :: 0);
  assert (forall i:int :: i < pid ==> QuoteCH[i] == (lambda r:int :: 0));

  assert QuoteCH[pid][price] > 0;
  assume RemCH[pid][rem] > 0;

  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;
  RemCH[pid][rem] := RemCH[pid][rem] - 1;

  if (*) { amount := min(wallet, rem); } else { amount := 0; }
  contribution[pid] := amount;

  if (amount == rem)
  {
    DecCH[true] := DecCH[true] + 1;
  }
  else
  {
    DecCH[false] := DecCH[false] + 1;
  }
}

////////////////////////////////////////////////////////////////////////////////

procedure {:atomic}{:layer 4}
{:IS "MAIN4","INV3"}{:elim "FirstBuyer","FirstBuyer'"}{:elim "MiddleBuyer","MiddleBuyer'"}{:elim "LastBuyer","LastBuyer'"}
MAIN3 ({:linear_in "pid"} pids:[int]bool)
returns ({:pending_async "SellerFinish","FirstBuyer","MiddleBuyer","LastBuyer"} PAs:[PA]int)
modifies QuoteCH;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  QuoteCH := (lambda i:int :: (lambda q:int :: if buyerID(i) && q == price then 1 else 0));
  PAs := MapAddPA4(SellerFinish(0), FirstBuyer(1), LastBuyer(n), (lambda pa:PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
}

procedure {:IS_invariant}{:layer 3}
INV2 ({:linear_in "pid"} pids:[int]bool)
returns ({:pending_async "SellerInit","SellerFinish","FirstBuyer","MiddleBuyer","LastBuyer"} PAs:[PA]int)
modifies ReqCH, QuoteCH;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  if (*)
  {
    ReqCH := 1;
    PAs := MapAddPA4(SellerInit(0), FirstBuyer(1), LastBuyer(n), (lambda pa:PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
  }
  else
  {
    QuoteCH := (lambda i:int :: (lambda q:int :: if buyerID(i) && q == price then 1 else 0));
    PAs := MapAddPA4(SellerFinish(0), FirstBuyer(1), LastBuyer(n), (lambda pa:PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
  }
}

procedure {:atomic}{:layer 3}
SellerInit' ({:linear_in "pid"} pid:int)
returns ({:pending_async "SellerFinish"} PAs:[PA]int)
modifies ReqCH, QuoteCH;
{
  assert sellerID(pid);
  assert QuoteCH == (lambda i:int :: (lambda q:int :: 0)); // To discharge gate failure preservation for FirstBuyer/MiddleBuyer/LastBuyer

  assert ReqCH > 0;
  ReqCH := ReqCH - 1;

  QuoteCH := (lambda i:int :: (lambda q:int :: if buyerID(i) && q == price then QuoteCH[i][q] + 1 else QuoteCH[i][q]));
  PAs := SingletonPA(SellerFinish(pid));
}

////////////////////////////////////////////////////////////////////////////////

procedure {:atomic}{:layer 3}
{:IS "MAIN3","INV2"}{:elim "SellerInit","SellerInit'"}
MAIN2 ({:linear_in "pid"} pids:[int]bool)
returns ({:pending_async "SellerInit","FirstBuyer","MiddleBuyer","LastBuyer"} PAs:[PA]int)
modifies ReqCH;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  ReqCH := 1;
  PAs := MapAddPA4(SellerInit(0), FirstBuyer(1), LastBuyer(n), (lambda pa:PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
}

procedure {:IS_invariant}{:layer 2}
INV1 ({:linear_in "pid"} pids:[int]bool)
returns ({:pending_async "SellerInit","FirstBuyerInit","FirstBuyer","MiddleBuyer","LastBuyer"} PAs:[PA]int)
modifies ReqCH;
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  if (*)
  {
    PAs := MapAddPA4(SellerInit(0), FirstBuyerInit(1), LastBuyer(n), (lambda pa:PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
  }
  else
  {
    ReqCH := 1;
    PAs := MapAddPA4(SellerInit(0), FirstBuyer(1), LastBuyer(n), (lambda pa:PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
  }
}

////////////////////////////////////////////////////////////////////////////////

procedure {:atomic}{:layer 2}
{:IS "MAIN2","INV1"}{:elim "FirstBuyerInit"}
MAIN1 ({:linear_in "pid"} pids:[int]bool)
returns ({:pending_async "SellerInit","FirstBuyerInit","MiddleBuyer","LastBuyer"} PAs:[PA]int)
{
  assert Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
  PAs := MapAddPA4(SellerInit(0), FirstBuyerInit(1), LastBuyer(n), (lambda pa:PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) then 1 else 0));
}

procedure {:atomic}{:layer 2,3}
SellerInit ({:linear_in "pid"} pid:int)
returns ({:pending_async "SellerFinish"} PAs:[PA]int)
modifies ReqCH, QuoteCH;
{
  assert sellerID(pid);

  assume ReqCH > 0;
  ReqCH := ReqCH - 1;

  QuoteCH := (lambda i:int :: (lambda q:int :: if buyerID(i) && q == price then QuoteCH[i][q] + 1 else QuoteCH[i][q]));
  PAs := SingletonPA(SellerFinish(pid));
}

procedure {:atomic}{:layer 2,5}
SellerFinish ({:linear_in "pid"} pid:int)
modifies DecCH;
{
  var dec:bool;
  assert sellerID(pid);
  assert DecCH[true] > 0 ==> sum(contribution, 1, n) == price;

  assume DecCH[dec] > 0;
  DecCH[dec] := DecCH[dec] - 1;
}

procedure {:atomic}{:layer 2,4}
FirstBuyerInit ({:linear_in "pid"} pid:int)
returns ({:pending_async "FirstBuyer"} PAs:[PA]int)
modifies ReqCH;
{
  assert firstBuyerID(pid);
  ReqCH := ReqCH + 1;
  PAs := SingletonPA(FirstBuyer(pid));
}

procedure {:atomic}{:layer 2,4}
FirstBuyer ({:linear_in "pid"} pid:int)
modifies QuoteCH, RemCH, contribution;
{
  var rem:int;
  var amount:int;

  assert firstBuyerID(pid);
  assert (forall q:int :: QuoteCH[pid][q] > 0 ==> q == price);

  assume QuoteCH[pid][price] > 0;
  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;

  rem := price;
  if (*) { amount := min(wallet, rem); } else { amount := 0; }
  contribution[pid] := amount;
  rem := rem - amount;
  RemCH[nextBuyer(pid)][rem] := RemCH[nextBuyer(pid)][rem] + 1;
}

procedure {:atomic}{:layer 2,4}
MiddleBuyer ({:linear_in "pid"} pid:int)
modifies QuoteCH, RemCH, contribution;
{
  var rem:int;
  var amount:int;

  assert middleBuyerID(pid);
  assert (forall q:int :: QuoteCH[pid][q] > 0 ==> q == price);
  assert (forall r:int :: RemCH[pid][r] > 0 ==> 0 <= r && r <= price);

  assume QuoteCH[pid][price] > 0;
  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;

  assume RemCH[pid][rem] > 0;
  RemCH[pid][rem] := RemCH[pid][rem] - 1;

  if (*) { amount := min(wallet, rem); } else { amount := 0; }
  contribution[pid] := amount;
  rem := rem - amount;
  RemCH[nextBuyer(pid)][rem] := RemCH[nextBuyer(pid)][rem] + 1;
}

procedure {:atomic}{:layer 2,4}
LastBuyer ({:linear_in "pid"} pid:int)
modifies QuoteCH, RemCH, DecCH, contribution;
{
  var rem:int;
  var amount:int;

  assert lastBuyerID(pid);
  assert (forall q:int :: QuoteCH[pid][q] > 0 ==> q == price);
  assert (forall r:int :: RemCH[pid][r] > 0 ==> 0 <= r && r <= price);

  assume QuoteCH[pid][price] > 0;
  QuoteCH[pid][price] := QuoteCH[pid][price] - 1;

  assume RemCH[pid][rem] > 0;
  RemCH[pid][rem] := RemCH[pid][rem] - 1;

  if (*) { amount := min(wallet, rem); } else { amount := 0; }
  contribution[pid] := amount;

  if (amount == rem)
  {
      DecCH[true] := DecCH[true] + 1;
  }
  else
  {
    DecCH[false] := DecCH[false] + 1;
  }
}

////////////////////////////////////////////////////////////////////////////////

procedure {:yields}{:layer 1}{:refines "MAIN1"}
main ({:linear_in "pid"} pids:[int]bool)
requires {:layer 1} Init(pids, ReqCH, QuoteCH, RemCH, DecCH, contribution);
{
  var i:int;
  var {:pending_async}{:layer 1} PAs:[PA]int;
  var {:linear "pid"} pid:int;
  var {:linear "pid"} pids':[int]bool;

  pids' := pids;
  call pid, pids' := linear_transfer(0, pids');
  async call sellerInit(pid);
  call pid, pids' := linear_transfer(1, pids');
  async call firstBuyerInit(pid);
  call pid, pids' := linear_transfer(n, pids');
  async call lastBuyer(pid);
  i := 2;
  while (i < n)
  invariant {:layer 1}{:cooperates} true;
  invariant {:layer 1} 2 <= i && i <= n;
  invariant {:layer 1} (forall ii:int :: middleBuyerID(ii) && ii >= i ==> pids'[ii]);
  invariant {:layer 1} PAs == MapAddPA4(SellerInit(0), FirstBuyerInit(1), LastBuyer(n), (lambda pa:PA :: if is#MiddleBuyer(pa) && middleBuyerID(pid#MiddleBuyer(pa)) && pid#MiddleBuyer(pa) < i then 1 else 0));
  {
    call pid, pids' := linear_transfer(i, pids');
    async call middleBuyer(pid);
    i := i + 1;
  }
}

procedure {:yields}{:layer 1}{:refines "SellerInit"}
sellerInit ({:linear_in "pid"} pid:int)
requires {:layer 1} sellerID(pid);
{
  var i:int;
  var {:layer 1} old_QuoteCH:[int][int]int;

  call old_QuoteCH := Snapshot_QuoteCH();
  call receive_req();
  i := 1;
  while (i <= n)
  invariant {:layer 1}{:cooperates} true;
  invariant {:layer 1} 1 <= i && i <= n+1;
  invariant {:layer 1} QuoteCH == (lambda ii:int :: (lambda q:int :: if buyerID(ii) && ii < i && q == price then old_QuoteCH[ii][q] + 1 else old_QuoteCH[ii][q]));
  {
    call send_quote(i, price);
    i := i + 1;
  }
  async call sellerFinish(pid);
}

procedure {:yields}{:layer 1}{:refines "SellerFinish"}
sellerFinish ({:linear_in "pid"} pid:int)
requires {:layer 1} sellerID(pid);
{
  var d:bool;

  call d := receive_dec();
  if (d)
  {
    call assert_sum();
  }
}

procedure {:yields}{:layer 1}{:refines "FirstBuyerInit"}
firstBuyerInit ({:linear_in "pid"} pid:int)
requires {:layer 1} firstBuyerID(pid);
{
  call send_req();
  async call firstBuyer(pid);
}


procedure {:yields}{:layer 1}{:refines "FirstBuyer"}
firstBuyer ({:linear_in "pid"} pid:int)
requires {:layer 1} firstBuyerID(pid);
{
  var q:int;
  var amount:int;

  call q := receive_quote(pid);
  if (*) { amount := min(wallet, q); } else { amount := 0; }
  call set_contribution(pid, amount);
  call send_rem(nextBuyer(pid), q - amount);
}

procedure {:yields}{:layer 1}{:refines "MiddleBuyer"}
middleBuyer ({:linear_in "pid"} pid:int)
requires {:layer 1} middleBuyerID(pid);
{
  var q:int;
  var r:int;
  var amount:int;

  call q := receive_quote(pid);
  call r := receive_rem(pid);
  if (*) { amount := min(wallet, r); } else { amount := 0; }
  call set_contribution(pid, amount);
  call send_rem(nextBuyer(pid), r - amount);
}

procedure {:yields}{:layer 1}{:refines "LastBuyer"}
lastBuyer ({:linear_in "pid"} pid:int)
requires {:layer 1} lastBuyerID(pid);
{
  var q:int;
  var r:int;
  var amount:int;

  call q := receive_quote(pid);
  call r := receive_rem(pid);
  if (*) { amount := min(wallet, r); } else { amount := 0; }
  call set_contribution(pid, amount);
  call send_dec(amount == r);
}

procedure {:intro}{:layer 1} Snapshot_QuoteCH() returns (snapshot:[int][int]int)
{
  snapshot := QuoteCH;
}

////////////////////////////////////////////////////////////////////////////////

procedure {:atomic}{:layer 1} SET_CONTRIBUTION({:linear "pid"} pid:int, c:int)
modifies contribution;
{
  contribution[pid] := c;
}

procedure {:atomic}{:layer 1} ASSERT_SUM()
{
  assert sum(contribution, 1, n) == price;
}

procedure {:left}{:layer 1} SEND_REQ()
modifies ReqCH;
{
  ReqCH := ReqCH + 1;
}

procedure {:right}{:layer 1} RECEIVE_REQ()
modifies ReqCH;
{
  assume ReqCH > 0;
  ReqCH := ReqCH - 1;
}

procedure {:left}{:layer 1} SEND_QUOTE(pid:int, q:int)
modifies QuoteCH;
{
  QuoteCH[pid][q] := QuoteCH[pid][q] + 1;
}

procedure {:right}{:layer 1} RECEIVE_QUOTE(pid:int) returns (q:int)
modifies QuoteCH;
{
  assume QuoteCH[pid][q] > 0;
  QuoteCH[pid][q] := QuoteCH[pid][q] - 1;
}

procedure {:left}{:layer 1} SEND_REM(pid:int, r:int)
modifies RemCH;
{
  RemCH[pid][r] := RemCH[pid][r] + 1;
}

procedure {:right}{:layer 1} RECEIVE_REM(pid:int) returns (r:int)
modifies RemCH;
{
  assume RemCH[pid][r] > 0;
  RemCH[pid][r] := RemCH[pid][r] - 1;
}

procedure {:left}{:layer 1} SEND_DEC(d:bool)
modifies DecCH;
{
  DecCH[d] := DecCH[d] + 1;
}

procedure {:right}{:layer 1} RECEIVE_DEC() returns (d:bool)
modifies DecCH;
{
  assume DecCH[d] > 0;
  DecCH[d] := DecCH[d] - 1;
}

procedure {:yields}{:layer 0}{:refines "SET_CONTRIBUTION"} set_contribution({:linear "pid"} pid:int, c:int);
procedure {:yields}{:layer 0}{:refines "ASSERT_SUM"} assert_sum();
procedure {:yields}{:layer 0}{:refines "SEND_REQ"} send_req();
procedure {:yields}{:layer 0}{:refines "RECEIVE_REQ"} receive_req();
procedure {:yields}{:layer 0}{:refines "SEND_QUOTE"} send_quote(pid:int, q:int);
procedure {:yields}{:layer 0}{:refines "RECEIVE_QUOTE"} receive_quote(pid:int) returns (q:int);
procedure {:yields}{:layer 0}{:refines "SEND_REM"} send_rem(pid:int, r:int);
procedure {:yields}{:layer 0}{:refines "RECEIVE_REM"} receive_rem(pid:int) returns (r:int);
procedure {:yields}{:layer 0}{:refines "SEND_DEC"} send_dec(d:bool);
procedure {:yields}{:layer 0}{:refines "RECEIVE_DEC"} receive_dec() returns (d:bool);

procedure {:both}{:layer 1}
LINEAR_TRANSFER(i:int, {:linear_in "pid"} pids:[int]bool)
returns ({:linear "pid"} p:int, {:linear "pid"} pids':[int]bool)
{
  assert pids[i];
  p := i;
  pids' := pids[i := false];
}

procedure {:yields}{:layer 0}{:refines "LINEAR_TRANSFER"} linear_transfer(i:int, {:linear_in "pid"} pids:[int]bool)
returns ({:linear "pid"} p:int, {:linear "pid"} pids':[int]bool);
