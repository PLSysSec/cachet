---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "p",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [
                                    "a",
                                ],
                                keys: [
                                    Atom(
                                        Int,
                                    ),
                                ],
                                value: App(
                                    TypeApp {
                                        head: "a",
                                        tail: None,
                                    },
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "P",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "p",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "p",
                                            subscripts: [
                                                [
                                                    Nat(
                                                        "13",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "5",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "p",
                                            subscripts: [
                                                [
                                                    Nat(
                                                        "17",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "p",
                                            subscripts: [
                                                [
                                                    Nat(
                                                        "13",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            false,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "p",
                                            subscripts: [
                                                [
                                                    Nat(
                                                        "17",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "8",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Logical(
                                        LogicalExpr {
                                            lhs: Logical(
                                                LogicalExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Rel(
                                                                RelExpr {
                                                                    lhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "p",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Nat(
                                                                                            "13",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: Nat(
                                                                        "5",
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Neg(
                                                                NegExpr {
                                                                    op: Logical,
                                                                    expr: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "p",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Nat(
                                                                                            "13",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "p",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Nat(
                                                                                    "17",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            op: Eq,
                                                            rhs: Nat(
                                                                "8",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            op: And,
                                            rhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "p",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Nat(
                                                                    "17",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "p",
                                            ),
                                            op: Eq,
                                            rhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "p",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Nat(
                                                                    "28",
                                                                ),
                                                            ],
                                                            value: Some(
                                                                Var(
                                                                    "p",
                                                                ),
                                                            ),
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "q",
                        ],
                        type_: Map(
                            MapType {
                                type_params: [
                                    "a",
                                    "b",
                                ],
                                keys: [
                                    Atom(
                                        Int,
                                    ),
                                ],
                                value: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "a",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: App(
                                            TypeApp {
                                                head: "b",
                                                tail: None,
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Q",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "q",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "q",
                                            subscripts: [
                                                [
                                                    Nat(
                                                        "17",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "q",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Nat(
                                                                "17",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                    ArraySubscript {
                                                        keys: [
                                                            BoolLit(
                                                                true,
                                                            ),
                                                        ],
                                                        value: Some(
                                                            Nat(
                                                                "13",
                                                            ),
                                                        ),
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "q",
                                            subscripts: [
                                                [
                                                    Nat(
                                                        "17",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "q",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Nat(
                                                                "17",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                    ArraySubscript {
                                                        keys: [
                                                            BoolLit(
                                                                true,
                                                            ),
                                                        ],
                                                        value: Some(
                                                            BoolLit(
                                                                false,
                                                            ),
                                                        ),
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "q",
                                            subscripts: [
                                                [
                                                    Nat(
                                                        "16",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "q",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Nat(
                                                                "17",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                    ArraySubscript {
                                                        keys: [
                                                            BoolLit(
                                                                true,
                                                            ),
                                                        ],
                                                        value: Some(
                                                            Nat(
                                                                "14",
                                                            ),
                                                        ),
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Logical(
                                        LogicalExpr {
                                            lhs: Rel(
                                                RelExpr {
                                                    lhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "q",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Nat(
                                                                            "17",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                                ArraySubscript {
                                                                    keys: [
                                                                        BoolLit(
                                                                            true,
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: Nat(
                                                        "13",
                                                    ),
                                                },
                                            ),
                                            op: And,
                                            rhs: Neg(
                                                NegExpr {
                                                    op: Logical,
                                                    expr: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "q",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Nat(
                                                                            "17",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                                ArraySubscript {
                                                                    keys: [
                                                                        BoolLit(
                                                                            true,
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "q",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Nat(
                                                                    "17",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                        ArraySubscript {
                                                            keys: [
                                                                BoolLit(
                                                                    true,
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "14",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "R",
                type_params: [],
                var_params: [],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "p",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "p",
                                            subscripts: [
                                                [
                                                    Nat(
                                                        "7",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "28",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "p",
                                            subscripts: [
                                                [
                                                    Nat(
                                                        "5",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "p",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Nat(
                                                                "7",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "p",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Nat(
                                                                    "7",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "28",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "p",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Nat(
                                                                    "6",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "28",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
var p: <a>[int]a;

procedure P()
  modifies p;
{
  p[13] := 5;
  p[17] := true;
  p[13] := false;
  p[17] := 8;
  assert p[13] == 5 && !p[13] && p[17] == 8 && p[17];
  assert p == p[28 := p];
}

var q: <a, b>[int][a]b;

procedure Q()
  modifies q;
{
  q[17] := q[17][true := 13];
  q[17] := q[17][true := false];
  q[16] := q[17][true := 14];
  assert q[17][true] == 13 && !q[17][true];
  assert q[17][true] == 14;
}

procedure R()
  modifies p;
{
  p[7] := 28;
  p[5] := p[7];
  assert p[7] == 28;
  assert p[6] == 28;
}

[Input - ../../vendor/boogie/Test/test21/MapOutputTypeParams.bpl]
// RUN: %boogie -typeEncoding:p -logPrefix:0p "%s" > "%t"
// RUN: %diff "%s.p.expect" "%t"
// RUN: %boogie -typeEncoding:a -logPrefix:0a "%s" > "%t"
// RUN: %diff "%s.a.expect" "%t"



var p : <a>[int]a;

procedure P() returns () modifies p; {
  p[13] := 5;
  p[17] := true;
  p[13] := false;
  p[17] := 8;

  assert p[13] == 5 && !p[13] && p[17] == 8 && p[17];
  assert p == p[28 := p];      // error
}

var q : <a, b>[int][a]b;

procedure Q() returns () modifies q; {
  q[17] := q[17][true := 13];
  q[17] := q[17][true := false];
  q[16] := q[17][true := 14];

  assert q[17][true] == 13 && !q[17][true];
  assert q[17][true] == 14;    // error
}

procedure R() returns () modifies p; {
  p[7] := 28;
  p[5] := p[7];

  assert p[7] == 28;
  assert p[6] == 28;       // error
}
