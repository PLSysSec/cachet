---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "foo",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "x",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "bv32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "r",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "bv32",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "q",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "bv64",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Label(
                                Label {
                                    ident: "block1",
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "r",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BvLit(
                                            BvLit {
                                                n: "17",
                                                width: "32",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "r",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "r",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "r",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Coercion(
                                                                    CoercionExpr {
                                                                        expr: Nat(
                                                                            "32",
                                                                        ),
                                                                        coercions: [
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "r",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Coercion(
                                                                    CoercionExpr {
                                                                        expr: Nat(
                                                                            "32",
                                                                        ),
                                                                        coercions: [
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: BvTerm(
                                                BvTerm {
                                                    lhs: BvLit(
                                                        BvLit {
                                                            n: "0",
                                                            width: "2",
                                                        },
                                                    ),
                                                    rhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "r",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Coercion(
                                                                            CoercionExpr {
                                                                                expr: Nat(
                                                                                    "12",
                                                                                ),
                                                                                coercions: [
                                                                                    Nat(
                                                                                        "0",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            op: Eq,
                                            rhs: BvTerm(
                                                BvTerm {
                                                    lhs: BvLit(
                                                        BvLit {
                                                            n: "0",
                                                            width: "2",
                                                        },
                                                    ),
                                                    rhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "r",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Coercion(
                                                                            CoercionExpr {
                                                                                expr: Nat(
                                                                                    "12",
                                                                                ),
                                                                                coercions: [
                                                                                    Nat(
                                                                                        "0",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "r",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BvTerm(
                                            BvTerm {
                                                lhs: BvLit(
                                                    BvLit {
                                                        n: "17",
                                                        width: "10",
                                                    },
                                                ),
                                                rhs: BvLit(
                                                    BvLit {
                                                        n: "17",
                                                        width: "22",
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "q",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BvLit(
                                            BvLit {
                                                n: "420000000000",
                                                width: "64",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "q",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BvLit(
                                            BvLit {
                                                n: "8444249301319680000",
                                                width: "64",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "q",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        BvLit(
                                            BvLit {
                                                n: "16444249301319680000",
                                                width: "64",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        TransferCmd(
                            Return(
                                ReturnCmd,
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
procedure foo(x: bv32) returns (r: bv32) {
  var q: bv64;

  block1:
  r := 17bv32;
  assert r == r;
  assert r[32 : 0] == r[32 : 0];
  assert 0bv2 ++ r[12 : 0] == 0bv2 ++ r[12 : 0];
  r := 17bv10 ++ 17bv22;
  q := 420000000000bv64;
  q := 8444249301319680000bv64;
  q := 16444249301319680000bv64;
  return;
}

[Input - ../../vendor/boogie/Test/bitvectors/bv1.bpl]
// RUN: %boogie -proverWarnings:1 "%s" > "%t"
// RUN: %diff "%s.expect" "%t"
procedure foo(x : bv32) returns(r : bv32)
{
  var q : bv64;

  block1:
  	r := 17bv32;
	assert r == r;
    assert r[32:0] == r[32:0];
    assert 0bv2 ++ r[12:0] == 0bv2 ++ r[12:0];
    r := 17bv10 ++ 17bv22;
  	// r := 17;
    q := 420000000000bv64;
    q := 8444249301319680000bv64;
    q := 16444249301319680000bv64;
  return;
}
