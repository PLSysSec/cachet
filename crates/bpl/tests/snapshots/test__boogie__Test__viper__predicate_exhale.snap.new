---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Func(
        FuncDecl {
            attrs: [],
            ident: "state",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Heap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Mask",
                    ),
                    type_: App(
                        TypeApp {
                            head: "MaskType",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "Ref",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "Heap",
                        ],
                        type_: App(
                            TypeApp {
                                head: "HeapType",
                                tail: None,
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "null",
                ],
                type_: App(
                    TypeApp {
                        head: "Ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "Field",
                    type_params: [
                        "A",
                        "B",
                    ],
                    type_: None,
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "NormalField",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "HeapType",
                    type_params: [],
                    type_: Some(
                        Map(
                            MapType {
                                type_params: [
                                    "A",
                                    "B",
                                ],
                                keys: [
                                    App(
                                        TypeApp {
                                            head: "Ref",
                                            tail: None,
                                        },
                                    ),
                                    App(
                                        TypeApp {
                                            head: "Field",
                                            tail: Some(
                                                App(
                                                    TypeApp {
                                                        head: "A",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "B",
                                                                    tail: None,
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                ],
                                value: App(
                                    TypeApp {
                                        head: "B",
                                        tail: None,
                                    },
                                ),
                            },
                        ),
                    ),
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "$allocated",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "NormalField",
                                    tail: Some(
                                        AtomApp(
                                            TypeApp {
                                                head: Bool,
                                                tail: None,
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "NormalField",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "Ref",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "Heap",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o",
                                                        ),
                                                        Var(
                                                            "f",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Array(
                                    ArrayExpr {
                                        expr: Var(
                                            "Heap",
                                        ),
                                        subscripts: [
                                            ArraySubscript {
                                                keys: [
                                                    Var(
                                                        "o",
                                                    ),
                                                    Var(
                                                        "$allocated",
                                                    ),
                                                ],
                                                value: None,
                                            },
                                        ],
                                    },
                                ),
                                rhs: Array(
                                    ArrayExpr {
                                        expr: Var(
                                            "Heap",
                                        ),
                                        subscripts: [
                                            ArraySubscript {
                                                keys: [
                                                    Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "Heap",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "o",
                                                                        ),
                                                                        Var(
                                                                            "f",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    Var(
                                                        "$allocated",
                                                    ),
                                                ],
                                                value: None,
                                            },
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "succHeap",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Heap0",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Heap1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "succHeapTrans",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Heap0",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Heap1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "IdenticalOnKnownLocations",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Heap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "ExhaleHeap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Mask",
                    ),
                    type_: App(
                        TypeApp {
                            head: "MaskType",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "IsPredicateField",
            type_params: [
                "A",
                "B",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f_1",
                    ),
                    type_: Atom(
                        Paren(
                            App(
                                TypeApp {
                                    head: "Field",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "A",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "B",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "IsWandField",
            type_params: [
                "A",
                "B",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f_1",
                    ),
                    type_: Atom(
                        Paren(
                            App(
                                TypeApp {
                                    head: "Field",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "A",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "B",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "getPredicateId",
            type_params: [
                "A",
                "B",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f_1",
                    ),
                    type_: Atom(
                        Paren(
                            App(
                                TypeApp {
                                    head: "Field",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "A",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "B",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "A",
                            "B",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "ExhaleHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f_2",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "A",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "B",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "IdenticalOnKnownLocations",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "ExhaleHeap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "ExhaleHeap",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o",
                                                        ),
                                                        Var(
                                                            "f_2",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "IdenticalOnKnownLocations",
                                        args: [
                                            Var(
                                                "Heap",
                                            ),
                                            Var(
                                                "ExhaleHeap",
                                            ),
                                            Var(
                                                "Mask",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Implies(
                                    ImpliesExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "HasDirectPerm",
                                                args: [
                                                    Var(
                                                        "Mask",
                                                    ),
                                                    Var(
                                                        "o",
                                                    ),
                                                    Var(
                                                        "f_2",
                                                    ),
                                                ],
                                            },
                                        ),
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "o",
                                                                    ),
                                                                    Var(
                                                                        "f_2",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Eq,
                                                rhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "ExhaleHeap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "o",
                                                                    ),
                                                                    Var(
                                                                        "f_2",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "C",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "ExhaleHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "pm_f",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "C",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "FrameType",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "IdenticalOnKnownLocations",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "ExhaleHeap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "IsPredicateField",
                                            args: [
                                                Var(
                                                    "pm_f",
                                                ),
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "ExhaleHeap",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "null",
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "PredicateMaskField",
                                                                args: [
                                                                    Var(
                                                                        "pm_f",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "IdenticalOnKnownLocations",
                                        args: [
                                            Var(
                                                "Heap",
                                            ),
                                            Var(
                                                "ExhaleHeap",
                                            ),
                                            Var(
                                                "Mask",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Implies(
                                    ImpliesExpr {
                                        lhs: Logical(
                                            LogicalExpr {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "HasDirectPerm",
                                                        args: [
                                                            Var(
                                                                "Mask",
                                                            ),
                                                            Var(
                                                                "null",
                                                            ),
                                                            Var(
                                                                "pm_f",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: And,
                                                rhs: FuncCall(
                                                    FuncCall {
                                                        target: "IsPredicateField",
                                                        args: [
                                                            Var(
                                                                "pm_f",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "PredicateMaskField",
                                                                            args: [
                                                                                Var(
                                                                                    "pm_f",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Eq,
                                                rhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "ExhaleHeap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "PredicateMaskField",
                                                                            args: [
                                                                                Var(
                                                                                    "pm_f",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "C",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "ExhaleHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "pm_f",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "C",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "FrameType",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "IdenticalOnKnownLocations",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "ExhaleHeap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "ExhaleHeap",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "null",
                                                        ),
                                                        Var(
                                                            "pm_f",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "IsPredicateField",
                                            args: [
                                                Var(
                                                    "pm_f",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "IdenticalOnKnownLocations",
                                        args: [
                                            Var(
                                                "Heap",
                                            ),
                                            Var(
                                                "ExhaleHeap",
                                            ),
                                            Var(
                                                "Mask",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Implies(
                                    ImpliesExpr {
                                        lhs: Logical(
                                            LogicalExpr {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "HasDirectPerm",
                                                        args: [
                                                            Var(
                                                                "Mask",
                                                            ),
                                                            Var(
                                                                "null",
                                                            ),
                                                            Var(
                                                                "pm_f",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: And,
                                                rhs: FuncCall(
                                                    FuncCall {
                                                        target: "IsPredicateField",
                                                        args: [
                                                            Var(
                                                                "pm_f",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        rhs: Quant(
                                            QuantExpr {
                                                kind: ForAll,
                                                body: QuantBody {
                                                    type_params: [
                                                        "A",
                                                        "B",
                                                    ],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "o2",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "Ref",
                                                                            tail: None,
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "f_2",
                                                                    ],
                                                                    type_: Atom(
                                                                        Paren(
                                                                            App(
                                                                                TypeApp {
                                                                                    head: "Field",
                                                                                    tail: Some(
                                                                                        App(
                                                                                            TypeApp {
                                                                                                head: "A",
                                                                                                tail: Some(
                                                                                                    App(
                                                                                                        TypeApp {
                                                                                                            head: "B",
                                                                                                            tail: None,
                                                                                                        },
                                                                                                    ),
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [
                                                        Trigger(
                                                            [
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "ExhaleHeap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "o2",
                                                                                    ),
                                                                                    Var(
                                                                                        "f_2",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    expr: Implies(
                                                        ImpliesExpr {
                                                            lhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "Heap",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "null",
                                                                                ),
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "PredicateMaskField",
                                                                                        args: [
                                                                                            Var(
                                                                                                "pm_f",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o2",
                                                                                ),
                                                                                Var(
                                                                                    "f_2",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "Heap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o2",
                                                                                        ),
                                                                                        Var(
                                                                                            "f_2",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "ExhaleHeap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o2",
                                                                                        ),
                                                                                        Var(
                                                                                            "f_2",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "C",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "ExhaleHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "pm_f",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "C",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "FrameType",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "IdenticalOnKnownLocations",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "ExhaleHeap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "IsWandField",
                                            args: [
                                                Var(
                                                    "pm_f",
                                                ),
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "ExhaleHeap",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "null",
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "WandMaskField",
                                                                args: [
                                                                    Var(
                                                                        "pm_f",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "IdenticalOnKnownLocations",
                                        args: [
                                            Var(
                                                "Heap",
                                            ),
                                            Var(
                                                "ExhaleHeap",
                                            ),
                                            Var(
                                                "Mask",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Implies(
                                    ImpliesExpr {
                                        lhs: Logical(
                                            LogicalExpr {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "HasDirectPerm",
                                                        args: [
                                                            Var(
                                                                "Mask",
                                                            ),
                                                            Var(
                                                                "null",
                                                            ),
                                                            Var(
                                                                "pm_f",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: And,
                                                rhs: FuncCall(
                                                    FuncCall {
                                                        target: "IsWandField",
                                                        args: [
                                                            Var(
                                                                "pm_f",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "WandMaskField",
                                                                            args: [
                                                                                Var(
                                                                                    "pm_f",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Eq,
                                                rhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "ExhaleHeap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "WandMaskField",
                                                                            args: [
                                                                                Var(
                                                                                    "pm_f",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "C",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "ExhaleHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "pm_f",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "C",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "FrameType",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "IdenticalOnKnownLocations",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "ExhaleHeap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "IsWandField",
                                            args: [
                                                Var(
                                                    "pm_f",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "IdenticalOnKnownLocations",
                                        args: [
                                            Var(
                                                "Heap",
                                            ),
                                            Var(
                                                "ExhaleHeap",
                                            ),
                                            Var(
                                                "Mask",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Implies(
                                    ImpliesExpr {
                                        lhs: Logical(
                                            LogicalExpr {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "HasDirectPerm",
                                                        args: [
                                                            Var(
                                                                "Mask",
                                                            ),
                                                            Var(
                                                                "null",
                                                            ),
                                                            Var(
                                                                "pm_f",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: And,
                                                rhs: FuncCall(
                                                    FuncCall {
                                                        target: "IsWandField",
                                                        args: [
                                                            Var(
                                                                "pm_f",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        rhs: Quant(
                                            QuantExpr {
                                                kind: ForAll,
                                                body: QuantBody {
                                                    type_params: [
                                                        "A",
                                                        "B",
                                                    ],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "o2",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "Ref",
                                                                            tail: None,
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "f_2",
                                                                    ],
                                                                    type_: Atom(
                                                                        Paren(
                                                                            App(
                                                                                TypeApp {
                                                                                    head: "Field",
                                                                                    tail: Some(
                                                                                        App(
                                                                                            TypeApp {
                                                                                                head: "A",
                                                                                                tail: Some(
                                                                                                    App(
                                                                                                        TypeApp {
                                                                                                            head: "B",
                                                                                                            tail: None,
                                                                                                        },
                                                                                                    ),
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [
                                                        Trigger(
                                                            [
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "ExhaleHeap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "o2",
                                                                                    ),
                                                                                    Var(
                                                                                        "f_2",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    expr: Implies(
                                                        ImpliesExpr {
                                                            lhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "Heap",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "null",
                                                                                ),
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "WandMaskField",
                                                                                        args: [
                                                                                            Var(
                                                                                                "pm_f",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o2",
                                                                                ),
                                                                                Var(
                                                                                    "f_2",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "Heap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o2",
                                                                                        ),
                                                                                        Var(
                                                                                            "f_2",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "ExhaleHeap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o2",
                                                                                        ),
                                                                                        Var(
                                                                                            "f_2",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "ExhaleHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "IdenticalOnKnownLocations",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "ExhaleHeap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "ExhaleHeap",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o",
                                                        ),
                                                        Var(
                                                            "$allocated",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "IdenticalOnKnownLocations",
                                        args: [
                                            Var(
                                                "Heap",
                                            ),
                                            Var(
                                                "ExhaleHeap",
                                            ),
                                            Var(
                                                "Mask",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Implies(
                                    ImpliesExpr {
                                        lhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "Heap",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "o",
                                                            ),
                                                            Var(
                                                                "$allocated",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                        rhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "ExhaleHeap",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "o",
                                                            ),
                                                            Var(
                                                                "$allocated",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "A",
                            "B",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f_2",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "A",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "B",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "v",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "B",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "Heap",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o",
                                                        ),
                                                        Var(
                                                            "f_2",
                                                        ),
                                                    ],
                                                    value: Some(
                                                        Var(
                                                            "v",
                                                        ),
                                                    ),
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: FuncCall(
                            FuncCall {
                                target: "succHeap",
                                args: [
                                    Var(
                                        "Heap",
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "Heap",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o",
                                                        ),
                                                        Var(
                                                            "f_2",
                                                        ),
                                                    ],
                                                    value: Some(
                                                        Var(
                                                            "v",
                                                        ),
                                                    ),
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "ExhaleHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "IdenticalOnKnownLocations",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "ExhaleHeap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "IdenticalOnKnownLocations",
                                        args: [
                                            Var(
                                                "Heap",
                                            ),
                                            Var(
                                                "ExhaleHeap",
                                            ),
                                            Var(
                                                "Mask",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "succHeap",
                                        args: [
                                            Var(
                                                "Heap",
                                            ),
                                            Var(
                                                "ExhaleHeap",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap0",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "succHeap",
                                            args: [
                                                Var(
                                                    "Heap0",
                                                ),
                                                Var(
                                                    "Heap1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "succHeap",
                                        args: [
                                            Var(
                                                "Heap0",
                                            ),
                                            Var(
                                                "Heap1",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "succHeapTrans",
                                        args: [
                                            Var(
                                                "Heap0",
                                            ),
                                            Var(
                                                "Heap1",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap0",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap2",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "succHeapTrans",
                                            args: [
                                                Var(
                                                    "Heap0",
                                                ),
                                                Var(
                                                    "Heap1",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "succHeap",
                                            args: [
                                                Var(
                                                    "Heap1",
                                                ),
                                                Var(
                                                    "Heap2",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "succHeapTrans",
                                                args: [
                                                    Var(
                                                        "Heap0",
                                                    ),
                                                    Var(
                                                        "Heap1",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: And,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "succHeap",
                                                args: [
                                                    Var(
                                                        "Heap1",
                                                    ),
                                                    Var(
                                                        "Heap2",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "succHeapTrans",
                                        args: [
                                            Var(
                                                "Heap0",
                                            ),
                                            Var(
                                                "Heap2",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "Perm",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Real,
                        ),
                    ),
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "MaskType",
                    type_params: [],
                    type_: Some(
                        Map(
                            MapType {
                                type_params: [
                                    "A",
                                    "B",
                                ],
                                keys: [
                                    App(
                                        TypeApp {
                                            head: "Ref",
                                            tail: None,
                                        },
                                    ),
                                    App(
                                        TypeApp {
                                            head: "Field",
                                            tail: Some(
                                                App(
                                                    TypeApp {
                                                        head: "A",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "B",
                                                                    tail: None,
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                ],
                                value: App(
                                    TypeApp {
                                        head: "Perm",
                                        tail: None,
                                    },
                                ),
                            },
                        ),
                    ),
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "Mask",
                        ],
                        type_: App(
                            TypeApp {
                                head: "MaskType",
                                tail: None,
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "ZeroMask",
                ],
                type_: App(
                    TypeApp {
                        head: "MaskType",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "A",
                            "B",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f_3",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "A",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "B",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "ZeroMask",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o_1",
                                                        ),
                                                        Var(
                                                            "f_3",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Rel(
                            RelExpr {
                                lhs: Array(
                                    ArrayExpr {
                                        expr: Var(
                                            "ZeroMask",
                                        ),
                                        subscripts: [
                                            ArraySubscript {
                                                keys: [
                                                    Var(
                                                        "o_1",
                                                    ),
                                                    Var(
                                                        "f_3",
                                                    ),
                                                ],
                                                value: None,
                                            },
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: Var(
                                    "NoPerm",
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "PMaskType",
                    type_params: [],
                    type_: Some(
                        Map(
                            MapType {
                                type_params: [
                                    "A",
                                    "B",
                                ],
                                keys: [
                                    App(
                                        TypeApp {
                                            head: "Ref",
                                            tail: None,
                                        },
                                    ),
                                    App(
                                        TypeApp {
                                            head: "Field",
                                            tail: Some(
                                                App(
                                                    TypeApp {
                                                        head: "A",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "B",
                                                                    tail: None,
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                ],
                                value: Atom(
                                    Bool,
                                ),
                            },
                        ),
                    ),
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "ZeroPMask",
                ],
                type_: App(
                    TypeApp {
                        head: "PMaskType",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "A",
                            "B",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f_3",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "A",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "B",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "ZeroPMask",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o_1",
                                                        ),
                                                        Var(
                                                            "f_3",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Neg(
                            NegExpr {
                                op: Logical,
                                expr: Array(
                                    ArrayExpr {
                                        expr: Var(
                                            "ZeroPMask",
                                        ),
                                        subscripts: [
                                            ArraySubscript {
                                                keys: [
                                                    Var(
                                                        "o_1",
                                                    ),
                                                    Var(
                                                        "f_3",
                                                    ),
                                                ],
                                                value: None,
                                            },
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "PredicateMaskField",
            type_params: [
                "A",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f_4",
                    ),
                    type_: Atom(
                        Paren(
                            App(
                                TypeApp {
                                    head: "Field",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "A",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "FrameType",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "A",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "PMaskType",
                                                tail: None,
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "WandMaskField",
            type_params: [
                "A",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f_4",
                    ),
                    type_: Atom(
                        Paren(
                            App(
                                TypeApp {
                                    head: "Field",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "A",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "FrameType",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "A",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "PMaskType",
                                                tail: None,
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    },
                ),
            },
            body: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "NoPerm",
                ],
                type_: App(
                    TypeApp {
                        head: "Perm",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "NoPerm",
                    ),
                    op: Eq,
                    rhs: Dec(
                        Dec {
                            whole: "0",
                            fract: Some(
                                "000000000",
                            ),
                            exp: None,
                        },
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "FullPerm",
                ],
                type_: App(
                    TypeApp {
                        head: "Perm",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: Var(
                        "FullPerm",
                    ),
                    op: Eq,
                    rhs: Dec(
                        Dec {
                            whole: "1",
                            fract: Some(
                                "000000000",
                            ),
                            exp: None,
                        },
                    ),
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Perm",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "a",
                    ),
                    type_: Atom(
                        Real,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "b",
                    ),
                    type_: Atom(
                        Real,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "Perm",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "GoodMask",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Mask",
                    ),
                    type_: App(
                        TypeApp {
                            head: "MaskType",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "state",
                                        args: [
                                            Var(
                                                "Heap",
                                            ),
                                            Var(
                                                "Mask",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "GoodMask",
                                        args: [
                                            Var(
                                                "Mask",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "A",
                            "B",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f_3",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "A",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "B",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "GoodMask",
                                            args: [
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "Mask",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o_1",
                                                        ),
                                                        Var(
                                                            "f_3",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "GoodMask",
                                        args: [
                                            Var(
                                                "Mask",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "o_1",
                                                                    ),
                                                                    Var(
                                                                        "f_3",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Ge,
                                                rhs: Var(
                                                    "NoPerm",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Implies(
                                            ImpliesExpr {
                                                lhs: Logical(
                                                    LogicalExpr {
                                                        lhs: Logical(
                                                            LogicalExpr {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "GoodMask",
                                                                        args: [
                                                                            Var(
                                                                                "Mask",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: And,
                                                                rhs: Neg(
                                                                    NegExpr {
                                                                        op: Logical,
                                                                        expr: FuncCall(
                                                                            FuncCall {
                                                                                target: "IsPredicateField",
                                                                                args: [
                                                                                    Var(
                                                                                        "f_3",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        op: And,
                                                        rhs: Neg(
                                                            NegExpr {
                                                                op: Logical,
                                                                expr: FuncCall(
                                                                    FuncCall {
                                                                        target: "IsWandField",
                                                                        args: [
                                                                            Var(
                                                                                "f_3",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                rhs: Rel(
                                                    RelExpr {
                                                        lhs: Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "Mask",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o_1",
                                                                            ),
                                                                            Var(
                                                                                "f_3",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                        op: Le,
                                                        rhs: Var(
                                                            "FullPerm",
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "HasDirectPerm",
            type_params: [
                "A",
                "B",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Mask",
                    ),
                    type_: App(
                        TypeApp {
                            head: "MaskType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "o_1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Ref",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f_3",
                    ),
                    type_: Atom(
                        Paren(
                            App(
                                TypeApp {
                                    head: "Field",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "A",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "B",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "A",
                            "B",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f_3",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "A",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "B",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "HasDirectPerm",
                                            args: [
                                                Var(
                                                    "Mask",
                                                ),
                                                Var(
                                                    "o_1",
                                                ),
                                                Var(
                                                    "f_3",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "HasDirectPerm",
                                        args: [
                                            Var(
                                                "Mask",
                                            ),
                                            Var(
                                                "o_1",
                                            ),
                                            Var(
                                                "f_3",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "Mask",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "o_1",
                                                            ),
                                                            Var(
                                                                "f_3",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                        op: Gt,
                                        rhs: Var(
                                            "NoPerm",
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "sumMask",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "ResultMask",
                    ),
                    type_: App(
                        TypeApp {
                            head: "MaskType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "SummandMask1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "MaskType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "SummandMask2",
                    ),
                    type_: App(
                        TypeApp {
                            head: "MaskType",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "A",
                            "B",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "ResultMask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "SummandMask1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "SummandMask2",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f_3",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "A",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "B",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "sumMask",
                                            args: [
                                                Var(
                                                    "ResultMask",
                                                ),
                                                Var(
                                                    "SummandMask1",
                                                ),
                                                Var(
                                                    "SummandMask2",
                                                ),
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "ResultMask",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o_1",
                                                        ),
                                                        Var(
                                                            "f_3",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "sumMask",
                                            args: [
                                                Var(
                                                    "ResultMask",
                                                ),
                                                Var(
                                                    "SummandMask1",
                                                ),
                                                Var(
                                                    "SummandMask2",
                                                ),
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "SummandMask1",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o_1",
                                                        ),
                                                        Var(
                                                            "f_3",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "sumMask",
                                            args: [
                                                Var(
                                                    "ResultMask",
                                                ),
                                                Var(
                                                    "SummandMask1",
                                                ),
                                                Var(
                                                    "SummandMask2",
                                                ),
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "SummandMask2",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o_1",
                                                        ),
                                                        Var(
                                                            "f_3",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "sumMask",
                                        args: [
                                            Var(
                                                "ResultMask",
                                            ),
                                            Var(
                                                "SummandMask1",
                                            ),
                                            Var(
                                                "SummandMask2",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "ResultMask",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "o_1",
                                                            ),
                                                            Var(
                                                                "f_3",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "SummandMask1",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "o_1",
                                                                    ),
                                                                    Var(
                                                                        "f_3",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "SummandMask2",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "o_1",
                                                                    ),
                                                                    Var(
                                                                        "f_3",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "AssumeFunctionsAbove",
                ],
                type_: Atom(
                    Int,
                ),
            },
            order_spec: None,
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "FrameType",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "EmptyFrame",
                ],
                type_: App(
                    TypeApp {
                        head: "FrameType",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "FrameFragment",
            type_params: [
                "T",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "t",
                    ),
                    type_: App(
                        TypeApp {
                            head: "T",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "FrameType",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "ConditionalFrame",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Perm",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "f_5",
                    ),
                    type_: App(
                        TypeApp {
                            head: "FrameType",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "FrameType",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "dummyFunction",
            type_params: [
                "T",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "t",
                    ),
                    type_: App(
                        TypeApp {
                            head: "T",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "CombineFrames",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "a_1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "FrameType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "b_1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "FrameType",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "FrameType",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "p",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Perm",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "f_5",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "FrameType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "ConditionalFrame",
                                            args: [
                                                Var(
                                                    "p",
                                                ),
                                                Var(
                                                    "f_5",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "ConditionalFrame",
                                        args: [
                                            Var(
                                                "p",
                                            ),
                                            Var(
                                                "f_5",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: IfThenElse(
                                    IfThenElseExpr {
                                        cond: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "p",
                                                ),
                                                op: Gt,
                                                rhs: Dec(
                                                    Dec {
                                                        whole: "0",
                                                        fract: Some(
                                                            "000000000",
                                                        ),
                                                        exp: None,
                                                    },
                                                ),
                                            },
                                        ),
                                        then: Var(
                                            "f_5",
                                        ),
                                        else_: Var(
                                            "EmptyFrame",
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "InsidePredicate",
            type_params: [
                "A",
                "B",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "p",
                    ),
                    type_: Atom(
                        Paren(
                            App(
                                TypeApp {
                                    head: "Field",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "A",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "FrameType",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "v_1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "FrameType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "q",
                    ),
                    type_: Atom(
                        Paren(
                            App(
                                TypeApp {
                                    head: "Field",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "B",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "FrameType",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "w",
                    ),
                    type_: App(
                        TypeApp {
                            head: "FrameType",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "A",
                            "B",
                            "C",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "p",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "A",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "FrameType",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "v_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "FrameType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "q",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "B",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "FrameType",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "w",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "FrameType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "r",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "C",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "FrameType",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "u",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "FrameType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "InsidePredicate",
                                            args: [
                                                Var(
                                                    "p",
                                                ),
                                                Var(
                                                    "v_1",
                                                ),
                                                Var(
                                                    "q",
                                                ),
                                                Var(
                                                    "w",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "InsidePredicate",
                                            args: [
                                                Var(
                                                    "q",
                                                ),
                                                Var(
                                                    "w",
                                                ),
                                                Var(
                                                    "r",
                                                ),
                                                Var(
                                                    "u",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "InsidePredicate",
                                                args: [
                                                    Var(
                                                        "p",
                                                    ),
                                                    Var(
                                                        "v_1",
                                                    ),
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "w",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: And,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "InsidePredicate",
                                                args: [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "w",
                                                    ),
                                                    Var(
                                                        "r",
                                                    ),
                                                    Var(
                                                        "u",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "InsidePredicate",
                                        args: [
                                            Var(
                                                "p",
                                            ),
                                            Var(
                                                "v_1",
                                            ),
                                            Var(
                                                "r",
                                            ),
                                            Var(
                                                "u",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "A",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "p",
                                        ],
                                        type_: Atom(
                                            Paren(
                                                App(
                                                    TypeApp {
                                                        head: "Field",
                                                        tail: Some(
                                                            App(
                                                                TypeApp {
                                                                    head: "A",
                                                                    tail: Some(
                                                                        App(
                                                                            TypeApp {
                                                                                head: "FrameType",
                                                                                tail: None,
                                                                            },
                                                                        ),
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    },
                                                ),
                                            ),
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "v_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "FrameType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "w",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "FrameType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "InsidePredicate",
                                            args: [
                                                Var(
                                                    "p",
                                                ),
                                                Var(
                                                    "v_1",
                                                ),
                                                Var(
                                                    "p",
                                                ),
                                                Var(
                                                    "w",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Neg(
                            NegExpr {
                                op: Logical,
                                expr: FuncCall(
                                    FuncCall {
                                        target: "InsidePredicate",
                                        args: [
                                            Var(
                                                "p",
                                            ),
                                            Var(
                                                "v_1",
                                            ),
                                            Var(
                                                "p",
                                            ),
                                            Var(
                                                "w",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "MyTypeDomainType",
                    type_params: [
                        "T",
                    ],
                    type_: None,
                },
            ],
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "get",
            type_params: [
                "T",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: App(
                        TypeApp {
                            head: "T",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "T",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "T",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "T",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    Coercion(
                                        CoercionExpr {
                                            expr: FuncCall(
                                                FuncCall {
                                                    target: "get",
                                                    args: [
                                                        Var(
                                                            "x_1",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            coercions: [
                                                Type(
                                                    App(
                                                        TypeApp {
                                                            head: "T",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Rel(
                            RelExpr {
                                lhs: Coercion(
                                    CoercionExpr {
                                        expr: FuncCall(
                                            FuncCall {
                                                target: "get",
                                                args: [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                ],
                                            },
                                        ),
                                        coercions: [
                                            Type(
                                                App(
                                                    TypeApp {
                                                        head: "T",
                                                        tail: None,
                                                    },
                                                ),
                                            ),
                                        ],
                                    },
                                ),
                                op: Neq,
                                rhs: Var(
                                    "x_1",
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "f_6",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "NormalField",
                                    tail: Some(
                                        AtomApp(
                                            TypeApp {
                                                head: Int,
                                                tail: None,
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Neg(
                NegExpr {
                    op: Logical,
                    expr: FuncCall(
                        FuncCall {
                            target: "IsPredicateField",
                            args: [
                                Var(
                                    "f_6",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Neg(
                NegExpr {
                    op: Logical,
                    expr: FuncCall(
                        FuncCall {
                            target: "IsWandField",
                            args: [
                                Var(
                                    "f_6",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "next",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "NormalField",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Neg(
                NegExpr {
                    op: Logical,
                    expr: FuncCall(
                        FuncCall {
                            target: "IsPredicateField",
                            args: [
                                Var(
                                    "next",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Neg(
                NegExpr {
                    op: Logical,
                    expr: FuncCall(
                        FuncCall {
                            target: "IsWandField",
                            args: [
                                Var(
                                    "next",
                                ),
                            ],
                        },
                    ),
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "length",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Heap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x_1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "length'",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Heap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x_1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "length",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "length",
                                                args: [
                                                    Var(
                                                        "Heap",
                                                    ),
                                                    Var(
                                                        "x_1",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "length'",
                                                args: [
                                                    Var(
                                                        "Heap",
                                                    ),
                                                    Var(
                                                        "x_1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "dummyFunction",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "length#triggerStateless",
                                                    args: [
                                                        Var(
                                                            "x_1",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "length'",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: FuncCall(
                            FuncCall {
                                target: "dummyFunction",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "length#triggerStateless",
                                            args: [
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "length",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "length#triggerStateless",
                                            args: [
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "list#trigger",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "list",
                                                        args: [
                                                            Var(
                                                                "x_1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "state",
                                                args: [
                                                    Var(
                                                        "Heap",
                                                    ),
                                                    Var(
                                                        "Mask",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: And,
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "AssumeFunctionsAbove",
                                                ),
                                                op: Lt,
                                                rhs: Nat(
                                                    "0",
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "length",
                                                args: [
                                                    Var(
                                                        "Heap",
                                                    ),
                                                    Var(
                                                        "x_1",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: Term(
                                            Term {
                                                lhs: Nat(
                                                    "1",
                                                ),
                                                op: Add,
                                                rhs: IfThenElse(
                                                    IfThenElseExpr {
                                                        cond: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "x_1",
                                                                                    ),
                                                                                    Var(
                                                                                        "next",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Neq,
                                                                rhs: Var(
                                                                    "null",
                                                                ),
                                                            },
                                                        ),
                                                        then: FuncCall(
                                                            FuncCall {
                                                                target: "length'",
                                                                args: [
                                                                    Var(
                                                                        "Heap",
                                                                    ),
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "Heap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "x_1",
                                                                                        ),
                                                                                        Var(
                                                                                            "next",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        else_: Nat(
                                                            "0",
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "length#frame",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "frame",
                    ),
                    type_: App(
                        TypeApp {
                            head: "FrameType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x_1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Mask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "length'",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "length#triggerStateless",
                                            args: [
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "list#trigger",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "list",
                                                        args: [
                                                            Var(
                                                                "x_1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "state",
                                        args: [
                                            Var(
                                                "Heap",
                                            ),
                                            Var(
                                                "Mask",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "length'",
                                                args: [
                                                    Var(
                                                        "Heap",
                                                    ),
                                                    Var(
                                                        "x_1",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "length#frame",
                                                args: [
                                                    Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "Heap",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "null",
                                                                        ),
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "list",
                                                                                args: [
                                                                                    Var(
                                                                                        "x_1",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    Var(
                                                        "x_1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "length#trigger",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "frame",
                    ),
                    type_: App(
                        TypeApp {
                            head: "FrameType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x_1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "length#triggerStateless",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x_1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "length#definedness",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "x_1",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "Result",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "Heap",
                            "Mask",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "perm",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Perm",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "UnfoldingHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "UnfoldingMask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "MaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "ExhaleHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "newPMask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "PMaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "ZeroMask",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "Heap",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "x_1",
                                                        ),
                                                        Var(
                                                            "$allocated",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "AssumeFunctionsAbove",
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "0",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "Heap",
                                            ),
                                            op: Eq,
                                            rhs: Old(
                                                OldExpr {
                                                    expr: Var(
                                                        "Heap",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "Mask",
                                            ),
                                            op: Eq,
                                            rhs: Old(
                                                OldExpr {
                                                    expr: Var(
                                                        "Mask",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "FullPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "UnfoldingHeap",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "Heap",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "UnfoldingMask",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "Mask",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "list#trigger",
                                            args: [
                                                Var(
                                                    "UnfoldingHeap",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "list",
                                                        args: [
                                                            Var(
                                                                "x_1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "UnfoldingHeap",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "null",
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "CombineFrames",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "FrameFragment",
                                                                args: [
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "UnfoldingHeap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "x_1",
                                                                                        ),
                                                                                        Var(
                                                                                            "f_6",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "CombineFrames",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FrameFragment",
                                                                            args: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "UnfoldingHeap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "x_1",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FrameFragment",
                                                                            args: [
                                                                                IfThenElse(
                                                                                    IfThenElseExpr {
                                                                                        cond: Rel(
                                                                                            RelExpr {
                                                                                                lhs: Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "UnfoldingHeap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                                op: Neq,
                                                                                                rhs: Var(
                                                                                                    "null",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        then: Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "UnfoldingHeap",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "null",
                                                                                                            ),
                                                                                                            FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "list",
                                                                                                                    args: [
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "UnfoldingHeap",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "x_1",
                                                                                                                                            ),
                                                                                                                                            Var(
                                                                                                                                                "next",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                        else_: Var(
                                                                                            "EmptyFrame",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "NoPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "FullPerm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "NoPerm",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "msg",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "  Function might not be well-formed. There might be insufficient permission to access list(x). (predicate_exhale.vpr@15.1) [77]",
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "perm",
                                                            ),
                                                            op: Le,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "UnfoldingMask",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "null",
                                                                                ),
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "list",
                                                                                        args: [
                                                                                            Var(
                                                                                                "x_1",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "UnfoldingMask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "UnfoldingMask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "FullPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "x_1",
                                            ),
                                            op: Neq,
                                            rhs: Var(
                                                "null",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "UnfoldingMask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "f_6",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "UnfoldingMask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "f_6",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "UnfoldingHeap",
                                                ),
                                                Var(
                                                    "UnfoldingMask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "FullPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "x_1",
                                            ),
                                            op: Neq,
                                            rhs: Var(
                                                "null",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "UnfoldingMask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "next",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "UnfoldingMask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "UnfoldingHeap",
                                                ),
                                                Var(
                                                    "UnfoldingMask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "UnfoldingHeap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "FullPerm",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "UnfoldingMask",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "UnfoldingHeap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "x_1",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "UnfoldingMask",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "UnfoldingHeap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "perm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "InsidePredicate",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "UnfoldingHeap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "UnfoldingHeap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                                Var(
                                                                                                    "next",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "UnfoldingHeap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "UnfoldingHeap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "state",
                                                            args: [
                                                                Var(
                                                                    "UnfoldingHeap",
                                                                ),
                                                                Var(
                                                                    "UnfoldingMask",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "UnfoldingHeap",
                                                ),
                                                Var(
                                                    "UnfoldingMask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "msg",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "  Function might not be well-formed. There might be insufficient permission to access x.next. (predicate_exhale.vpr@15.1) [78]",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "HasDirectPerm",
                                            args: [
                                                Var(
                                                    "UnfoldingMask",
                                                ),
                                                Var(
                                                    "x_1",
                                                ),
                                                Var(
                                                    "next",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "UnfoldingHeap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "msg",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "  Function might not be well-formed. There might be insufficient permission to access x.next. (predicate_exhale.vpr@15.1) [79]",
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "HasDirectPerm",
                                                            args: [
                                                                Var(
                                                                    "UnfoldingMask",
                                                                ),
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                                Var(
                                                                    "next",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Asterisk,
                                                    then: [
                                                        LabelOrCmd(
                                                            Assign(
                                                                AssignCmd {
                                                                    lhs: [
                                                                        AssignLhs {
                                                                            ident: "perm",
                                                                            subscripts: [],
                                                                        },
                                                                    ],
                                                                    rhs: [
                                                                        Var(
                                                                            "NoPerm",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ),
                                                        LabelOrCmd(
                                                            Assign(
                                                                AssignCmd {
                                                                    lhs: [
                                                                        AssignLhs {
                                                                            ident: "perm",
                                                                            subscripts: [],
                                                                        },
                                                                    ],
                                                                    rhs: [
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "perm",
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Var(
                                                                                    "FullPerm",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ),
                                                        StructuredCmd(
                                                            If(
                                                                IfCmd {
                                                                    guard: Expr(
                                                                        Rel(
                                                                            RelExpr {
                                                                                lhs: Var(
                                                                                    "perm",
                                                                                ),
                                                                                op: Neq,
                                                                                rhs: Var(
                                                                                    "NoPerm",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ),
                                                                    then: [
                                                                        LabelOrCmd(
                                                                            Claim(
                                                                                ClaimCmd {
                                                                                    kind: Assert,
                                                                                    attrs: [
                                                                                        Attr(
                                                                                            AttrContent {
                                                                                                ident: "msg",
                                                                                                params: [
                                                                                                    String(
                                                                                                        StringLit {
                                                                                                            text: "  Precondition of function length might not hold. There might be insufficient permission to access list(x.next). (predicate_exhale.vpr@18.48) [80]",
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                    proposition: Rel(
                                                                                        RelExpr {
                                                                                            lhs: Var(
                                                                                                "perm",
                                                                                            ),
                                                                                            op: Le,
                                                                                            rhs: Array(
                                                                                                ArrayExpr {
                                                                                                    expr: Var(
                                                                                                        "UnfoldingMask",
                                                                                                    ),
                                                                                                    subscripts: [
                                                                                                        ArraySubscript {
                                                                                                            keys: [
                                                                                                                Var(
                                                                                                                    "null",
                                                                                                                ),
                                                                                                                FuncCall(
                                                                                                                    FuncCall {
                                                                                                                        target: "list",
                                                                                                                        args: [
                                                                                                                            Array(
                                                                                                                                ArrayExpr {
                                                                                                                                    expr: Var(
                                                                                                                                        "UnfoldingHeap",
                                                                                                                                    ),
                                                                                                                                    subscripts: [
                                                                                                                                        ArraySubscript {
                                                                                                                                            keys: [
                                                                                                                                                Var(
                                                                                                                                                    "x_1",
                                                                                                                                                ),
                                                                                                                                                Var(
                                                                                                                                                    "next",
                                                                                                                                                ),
                                                                                                                                            ],
                                                                                                                                            value: None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                            value: None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        ),
                                                                    ],
                                                                    else_: None,
                                                                },
                                                            ),
                                                        ),
                                                        LabelOrCmd(
                                                            Assign(
                                                                AssignCmd {
                                                                    lhs: [
                                                                        AssignLhs {
                                                                            ident: "UnfoldingMask",
                                                                            subscripts: [
                                                                                [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "UnfoldingHeap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            ],
                                                                        },
                                                                    ],
                                                                    rhs: [
                                                                        Term(
                                                                            Term {
                                                                                lhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "UnfoldingMask",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "null",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "list",
                                                                                                            args: [
                                                                                                                Array(
                                                                                                                    ArrayExpr {
                                                                                                                        expr: Var(
                                                                                                                            "UnfoldingHeap",
                                                                                                                        ),
                                                                                                                        subscripts: [
                                                                                                                            ArraySubscript {
                                                                                                                                keys: [
                                                                                                                                    Var(
                                                                                                                                        "x_1",
                                                                                                                                    ),
                                                                                                                                    Var(
                                                                                                                                        "next",
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                                value: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Sub,
                                                                                rhs: Var(
                                                                                    "perm",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ),
                                                        LabelOrCmd(
                                                            Havoc(
                                                                HavocCmd {
                                                                    vars: [
                                                                        "ExhaleHeap",
                                                                    ],
                                                                },
                                                            ),
                                                        ),
                                                        LabelOrCmd(
                                                            Claim(
                                                                ClaimCmd {
                                                                    kind: Assume,
                                                                    attrs: [],
                                                                    proposition: FuncCall(
                                                                        FuncCall {
                                                                            target: "IdenticalOnKnownLocations",
                                                                            args: [
                                                                                Var(
                                                                                    "UnfoldingHeap",
                                                                                ),
                                                                                Var(
                                                                                    "ExhaleHeap",
                                                                                ),
                                                                                Var(
                                                                                    "UnfoldingMask",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                        LabelOrCmd(
                                                            Assign(
                                                                AssignCmd {
                                                                    lhs: [
                                                                        AssignLhs {
                                                                            ident: "UnfoldingHeap",
                                                                            subscripts: [],
                                                                        },
                                                                    ],
                                                                    rhs: [
                                                                        Var(
                                                                            "ExhaleHeap",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ),
                                                        LabelOrCmd(
                                                            Claim(
                                                                ClaimCmd {
                                                                    kind: Assume,
                                                                    attrs: [],
                                                                    proposition: BoolLit(
                                                                        false,
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    else_: Some(
                                                        Else(
                                                            [
                                                                LabelOrCmd(
                                                                    Claim(
                                                                        ClaimCmd {
                                                                            kind: Assume,
                                                                            attrs: [],
                                                                            proposition: FuncCall(
                                                                                FuncCall {
                                                                                    target: "length#trigger",
                                                                                    args: [
                                                                                        Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "UnfoldingHeap",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "null",
                                                                                                            ),
                                                                                                            FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "list",
                                                                                                                    args: [
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "UnfoldingHeap",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "x_1",
                                                                                                                                            ),
                                                                                                                                            Var(
                                                                                                                                                "next",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                        Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "UnfoldingHeap",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "x_1",
                                                                                                            ),
                                                                                                            Var(
                                                                                                                "next",
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list#sm",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "f_6",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list#sm",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "next",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "newPMask",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: Quant(
                                                        QuantExpr {
                                                            kind: ForAll,
                                                            body: QuantBody {
                                                                type_params: [
                                                                    "A",
                                                                    "B",
                                                                ],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "o_2",
                                                                                ],
                                                                                type_: App(
                                                                                    TypeApp {
                                                                                        head: "Ref",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "f_7",
                                                                                ],
                                                                                type_: Atom(
                                                                                    Paren(
                                                                                        App(
                                                                                            TypeApp {
                                                                                                head: "Field",
                                                                                                tail: Some(
                                                                                                    App(
                                                                                                        TypeApp {
                                                                                                            head: "A",
                                                                                                            tail: Some(
                                                                                                                App(
                                                                                                                    TypeApp {
                                                                                                                        head: "B",
                                                                                                                        tail: None,
                                                                                                                    },
                                                                                                                ),
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [
                                                                    Trigger(
                                                                        [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "newPMask",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o_2",
                                                                                                ),
                                                                                                Var(
                                                                                                    "f_7",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                                expr: Implies(
                                                                    ImpliesExpr {
                                                                        lhs: Logical(
                                                                            LogicalExpr {
                                                                                lhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "null",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "list#sm",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "x_1",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "o_2",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "f_7",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Or,
                                                                                rhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "null",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "list#sm",
                                                                                                            args: [
                                                                                                                Array(
                                                                                                                    ArrayExpr {
                                                                                                                        expr: Var(
                                                                                                                            "Heap",
                                                                                                                        ),
                                                                                                                        subscripts: [
                                                                                                                            ArraySubscript {
                                                                                                                                keys: [
                                                                                                                                    Var(
                                                                                                                                        "x_1",
                                                                                                                                    ),
                                                                                                                                    Var(
                                                                                                                                        "next",
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                                value: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "o_2",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "f_7",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        rhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "newPMask",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "o_2",
                                                                                            ),
                                                                                            Var(
                                                                                                "f_7",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list#sm",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "newPMask",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list#sm",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "f_6",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list#sm",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "next",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "newPMask",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: Quant(
                                                        QuantExpr {
                                                            kind: ForAll,
                                                            body: QuantBody {
                                                                type_params: [
                                                                    "A",
                                                                    "B",
                                                                ],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "o_3",
                                                                                ],
                                                                                type_: App(
                                                                                    TypeApp {
                                                                                        head: "Ref",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "f_8",
                                                                                ],
                                                                                type_: Atom(
                                                                                    Paren(
                                                                                        App(
                                                                                            TypeApp {
                                                                                                head: "Field",
                                                                                                tail: Some(
                                                                                                    App(
                                                                                                        TypeApp {
                                                                                                            head: "A",
                                                                                                            tail: Some(
                                                                                                                App(
                                                                                                                    TypeApp {
                                                                                                                        head: "B",
                                                                                                                        tail: None,
                                                                                                                    },
                                                                                                                ),
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [
                                                                    Trigger(
                                                                        [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "newPMask",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o_3",
                                                                                                ),
                                                                                                Var(
                                                                                                    "f_8",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                                expr: Implies(
                                                                    ImpliesExpr {
                                                                        lhs: Logical(
                                                                            LogicalExpr {
                                                                                lhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "null",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "list#sm",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "x_1",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "o_3",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "f_8",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Or,
                                                                                rhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "null",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "list#sm",
                                                                                                            args: [
                                                                                                                Array(
                                                                                                                    ArrayExpr {
                                                                                                                        expr: Var(
                                                                                                                            "Heap",
                                                                                                                        ),
                                                                                                                        subscripts: [
                                                                                                                            ArraySubscript {
                                                                                                                                keys: [
                                                                                                                                    Var(
                                                                                                                                        "x_1",
                                                                                                                                    ),
                                                                                                                                    Var(
                                                                                                                                        "next",
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                                value: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "o_3",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "f_8",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        rhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "newPMask",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "o_3",
                                                                                            ),
                                                                                            Var(
                                                                                                "f_8",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list#sm",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "newPMask",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Result",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Nat(
                                                    "1",
                                                ),
                                                op: Add,
                                                rhs: IfThenElse(
                                                    IfThenElseExpr {
                                                        cond: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "x_1",
                                                                                    ),
                                                                                    Var(
                                                                                        "next",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Neq,
                                                                rhs: Var(
                                                                    "null",
                                                                ),
                                                            },
                                                        ),
                                                        then: FuncCall(
                                                            FuncCall {
                                                                target: "length",
                                                                args: [
                                                                    Var(
                                                                        "Heap",
                                                                    ),
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "Heap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "x_1",
                                                                                        ),
                                                                                        Var(
                                                                                            "next",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        else_: Nat(
                                                            "0",
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "PredicateType_list",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "list",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x_1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "PredicateType_list",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "FrameType",
                                                tail: None,
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    },
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "list#sm",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x_1",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "PredicateType_list",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "PMaskType",
                                                tail: None,
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    },
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "PredicateMaskField",
                                            args: [
                                                FuncCall(
                                                    FuncCall {
                                                        target: "list",
                                                        args: [
                                                            Var(
                                                                "x_1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "PredicateMaskField",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "list",
                                                    args: [
                                                        Var(
                                                            "x_1",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "list#sm",
                                        args: [
                                            Var(
                                                "x_1",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "list",
                                            args: [
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: FuncCall(
                            FuncCall {
                                target: "IsPredicateField",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "list",
                                            args: [
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "list",
                                            args: [
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "getPredicateId",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "list",
                                                    args: [
                                                        Var(
                                                            "x_1",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: Nat(
                                    "0",
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "list#trigger",
            type_params: [
                "A",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "Heap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pred",
                    ),
                    type_: Atom(
                        Paren(
                            App(
                                TypeApp {
                                    head: "Field",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "A",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "FrameType",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "list#everUsed",
            type_params: [
                "A",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "pred",
                    ),
                    type_: Atom(
                        Paren(
                            App(
                                TypeApp {
                                    head: "Field",
                                    tail: Some(
                                        App(
                                            TypeApp {
                                                head: "A",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "FrameType",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    ),
                                },
                            ),
                        ),
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x2",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "list",
                                            args: [
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "list",
                                            args: [
                                                Var(
                                                    "x2",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "list",
                                                args: [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "list",
                                                args: [
                                                    Var(
                                                        "x2",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "x_1",
                                        ),
                                        op: Eq,
                                        rhs: Var(
                                            "x2",
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x2",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "list#sm",
                                            args: [
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "list#sm",
                                            args: [
                                                Var(
                                                    "x2",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "list#sm",
                                                args: [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "list#sm",
                                                args: [
                                                    Var(
                                                        "x2",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "x_1",
                                        ),
                                        op: Eq,
                                        rhs: Var(
                                            "x2",
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "Heap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "x_1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "list#trigger",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "list",
                                                        args: [
                                                            Var(
                                                                "x_1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: FuncCall(
                            FuncCall {
                                target: "list#everUsed",
                                args: [
                                    FuncCall(
                                        FuncCall {
                                            target: "list",
                                            args: [
                                                Var(
                                                    "x_1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "test1",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "x_1",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "Heap",
                            "Mask",
                        ],
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "perm",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Perm",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "ExhaleHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "newVersion",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "FrameType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "freshVersion",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "FrameType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "newPMask",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "PMaskType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "ZeroMask",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "AssumeFunctionsAbove",
                                            ),
                                            op: Eq,
                                            rhs: Neg(
                                                NegExpr {
                                                    op: Arith,
                                                    expr: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "Heap",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "x_1",
                                                        ),
                                                        Var(
                                                            "$allocated",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "FullPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "Heap",
                                            ),
                                            op: Eq,
                                            rhs: Old(
                                                OldExpr {
                                                    expr: Var(
                                                        "Heap",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "Mask",
                                            ),
                                            op: Eq,
                                            rhs: Old(
                                                OldExpr {
                                                    expr: Var(
                                                        "Mask",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "NoPerm",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "FullPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Expr(
                                                        Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Neq,
                                                                rhs: Var(
                                                                    "NoPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    then: [
                                                        LabelOrCmd(
                                                            Claim(
                                                                ClaimCmd {
                                                                    kind: Assert,
                                                                    attrs: [
                                                                        Attr(
                                                                            AttrContent {
                                                                                ident: "msg",
                                                                                params: [
                                                                                    String(
                                                                                        StringLit {
                                                                                            text: "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@28.10) [81]",
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    proposition: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "perm",
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Mask",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "null",
                                                                                                ),
                                                                                                FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "list",
                                                                                                        args: [
                                                                                                            Var(
                                                                                                                "x_1",
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    else_: None,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Mask",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Mask",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Var(
                                                                    "perm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "ExhaleHeap",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "IdenticalOnKnownLocations",
                                                            args: [
                                                                Var(
                                                                    "Heap",
                                                                ),
                                                                Var(
                                                                    "ExhaleHeap",
                                                                ),
                                                                Var(
                                                                    "Mask",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "ExhaleHeap",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: BoolLit(
                                                        false,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "length",
                                                    args: [
                                                        Var(
                                                            "Heap",
                                                        ),
                                                        Var(
                                                            "x_1",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "7",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "list#trigger",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "list",
                                                        args: [
                                                            Var(
                                                                "x_1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "Heap",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "null",
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "CombineFrames",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "FrameFragment",
                                                                args: [
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "Heap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "x_1",
                                                                                        ),
                                                                                        Var(
                                                                                            "f_6",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "CombineFrames",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FrameFragment",
                                                                            args: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "x_1",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FrameFragment",
                                                                            args: [
                                                                                IfThenElse(
                                                                                    IfThenElseExpr {
                                                                                        cond: Rel(
                                                                                            RelExpr {
                                                                                                lhs: Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                                op: Neq,
                                                                                                rhs: Var(
                                                                                                    "null",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        then: Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "Heap",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "null",
                                                                                                            ),
                                                                                                            FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "list",
                                                                                                                    args: [
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "Heap",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "x_1",
                                                                                                                                            ),
                                                                                                                                            Var(
                                                                                                                                                "next",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                        else_: Var(
                                                                                            "EmptyFrame",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "NoPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "FullPerm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "NoPerm",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "msg",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "  Unfolding list(x) might fail. There might be insufficient permission to access list(x). (predicate_exhale.vpr@30.3) [83]",
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "perm",
                                                            ),
                                                            op: Le,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "Mask",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "null",
                                                                                ),
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "list",
                                                                                        args: [
                                                                                            Var(
                                                                                                "x_1",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Neg(
                                            NegExpr {
                                                op: Logical,
                                                expr: FuncCall(
                                                    FuncCall {
                                                        target: "HasDirectPerm",
                                                        args: [
                                                            Var(
                                                                "Mask",
                                                            ),
                                                            Var(
                                                                "null",
                                                            ),
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "list",
                                                                    args: [
                                                                        Var(
                                                                            "x_1",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "newVersion",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "newVersion",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "FullPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "x_1",
                                            ),
                                            op: Neq,
                                            rhs: Var(
                                                "null",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "f_6",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "f_6",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "FullPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "x_1",
                                            ),
                                            op: Neq,
                                            rhs: Var(
                                                "null",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "next",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "FullPerm",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Mask",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "x_1",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Mask",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "perm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "InsidePredicate",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Heap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                                Var(
                                                                                                    "next",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "state",
                                                            args: [
                                                                Var(
                                                                    "Heap",
                                                                ),
                                                                Var(
                                                                    "Mask",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "msg",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "  Inhale might fail. There might be insufficient permission to access x.next. (predicate_exhale.vpr@31.3) [84]",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "HasDirectPerm",
                                            args: [
                                                Var(
                                                    "Mask",
                                                ),
                                                Var(
                                                    "x_1",
                                                ),
                                                Var(
                                                    "next",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "Heap",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                                Var(
                                                                    "next",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Neq,
                                            rhs: Var(
                                                "null",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "msg",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "  Inhale might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@31.3) [85]",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "HasDirectPerm",
                                            args: [
                                                Var(
                                                    "Mask",
                                                ),
                                                Var(
                                                    "x_1",
                                                ),
                                                Var(
                                                    "f_6",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "Heap",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                                Var(
                                                                    "f_6",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "5",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "NoPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "FullPerm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "NoPerm",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "msg",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "  Folding list(x) might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@32.3) [87]",
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "perm",
                                                            ),
                                                            op: Le,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "Mask",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                                Var(
                                                                                    "f_6",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "f_6",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "f_6",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "NoPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "FullPerm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "NoPerm",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "msg",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "  Folding list(x) might fail. There might be insufficient permission to access x.next. (predicate_exhale.vpr@32.3) [89]",
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "perm",
                                                            ),
                                                            op: Le,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "Mask",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                                Var(
                                                                                    "next",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "next",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "NoPerm",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "FullPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Expr(
                                                        Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Neq,
                                                                rhs: Var(
                                                                    "NoPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    then: [
                                                        LabelOrCmd(
                                                            Claim(
                                                                ClaimCmd {
                                                                    kind: Assert,
                                                                    attrs: [
                                                                        Attr(
                                                                            AttrContent {
                                                                                ident: "msg",
                                                                                params: [
                                                                                    String(
                                                                                        StringLit {
                                                                                            text: "  Folding list(x) might fail. There might be insufficient permission to access list(x.next). (predicate_exhale.vpr@32.3) [91]",
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    proposition: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "perm",
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Mask",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "null",
                                                                                                ),
                                                                                                FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "list",
                                                                                                        args: [
                                                                                                            Array(
                                                                                                                ArrayExpr {
                                                                                                                    expr: Var(
                                                                                                                        "Heap",
                                                                                                                    ),
                                                                                                                    subscripts: [
                                                                                                                        ArraySubscript {
                                                                                                                            keys: [
                                                                                                                                Var(
                                                                                                                                    "x_1",
                                                                                                                                ),
                                                                                                                                Var(
                                                                                                                                    "next",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            value: None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    else_: None,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Mask",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "x_1",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Mask",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Var(
                                                                    "perm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "InsidePredicate",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Heap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                                Var(
                                                                                                    "next",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "InsidePredicate",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Heap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                                Var(
                                                                                                    "next",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "InsidePredicate",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Heap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                                Var(
                                                                                                    "next",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "FullPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "list#trigger",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "list",
                                                        args: [
                                                            Var(
                                                                "x_1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "Heap",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "null",
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "CombineFrames",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "FrameFragment",
                                                                args: [
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "Heap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "x_1",
                                                                                        ),
                                                                                        Var(
                                                                                            "f_6",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "CombineFrames",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FrameFragment",
                                                                            args: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "x_1",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FrameFragment",
                                                                            args: [
                                                                                IfThenElse(
                                                                                    IfThenElseExpr {
                                                                                        cond: Rel(
                                                                                            RelExpr {
                                                                                                lhs: Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                                op: Neq,
                                                                                                rhs: Var(
                                                                                                    "null",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        then: Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "Heap",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "null",
                                                                                                            ),
                                                                                                            FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "list",
                                                                                                                    args: [
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "Heap",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "x_1",
                                                                                                                                            ),
                                                                                                                                            Var(
                                                                                                                                                "next",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                        else_: Var(
                                                                                            "EmptyFrame",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Neg(
                                            NegExpr {
                                                op: Logical,
                                                expr: FuncCall(
                                                    FuncCall {
                                                        target: "HasDirectPerm",
                                                        args: [
                                                            Var(
                                                                "Mask",
                                                            ),
                                                            Var(
                                                                "null",
                                                            ),
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "list",
                                                                    args: [
                                                                        Var(
                                                                            "x_1",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list#sm",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "ZeroPMask",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "freshVersion",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "freshVersion",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list#sm",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "f_6",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list#sm",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "next",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "newPMask",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: Quant(
                                                        QuantExpr {
                                                            kind: ForAll,
                                                            body: QuantBody {
                                                                type_params: [
                                                                    "A",
                                                                    "B",
                                                                ],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "o_4",
                                                                                ],
                                                                                type_: App(
                                                                                    TypeApp {
                                                                                        head: "Ref",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "f_9",
                                                                                ],
                                                                                type_: Atom(
                                                                                    Paren(
                                                                                        App(
                                                                                            TypeApp {
                                                                                                head: "Field",
                                                                                                tail: Some(
                                                                                                    App(
                                                                                                        TypeApp {
                                                                                                            head: "A",
                                                                                                            tail: Some(
                                                                                                                App(
                                                                                                                    TypeApp {
                                                                                                                        head: "B",
                                                                                                                        tail: None,
                                                                                                                    },
                                                                                                                ),
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [
                                                                    Trigger(
                                                                        [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "newPMask",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o_4",
                                                                                                ),
                                                                                                Var(
                                                                                                    "f_9",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                                expr: Implies(
                                                                    ImpliesExpr {
                                                                        lhs: Logical(
                                                                            LogicalExpr {
                                                                                lhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "null",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "list#sm",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "x_1",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "o_4",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "f_9",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Or,
                                                                                rhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "null",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "list#sm",
                                                                                                            args: [
                                                                                                                Array(
                                                                                                                    ArrayExpr {
                                                                                                                        expr: Var(
                                                                                                                            "Heap",
                                                                                                                        ),
                                                                                                                        subscripts: [
                                                                                                                            ArraySubscript {
                                                                                                                                keys: [
                                                                                                                                    Var(
                                                                                                                                        "x_1",
                                                                                                                                    ),
                                                                                                                                    Var(
                                                                                                                                        "next",
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                                value: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "o_4",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "f_9",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        rhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "newPMask",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "o_4",
                                                                                            ),
                                                                                            Var(
                                                                                                "f_9",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list#sm",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "newPMask",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "NoPerm",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "FullPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Expr(
                                                        Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Neq,
                                                                rhs: Var(
                                                                    "NoPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    then: [
                                                        LabelOrCmd(
                                                            Claim(
                                                                ClaimCmd {
                                                                    kind: Assert,
                                                                    attrs: [
                                                                        Attr(
                                                                            AttrContent {
                                                                                ident: "msg",
                                                                                params: [
                                                                                    String(
                                                                                        StringLit {
                                                                                            text: "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@34.10) [92]",
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    proposition: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "perm",
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Mask",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "null",
                                                                                                ),
                                                                                                FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "list",
                                                                                                        args: [
                                                                                                            Var(
                                                                                                                "x_1",
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    else_: None,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Mask",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Mask",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Var(
                                                                    "perm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "ExhaleHeap",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "IdenticalOnKnownLocations",
                                                            args: [
                                                                Var(
                                                                    "Heap",
                                                                ),
                                                                Var(
                                                                    "ExhaleHeap",
                                                                ),
                                                                Var(
                                                                    "Mask",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "ExhaleHeap",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: BoolLit(
                                                        false,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "msg",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "  Assert might fail. Assertion length(x) == 7 might not hold. (predicate_exhale.vpr@34.3) [93]",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "length",
                                                    args: [
                                                        Var(
                                                            "Heap",
                                                        ),
                                                        Var(
                                                            "x_1",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "7",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "list#trigger",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "list",
                                                        args: [
                                                            Var(
                                                                "x_1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "Heap",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "null",
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "CombineFrames",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "FrameFragment",
                                                                args: [
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "Heap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "x_1",
                                                                                        ),
                                                                                        Var(
                                                                                            "f_6",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "CombineFrames",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FrameFragment",
                                                                            args: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "x_1",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FrameFragment",
                                                                            args: [
                                                                                IfThenElse(
                                                                                    IfThenElseExpr {
                                                                                        cond: Rel(
                                                                                            RelExpr {
                                                                                                lhs: Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                                op: Neq,
                                                                                                rhs: Var(
                                                                                                    "null",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        then: Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "Heap",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "null",
                                                                                                            ),
                                                                                                            FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "list",
                                                                                                                    args: [
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "Heap",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "x_1",
                                                                                                                                            ),
                                                                                                                                            Var(
                                                                                                                                                "next",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                        else_: Var(
                                                                                            "EmptyFrame",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "NoPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "FullPerm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "NoPerm",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "msg",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "  Unfolding list(x) might fail. There might be insufficient permission to access list(x). (predicate_exhale.vpr@36.3) [95]",
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "perm",
                                                            ),
                                                            op: Le,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "Mask",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "null",
                                                                                ),
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "list",
                                                                                        args: [
                                                                                            Var(
                                                                                                "x_1",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Neg(
                                            NegExpr {
                                                op: Logical,
                                                expr: FuncCall(
                                                    FuncCall {
                                                        target: "HasDirectPerm",
                                                        args: [
                                                            Var(
                                                                "Mask",
                                                            ),
                                                            Var(
                                                                "null",
                                                            ),
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "list",
                                                                    args: [
                                                                        Var(
                                                                            "x_1",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "newVersion",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "newVersion",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "FullPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "x_1",
                                            ),
                                            op: Neq,
                                            rhs: Var(
                                                "null",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "f_6",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "f_6",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "FullPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "x_1",
                                            ),
                                            op: Neq,
                                            rhs: Var(
                                                "null",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "next",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "FullPerm",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Mask",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "x_1",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Mask",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "perm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "InsidePredicate",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Heap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                                Var(
                                                                                                    "next",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "state",
                                                            args: [
                                                                Var(
                                                                    "Heap",
                                                                ),
                                                                Var(
                                                                    "Mask",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "msg",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "  Assert might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@37.3) [96]",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "HasDirectPerm",
                                            args: [
                                                Var(
                                                    "Mask",
                                                ),
                                                Var(
                                                    "x_1",
                                                ),
                                                Var(
                                                    "f_6",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "msg",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "  Assert might fail. Assertion x.f == 5 might not hold. (predicate_exhale.vpr@37.3) [97]",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "Heap",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                                Var(
                                                                    "f_6",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "5",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "NoPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "FullPerm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "NoPerm",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "msg",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "  Folding list(x) might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@38.3) [99]",
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "perm",
                                                            ),
                                                            op: Le,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "Mask",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                                Var(
                                                                                    "f_6",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "f_6",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "f_6",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "NoPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "FullPerm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "NoPerm",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "msg",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "  Folding list(x) might fail. There might be insufficient permission to access x.next. (predicate_exhale.vpr@38.3) [101]",
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "perm",
                                                            ),
                                                            op: Le,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "Mask",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                                Var(
                                                                                    "next",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "next",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "NoPerm",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "FullPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Expr(
                                                        Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Neq,
                                                                rhs: Var(
                                                                    "NoPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    then: [
                                                        LabelOrCmd(
                                                            Claim(
                                                                ClaimCmd {
                                                                    kind: Assert,
                                                                    attrs: [
                                                                        Attr(
                                                                            AttrContent {
                                                                                ident: "msg",
                                                                                params: [
                                                                                    String(
                                                                                        StringLit {
                                                                                            text: "  Folding list(x) might fail. There might be insufficient permission to access list(x.next). (predicate_exhale.vpr@38.3) [103]",
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    proposition: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "perm",
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Mask",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "null",
                                                                                                ),
                                                                                                FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "list",
                                                                                                        args: [
                                                                                                            Array(
                                                                                                                ArrayExpr {
                                                                                                                    expr: Var(
                                                                                                                        "Heap",
                                                                                                                    ),
                                                                                                                    subscripts: [
                                                                                                                        ArraySubscript {
                                                                                                                            keys: [
                                                                                                                                Var(
                                                                                                                                    "x_1",
                                                                                                                                ),
                                                                                                                                Var(
                                                                                                                                    "next",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            value: None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    else_: None,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Mask",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "x_1",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Mask",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Var(
                                                                    "perm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "InsidePredicate",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Heap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                                Var(
                                                                                                    "next",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "InsidePredicate",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Heap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                                Var(
                                                                                                    "next",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "InsidePredicate",
                                                            args: [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Heap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                                Var(
                                                                                                    "next",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Heap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "FullPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "list#trigger",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "list",
                                                        args: [
                                                            Var(
                                                                "x_1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "Heap",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "null",
                                                                ),
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "list",
                                                                        args: [
                                                                            Var(
                                                                                "x_1",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "CombineFrames",
                                                    args: [
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "FrameFragment",
                                                                args: [
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "Heap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "x_1",
                                                                                        ),
                                                                                        Var(
                                                                                            "f_6",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "CombineFrames",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FrameFragment",
                                                                            args: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "x_1",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "FrameFragment",
                                                                            args: [
                                                                                IfThenElse(
                                                                                    IfThenElseExpr {
                                                                                        cond: Rel(
                                                                                            RelExpr {
                                                                                                lhs: Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "Heap",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "x_1",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "next",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                                op: Neq,
                                                                                                rhs: Var(
                                                                                                    "null",
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        then: Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "Heap",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "null",
                                                                                                            ),
                                                                                                            FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "list",
                                                                                                                    args: [
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "Heap",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "x_1",
                                                                                                                                            ),
                                                                                                                                            Var(
                                                                                                                                                "next",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                        else_: Var(
                                                                                            "EmptyFrame",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Neg(
                                            NegExpr {
                                                op: Logical,
                                                expr: FuncCall(
                                                    FuncCall {
                                                        target: "HasDirectPerm",
                                                        args: [
                                                            Var(
                                                                "Mask",
                                                            ),
                                                            Var(
                                                                "null",
                                                            ),
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "list",
                                                                    args: [
                                                                        Var(
                                                                            "x_1",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list#sm",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "ZeroPMask",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "freshVersion",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "freshVersion",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list#sm",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "f_6",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list#sm",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                                [
                                                    Var(
                                                        "x_1",
                                                    ),
                                                    Var(
                                                        "next",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Heap",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "x_1",
                                                                    ),
                                                                    Var(
                                                                        "next",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "newPMask",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: Quant(
                                                        QuantExpr {
                                                            kind: ForAll,
                                                            body: QuantBody {
                                                                type_params: [
                                                                    "A",
                                                                    "B",
                                                                ],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "o_5",
                                                                                ],
                                                                                type_: App(
                                                                                    TypeApp {
                                                                                        head: "Ref",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "f_10",
                                                                                ],
                                                                                type_: Atom(
                                                                                    Paren(
                                                                                        App(
                                                                                            TypeApp {
                                                                                                head: "Field",
                                                                                                tail: Some(
                                                                                                    App(
                                                                                                        TypeApp {
                                                                                                            head: "A",
                                                                                                            tail: Some(
                                                                                                                App(
                                                                                                                    TypeApp {
                                                                                                                        head: "B",
                                                                                                                        tail: None,
                                                                                                                    },
                                                                                                                ),
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                    ),
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [
                                                                    Trigger(
                                                                        [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "newPMask",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o_5",
                                                                                                ),
                                                                                                Var(
                                                                                                    "f_10",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    ),
                                                                ],
                                                                expr: Implies(
                                                                    ImpliesExpr {
                                                                        lhs: Logical(
                                                                            LogicalExpr {
                                                                                lhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "null",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "list#sm",
                                                                                                            args: [
                                                                                                                Var(
                                                                                                                    "x_1",
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "o_5",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "f_10",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Or,
                                                                                rhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "Heap",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "null",
                                                                                                    ),
                                                                                                    FuncCall(
                                                                                                        FuncCall {
                                                                                                            target: "list#sm",
                                                                                                            args: [
                                                                                                                Array(
                                                                                                                    ArrayExpr {
                                                                                                                        expr: Var(
                                                                                                                            "Heap",
                                                                                                                        ),
                                                                                                                        subscripts: [
                                                                                                                            ArraySubscript {
                                                                                                                                keys: [
                                                                                                                                    Var(
                                                                                                                                        "x_1",
                                                                                                                                    ),
                                                                                                                                    Var(
                                                                                                                                        "next",
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                                value: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "o_5",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "f_10",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        rhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "newPMask",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "o_5",
                                                                                            ),
                                                                                            Var(
                                                                                                "f_10",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list#sm",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "newPMask",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "NoPerm",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "FullPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Expr(
                                                        Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Neq,
                                                                rhs: Var(
                                                                    "NoPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    then: [
                                                        LabelOrCmd(
                                                            Claim(
                                                                ClaimCmd {
                                                                    kind: Assert,
                                                                    attrs: [
                                                                        Attr(
                                                                            AttrContent {
                                                                                ident: "msg",
                                                                                params: [
                                                                                    String(
                                                                                        StringLit {
                                                                                            text: "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@40.10) [104]",
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    proposition: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "perm",
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Mask",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "null",
                                                                                                ),
                                                                                                FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "list",
                                                                                                        args: [
                                                                                                            Var(
                                                                                                                "x_1",
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    else_: None,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Mask",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Mask",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Var(
                                                                    "perm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "ExhaleHeap",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "IdenticalOnKnownLocations",
                                                            args: [
                                                                Var(
                                                                    "Heap",
                                                                ),
                                                                Var(
                                                                    "ExhaleHeap",
                                                                ),
                                                                Var(
                                                                    "Mask",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "ExhaleHeap",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: BoolLit(
                                                        false,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "msg",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "  Assert might fail. Assertion length(x) == 7 might not hold. (predicate_exhale.vpr@40.3) [105]",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "length",
                                                    args: [
                                                        Var(
                                                            "Heap",
                                                        ),
                                                        Var(
                                                            "x_1",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "7",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "NoPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "FullPerm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "perm",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "NoPerm",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assert,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "msg",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "  Exhale might fail. There might be insufficient permission to access list(x). (predicate_exhale.vpr@42.3) [107]",
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "perm",
                                                            ),
                                                            op: Le,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "Mask",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "null",
                                                                                ),
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "list",
                                                                                        args: [
                                                                                            Var(
                                                                                                "x_1",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Sub,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Havoc(
                                HavocCmd {
                                    vars: [
                                        "ExhaleHeap",
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "IdenticalOnKnownLocations",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "ExhaleHeap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Heap",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "ExhaleHeap",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "perm",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "FullPerm",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "Mask",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "null",
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "list",
                                                            args: [
                                                                Var(
                                                                    "x_1",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Term(
                                            Term {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "Mask",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Add,
                                                rhs: Var(
                                                    "perm",
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Asterisk,
                                    then: [
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "NoPerm",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "perm",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Add,
                                                                rhs: Var(
                                                                    "FullPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Expr(
                                                        Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "perm",
                                                                ),
                                                                op: Neq,
                                                                rhs: Var(
                                                                    "NoPerm",
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    then: [
                                                        LabelOrCmd(
                                                            Claim(
                                                                ClaimCmd {
                                                                    kind: Assert,
                                                                    attrs: [
                                                                        Attr(
                                                                            AttrContent {
                                                                                ident: "msg",
                                                                                params: [
                                                                                    String(
                                                                                        StringLit {
                                                                                            text: "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@45.10) [108]",
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                    proposition: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "perm",
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "Mask",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "null",
                                                                                                ),
                                                                                                FuncCall(
                                                                                                    FuncCall {
                                                                                                        target: "list",
                                                                                                        args: [
                                                                                                            Var(
                                                                                                                "x_1",
                                                                                                            ),
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    else_: None,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Mask",
                                                            subscripts: [
                                                                [
                                                                    Var(
                                                                        "null",
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "list",
                                                                            args: [
                                                                                Var(
                                                                                    "x_1",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            ],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "Mask",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "null",
                                                                                    ),
                                                                                    FuncCall(
                                                                                        FuncCall {
                                                                                            target: "list",
                                                                                            args: [
                                                                                                Var(
                                                                                                    "x_1",
                                                                                                ),
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Var(
                                                                    "perm",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Havoc(
                                                HavocCmd {
                                                    vars: [
                                                        "ExhaleHeap",
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: FuncCall(
                                                        FuncCall {
                                                            target: "IdenticalOnKnownLocations",
                                                            args: [
                                                                Var(
                                                                    "Heap",
                                                                ),
                                                                Var(
                                                                    "ExhaleHeap",
                                                                ),
                                                                Var(
                                                                    "Mask",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "Heap",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Var(
                                                            "ExhaleHeap",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [],
                                                    proposition: BoolLit(
                                                        false,
                                                    ),
                                                },
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "msg",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "Assert might fail. Assertion length(x) == 7 might not hold. (predicate_exhale.vpr@45.3) [109]",
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "length",
                                                    args: [
                                                        Var(
                                                            "Heap",
                                                        ),
                                                        Var(
                                                            "x_1",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "7",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "state",
                                            args: [
                                                Var(
                                                    "Heap",
                                                ),
                                                Var(
                                                    "Mask",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
function state(Heap: HeapType, Mask: MaskType): bool;

type Ref;

var Heap: HeapType;

const null: Ref;

type Field A B;

type NormalField;

type HeapType = <A, B>[Ref, Field A B]B;

const unique $allocated: Field NormalField bool;

axiom (forall o: Ref, f: (Field NormalField Ref), Heap: HeapType :: {Heap[o, f]} Heap[o, $allocated] ==> Heap[Heap[o, f], $allocated]);

function succHeap(Heap0: HeapType, Heap1: HeapType): bool;

function succHeapTrans(Heap0: HeapType, Heap1: HeapType): bool;

function IdenticalOnKnownLocations(Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType): bool;

function IsPredicateField<A, B>(f_1: (Field A B)): bool;

function IsWandField<A, B>(f_1: (Field A B)): bool;

function getPredicateId<A, B>(f_1: (Field A B)): int;

axiom (forall <A, B> Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, o: Ref, f_2: (Field A B) :: {IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), ExhaleHeap[o, f_2]} IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> HasDirectPerm(Mask, o, f_2) ==> Heap[o, f_2] == ExhaleHeap[o, f_2]);

axiom (forall <C> Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, pm_f: (Field C FrameType) :: {IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), IsPredicateField(pm_f), ExhaleHeap[null, PredicateMaskField(pm_f)]} IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> HasDirectPerm(Mask, null, pm_f) && IsPredicateField(pm_f) ==> Heap[null, PredicateMaskField(pm_f)] == ExhaleHeap[null, PredicateMaskField(pm_f)]);

axiom (forall <C> Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, pm_f: (Field C FrameType) :: {IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), ExhaleHeap[null, pm_f], IsPredicateField(pm_f)} IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> HasDirectPerm(Mask, null, pm_f) && IsPredicateField(pm_f) ==> (forall <A, B> o2: Ref, f_2: (Field A B) :: {ExhaleHeap[o2, f_2]} Heap[null, PredicateMaskField(pm_f)][o2, f_2] ==> Heap[o2, f_2] == ExhaleHeap[o2, f_2]));

axiom (forall <C> Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, pm_f: (Field C FrameType) :: {IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), IsWandField(pm_f), ExhaleHeap[null, WandMaskField(pm_f)]} IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> HasDirectPerm(Mask, null, pm_f) && IsWandField(pm_f) ==> Heap[null, WandMaskField(pm_f)] == ExhaleHeap[null, WandMaskField(pm_f)]);

axiom (forall <C> Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, pm_f: (Field C FrameType) :: {IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), IsWandField(pm_f)} IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> HasDirectPerm(Mask, null, pm_f) && IsWandField(pm_f) ==> (forall <A, B> o2: Ref, f_2: (Field A B) :: {ExhaleHeap[o2, f_2]} Heap[null, WandMaskField(pm_f)][o2, f_2] ==> Heap[o2, f_2] == ExhaleHeap[o2, f_2]));

axiom (forall Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, o: Ref :: {IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), ExhaleHeap[o, $allocated]} IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> Heap[o, $allocated] ==> ExhaleHeap[o, $allocated]);

axiom (forall <A, B> Heap: HeapType, o: Ref, f_2: (Field A B), v: B :: {Heap[o, f_2 := v]} succHeap(Heap, Heap[o, f_2 := v]));

axiom (forall Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType :: {IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask)} IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> succHeap(Heap, ExhaleHeap));

axiom (forall Heap0: HeapType, Heap1: HeapType :: {succHeap(Heap0, Heap1)} succHeap(Heap0, Heap1) ==> succHeapTrans(Heap0, Heap1));

axiom (forall Heap0: HeapType, Heap1: HeapType, Heap2: HeapType :: {succHeapTrans(Heap0, Heap1), succHeap(Heap1, Heap2)} succHeapTrans(Heap0, Heap1) && succHeap(Heap1, Heap2) ==> succHeapTrans(Heap0, Heap2));

type Perm = real;

type MaskType = <A, B>[Ref, Field A B]Perm;

var Mask: MaskType;

const ZeroMask: MaskType;

axiom (forall <A, B> o_1: Ref, f_3: (Field A B) :: {ZeroMask[o_1, f_3]} ZeroMask[o_1, f_3] == NoPerm);

type PMaskType = <A, B>[Ref, Field A B]bool;

const ZeroPMask: PMaskType;

axiom (forall <A, B> o_1: Ref, f_3: (Field A B) :: {ZeroPMask[o_1, f_3]} !ZeroPMask[o_1, f_3]);

function PredicateMaskField<A>(f_4: (Field A FrameType)): Field A PMaskType;

function WandMaskField<A>(f_4: (Field A FrameType)): Field A PMaskType;

const NoPerm: Perm;

axiom NoPerm == 0.000000000;

const FullPerm: Perm;

axiom FullPerm == 1.000000000;

function Perm(a: real, b: real): Perm;

function GoodMask(Mask: MaskType): bool;

axiom (forall Heap: HeapType, Mask: MaskType :: {state(Heap, Mask)} state(Heap, Mask) ==> GoodMask(Mask));

axiom (forall <A, B> Mask: MaskType, o_1: Ref, f_3: (Field A B) :: {GoodMask(Mask), Mask[o_1, f_3]} GoodMask(Mask) ==> Mask[o_1, f_3] >= NoPerm && (GoodMask(Mask) && !IsPredicateField(f_3) && !IsWandField(f_3) ==> Mask[o_1, f_3] <= FullPerm));

function HasDirectPerm<A, B>(Mask: MaskType, o_1: Ref, f_3: (Field A B)): bool;

axiom (forall <A, B> Mask: MaskType, o_1: Ref, f_3: (Field A B) :: {HasDirectPerm(Mask, o_1, f_3)} HasDirectPerm(Mask, o_1, f_3) <==> Mask[o_1, f_3] > NoPerm);

function sumMask(ResultMask: MaskType, SummandMask1: MaskType, SummandMask2: MaskType): bool;

axiom (forall <A, B> ResultMask: MaskType, SummandMask1: MaskType, SummandMask2: MaskType, o_1: Ref, f_3: (Field A B) :: {sumMask(ResultMask, SummandMask1, SummandMask2), ResultMask[o_1, f_3]} {sumMask(ResultMask, SummandMask1, SummandMask2), SummandMask1[o_1, f_3]} {sumMask(ResultMask, SummandMask1, SummandMask2), SummandMask2[o_1, f_3]} sumMask(ResultMask, SummandMask1, SummandMask2) ==> ResultMask[o_1, f_3] == SummandMask1[o_1, f_3] + SummandMask2[o_1, f_3]);

const AssumeFunctionsAbove: int;

type FrameType;

const EmptyFrame: FrameType;

function FrameFragment<T>(t: T): FrameType;

function ConditionalFrame(p: Perm, f_5: FrameType): FrameType;

function dummyFunction<T>(t: T): bool;

function CombineFrames(a_1: FrameType, b_1: FrameType): FrameType;

axiom (forall p: Perm, f_5: FrameType :: {ConditionalFrame(p, f_5)} ConditionalFrame(p, f_5) == (if p > 0.000000000 then f_5 else EmptyFrame));

function InsidePredicate<A, B>(p: (Field A FrameType), v_1: FrameType, q: (Field B FrameType), w: FrameType): bool;

axiom (forall <A, B, C> p: (Field A FrameType), v_1: FrameType, q: (Field B FrameType), w: FrameType, r: (Field C FrameType), u: FrameType :: {InsidePredicate(p, v_1, q, w), InsidePredicate(q, w, r, u)} InsidePredicate(p, v_1, q, w) && InsidePredicate(q, w, r, u) ==> InsidePredicate(p, v_1, r, u));

axiom (forall <A> p: (Field A FrameType), v_1: FrameType, w: FrameType :: {InsidePredicate(p, v_1, p, w)} !InsidePredicate(p, v_1, p, w));

type MyTypeDomainType T;

function get<T>(x: T): T;

axiom (forall <T> x_1: T :: {get(x_1) : T} get(x_1) : T != x_1);

const unique f_6: Field NormalField int;

axiom !IsPredicateField(f_6);

axiom !IsWandField(f_6);

const unique next: Field NormalField Ref;

axiom !IsPredicateField(next);

axiom !IsWandField(next);

function length(Heap: HeapType, x_1: Ref): int;

function length'(Heap: HeapType, x_1: Ref): int;

axiom (forall Heap: HeapType, x_1: Ref :: {length(Heap, x_1)} length(Heap, x_1) == length'(Heap, x_1) && dummyFunction(length#triggerStateless(x_1)));

axiom (forall Heap: HeapType, x_1: Ref :: {length'(Heap, x_1)} dummyFunction(length#triggerStateless(x_1)));

axiom (forall Heap: HeapType, Mask: MaskType, x_1: Ref :: {state(Heap, Mask), length(Heap, x_1)} {state(Heap, Mask), length#triggerStateless(x_1), list#trigger(Heap, list(x_1))} state(Heap, Mask) && AssumeFunctionsAbove < 0 ==> length(Heap, x_1) == 1 + (if Heap[x_1, next] != null then length'(Heap, Heap[x_1, next]) else 0));

function length#frame(frame: FrameType, x_1: Ref): int;

axiom (forall Heap: HeapType, Mask: MaskType, x_1: Ref :: {state(Heap, Mask), length'(Heap, x_1)} {state(Heap, Mask), length#triggerStateless(x_1), list#trigger(Heap, list(x_1))} state(Heap, Mask) ==> length'(Heap, x_1) == length#frame(Heap[null, list(x_1)], x_1));

function length#trigger(frame: FrameType, x_1: Ref): bool;

function length#triggerStateless(x_1: Ref): int;

procedure length#definedness(x_1: Ref) returns (Result: int)
  modifies Heap, Mask;
{
  var perm: Perm;
  var UnfoldingHeap: HeapType;
  var UnfoldingMask: MaskType;
  var ExhaleHeap: HeapType;
  var newPMask: PMaskType;

  Mask := ZeroMask;
  assume state(Heap, Mask);
  assume Heap[x_1, $allocated];
  assume AssumeFunctionsAbove == 0;
  assume Heap == old (Heap);
  assume Mask == old (Mask);
  perm := FullPerm;
  Mask[null, list(x_1)] := Mask[null, list(x_1)] + perm;
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  UnfoldingHeap := Heap;
  UnfoldingMask := Mask;
  assume list#trigger(UnfoldingHeap, list(x_1));
  assume UnfoldingHeap[null, list(x_1)] == CombineFrames(FrameFragment(UnfoldingHeap[x_1, f_6]), CombineFrames(FrameFragment(UnfoldingHeap[x_1, next]), FrameFragment(if UnfoldingHeap[x_1, next] != null then UnfoldingHeap[null, list(UnfoldingHeap[x_1, next])] else EmptyFrame)));
  perm := NoPerm;
  perm := perm + FullPerm;
  if (perm != NoPerm) {
    assert {:msg "  Function might not be well-formed. There might be insufficient permission to access list(x). (predicate_exhale.vpr@15.1) [77]"} perm <= UnfoldingMask[null, list(x_1)];
  }
  UnfoldingMask[null, list(x_1)] := UnfoldingMask[null, list(x_1)] - perm;
  perm := FullPerm;
  assume x_1 != null;
  UnfoldingMask[x_1, f_6] := UnfoldingMask[x_1, f_6] + perm;
  assume state(UnfoldingHeap, UnfoldingMask);
  perm := FullPerm;
  assume x_1 != null;
  UnfoldingMask[x_1, next] := UnfoldingMask[x_1, next] + perm;
  assume state(UnfoldingHeap, UnfoldingMask);
  if (UnfoldingHeap[x_1, next] != null) {
    perm := FullPerm;
    UnfoldingMask[null, list(UnfoldingHeap[x_1, next])] := UnfoldingMask[null, list(UnfoldingHeap[x_1, next])] + perm;
    assume InsidePredicate(list(x_1), UnfoldingHeap[null, list(x_1)], list(UnfoldingHeap[x_1, next]), UnfoldingHeap[null, list(UnfoldingHeap[x_1, next])]);
    assume state(UnfoldingHeap, UnfoldingMask);
  }
  assume state(UnfoldingHeap, UnfoldingMask);
  assert {:msg "  Function might not be well-formed. There might be insufficient permission to access x.next. (predicate_exhale.vpr@15.1) [78]"} HasDirectPerm(UnfoldingMask, x_1, next);
  if (UnfoldingHeap[x_1, next] != null) {
    assert {:msg "  Function might not be well-formed. There might be insufficient permission to access x.next. (predicate_exhale.vpr@15.1) [79]"} HasDirectPerm(UnfoldingMask, x_1, next);
    if (*) {
      perm := NoPerm;
      perm := perm + FullPerm;
      if (perm != NoPerm) {
        assert {:msg "  Precondition of function length might not hold. There might be insufficient permission to access list(x.next). (predicate_exhale.vpr@18.48) [80]"} perm <= UnfoldingMask[null, list(UnfoldingHeap[x_1, next])];
      }
      UnfoldingMask[null, list(UnfoldingHeap[x_1, next])] := UnfoldingMask[null, list(UnfoldingHeap[x_1, next])] - perm;
      havoc ExhaleHeap;
      assume IdenticalOnKnownLocations(UnfoldingHeap, ExhaleHeap, UnfoldingMask);
      UnfoldingHeap := ExhaleHeap;
      assume false;
    } else {
      assume length#trigger(UnfoldingHeap[null, list(UnfoldingHeap[x_1, next])], UnfoldingHeap[x_1, next]);
    }
  }
  Heap[null, list#sm(x_1)][x_1, f_6] := true;
  Heap[null, list#sm(x_1)][x_1, next] := true;
  if (Heap[x_1, next] != null) {
    havoc newPMask;
    assume (forall <A, B> o_2: Ref, f_7: (Field A B) :: {newPMask[o_2, f_7]} Heap[null, list#sm(x_1)][o_2, f_7] || Heap[null, list#sm(Heap[x_1, next])][o_2, f_7] ==> newPMask[o_2, f_7]);
    Heap[null, list#sm(x_1)] := newPMask;
  }
  assume state(Heap, Mask);
  Heap[null, list#sm(x_1)][x_1, f_6] := true;
  Heap[null, list#sm(x_1)][x_1, next] := true;
  if (Heap[x_1, next] != null) {
    havoc newPMask;
    assume (forall <A, B> o_3: Ref, f_8: (Field A B) :: {newPMask[o_3, f_8]} Heap[null, list#sm(x_1)][o_3, f_8] || Heap[null, list#sm(Heap[x_1, next])][o_3, f_8] ==> newPMask[o_3, f_8]);
    Heap[null, list#sm(x_1)] := newPMask;
  }
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  Result := 1 + (if Heap[x_1, next] != null then length(Heap, Heap[x_1, next]) else 0);
}

type PredicateType_list;

function list(x_1: Ref): Field PredicateType_list FrameType;

function list#sm(x_1: Ref): Field PredicateType_list PMaskType;

axiom (forall x_1: Ref :: {PredicateMaskField(list(x_1))} PredicateMaskField(list(x_1)) == list#sm(x_1));

axiom (forall x_1: Ref :: {list(x_1)} IsPredicateField(list(x_1)));

axiom (forall x_1: Ref :: {list(x_1)} getPredicateId(list(x_1)) == 0);

function list#trigger<A>(Heap: HeapType, pred: (Field A FrameType)): bool;

function list#everUsed<A>(pred: (Field A FrameType)): bool;

axiom (forall x_1: Ref, x2: Ref :: {list(x_1), list(x2)} list(x_1) == list(x2) ==> x_1 == x2);

axiom (forall x_1: Ref, x2: Ref :: {list#sm(x_1), list#sm(x2)} list#sm(x_1) == list#sm(x2) ==> x_1 == x2);

axiom (forall Heap: HeapType, x_1: Ref :: {list#trigger(Heap, list(x_1))} list#everUsed(list(x_1)));

procedure test1(x_1: Ref)
  modifies Heap, Mask;
{
  var perm: Perm;
  var ExhaleHeap: HeapType;
  var newVersion: FrameType;
  var freshVersion: FrameType;
  var newPMask: PMaskType;

  Mask := ZeroMask;
  assume state(Heap, Mask);
  assume AssumeFunctionsAbove == -1;
  assume Heap[x_1, $allocated];
  perm := FullPerm;
  Mask[null, list(x_1)] := Mask[null, list(x_1)] + perm;
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  assume Heap == old (Heap);
  assume Mask == old (Mask);
  if (*) {
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@28.10) [81]"} perm <= Mask[null, list(x_1)];
    }
    Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
    havoc ExhaleHeap;
    assume IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask);
    Heap := ExhaleHeap;
    assume false;
  }
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  assume length(Heap, x_1) == 7;
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  assume list#trigger(Heap, list(x_1));
  assume Heap[null, list(x_1)] == CombineFrames(FrameFragment(Heap[x_1, f_6]), CombineFrames(FrameFragment(Heap[x_1, next]), FrameFragment(if Heap[x_1, next] != null then Heap[null, list(Heap[x_1, next])] else EmptyFrame)));
  perm := NoPerm;
  perm := perm + FullPerm;
  if (perm != NoPerm) {
    assert {:msg "  Unfolding list(x) might fail. There might be insufficient permission to access list(x). (predicate_exhale.vpr@30.3) [83]"} perm <= Mask[null, list(x_1)];
  }
  Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
  if (!HasDirectPerm(Mask, null, list(x_1))) {
    havoc newVersion;
    Heap[null, list(x_1)] := newVersion;
  }
  perm := FullPerm;
  assume x_1 != null;
  Mask[x_1, f_6] := Mask[x_1, f_6] + perm;
  assume state(Heap, Mask);
  perm := FullPerm;
  assume x_1 != null;
  Mask[x_1, next] := Mask[x_1, next] + perm;
  assume state(Heap, Mask);
  if (Heap[x_1, next] != null) {
    perm := FullPerm;
    Mask[null, list(Heap[x_1, next])] := Mask[null, list(Heap[x_1, next])] + perm;
    assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
    assume state(Heap, Mask);
  }
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  assert {:msg "  Inhale might fail. There might be insufficient permission to access x.next. (predicate_exhale.vpr@31.3) [84]"} HasDirectPerm(Mask, x_1, next);
  assume state(Heap, Mask);
  assume Heap[x_1, next] != null;
  assume state(Heap, Mask);
  assert {:msg "  Inhale might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@31.3) [85]"} HasDirectPerm(Mask, x_1, f_6);
  assume state(Heap, Mask);
  assume Heap[x_1, f_6] == 5;
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  perm := NoPerm;
  perm := perm + FullPerm;
  if (perm != NoPerm) {
    assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@32.3) [87]"} perm <= Mask[x_1, f_6];
  }
  Mask[x_1, f_6] := Mask[x_1, f_6] - perm;
  perm := NoPerm;
  perm := perm + FullPerm;
  if (perm != NoPerm) {
    assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access x.next. (predicate_exhale.vpr@32.3) [89]"} perm <= Mask[x_1, next];
  }
  Mask[x_1, next] := Mask[x_1, next] - perm;
  if (Heap[x_1, next] != null) {
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access list(x.next). (predicate_exhale.vpr@32.3) [91]"} perm <= Mask[null, list(Heap[x_1, next])];
    }
    Mask[null, list(Heap[x_1, next])] := Mask[null, list(Heap[x_1, next])] - perm;
    assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
  }
  if (Heap[x_1, next] != null) {
    assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
  }
  if (Heap[x_1, next] != null) {
    assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
  }
  perm := FullPerm;
  Mask[null, list(x_1)] := Mask[null, list(x_1)] + perm;
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  assume list#trigger(Heap, list(x_1));
  assume Heap[null, list(x_1)] == CombineFrames(FrameFragment(Heap[x_1, f_6]), CombineFrames(FrameFragment(Heap[x_1, next]), FrameFragment(if Heap[x_1, next] != null then Heap[null, list(Heap[x_1, next])] else EmptyFrame)));
  if (!HasDirectPerm(Mask, null, list(x_1))) {
    Heap[null, list#sm(x_1)] := ZeroPMask;
    havoc freshVersion;
    Heap[null, list(x_1)] := freshVersion;
  }
  Heap[null, list#sm(x_1)][x_1, f_6] := true;
  Heap[null, list#sm(x_1)][x_1, next] := true;
  if (Heap[x_1, next] != null) {
    havoc newPMask;
    assume (forall <A, B> o_4: Ref, f_9: (Field A B) :: {newPMask[o_4, f_9]} Heap[null, list#sm(x_1)][o_4, f_9] || Heap[null, list#sm(Heap[x_1, next])][o_4, f_9] ==> newPMask[o_4, f_9]);
    Heap[null, list#sm(x_1)] := newPMask;
  }
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  if (*) {
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@34.10) [92]"} perm <= Mask[null, list(x_1)];
    }
    Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
    havoc ExhaleHeap;
    assume IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask);
    Heap := ExhaleHeap;
    assume false;
  }
  assume state(Heap, Mask);
  assert {:msg "  Assert might fail. Assertion length(x) == 7 might not hold. (predicate_exhale.vpr@34.3) [93]"} length(Heap, x_1) == 7;
  assume state(Heap, Mask);
  assume list#trigger(Heap, list(x_1));
  assume Heap[null, list(x_1)] == CombineFrames(FrameFragment(Heap[x_1, f_6]), CombineFrames(FrameFragment(Heap[x_1, next]), FrameFragment(if Heap[x_1, next] != null then Heap[null, list(Heap[x_1, next])] else EmptyFrame)));
  perm := NoPerm;
  perm := perm + FullPerm;
  if (perm != NoPerm) {
    assert {:msg "  Unfolding list(x) might fail. There might be insufficient permission to access list(x). (predicate_exhale.vpr@36.3) [95]"} perm <= Mask[null, list(x_1)];
  }
  Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
  if (!HasDirectPerm(Mask, null, list(x_1))) {
    havoc newVersion;
    Heap[null, list(x_1)] := newVersion;
  }
  perm := FullPerm;
  assume x_1 != null;
  Mask[x_1, f_6] := Mask[x_1, f_6] + perm;
  assume state(Heap, Mask);
  perm := FullPerm;
  assume x_1 != null;
  Mask[x_1, next] := Mask[x_1, next] + perm;
  assume state(Heap, Mask);
  if (Heap[x_1, next] != null) {
    perm := FullPerm;
    Mask[null, list(Heap[x_1, next])] := Mask[null, list(Heap[x_1, next])] + perm;
    assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
    assume state(Heap, Mask);
  }
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  assert {:msg "  Assert might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@37.3) [96]"} HasDirectPerm(Mask, x_1, f_6);
  assume state(Heap, Mask);
  assert {:msg "  Assert might fail. Assertion x.f == 5 might not hold. (predicate_exhale.vpr@37.3) [97]"} Heap[x_1, f_6] == 5;
  assume state(Heap, Mask);
  perm := NoPerm;
  perm := perm + FullPerm;
  if (perm != NoPerm) {
    assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@38.3) [99]"} perm <= Mask[x_1, f_6];
  }
  Mask[x_1, f_6] := Mask[x_1, f_6] - perm;
  perm := NoPerm;
  perm := perm + FullPerm;
  if (perm != NoPerm) {
    assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access x.next. (predicate_exhale.vpr@38.3) [101]"} perm <= Mask[x_1, next];
  }
  Mask[x_1, next] := Mask[x_1, next] - perm;
  if (Heap[x_1, next] != null) {
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access list(x.next). (predicate_exhale.vpr@38.3) [103]"} perm <= Mask[null, list(Heap[x_1, next])];
    }
    Mask[null, list(Heap[x_1, next])] := Mask[null, list(Heap[x_1, next])] - perm;
    assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
  }
  if (Heap[x_1, next] != null) {
    assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
  }
  if (Heap[x_1, next] != null) {
    assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
  }
  perm := FullPerm;
  Mask[null, list(x_1)] := Mask[null, list(x_1)] + perm;
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  assume list#trigger(Heap, list(x_1));
  assume Heap[null, list(x_1)] == CombineFrames(FrameFragment(Heap[x_1, f_6]), CombineFrames(FrameFragment(Heap[x_1, next]), FrameFragment(if Heap[x_1, next] != null then Heap[null, list(Heap[x_1, next])] else EmptyFrame)));
  if (!HasDirectPerm(Mask, null, list(x_1))) {
    Heap[null, list#sm(x_1)] := ZeroPMask;
    havoc freshVersion;
    Heap[null, list(x_1)] := freshVersion;
  }
  Heap[null, list#sm(x_1)][x_1, f_6] := true;
  Heap[null, list#sm(x_1)][x_1, next] := true;
  if (Heap[x_1, next] != null) {
    havoc newPMask;
    assume (forall <A, B> o_5: Ref, f_10: (Field A B) :: {newPMask[o_5, f_10]} Heap[null, list#sm(x_1)][o_5, f_10] || Heap[null, list#sm(Heap[x_1, next])][o_5, f_10] ==> newPMask[o_5, f_10]);
    Heap[null, list#sm(x_1)] := newPMask;
  }
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  if (*) {
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@40.10) [104]"} perm <= Mask[null, list(x_1)];
    }
    Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
    havoc ExhaleHeap;
    assume IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask);
    Heap := ExhaleHeap;
    assume false;
  }
  assume state(Heap, Mask);
  assert {:msg "  Assert might fail. Assertion length(x) == 7 might not hold. (predicate_exhale.vpr@40.3) [105]"} length(Heap, x_1) == 7;
  assume state(Heap, Mask);
  perm := NoPerm;
  perm := perm + FullPerm;
  if (perm != NoPerm) {
    assert {:msg "  Exhale might fail. There might be insufficient permission to access list(x). (predicate_exhale.vpr@42.3) [107]"} perm <= Mask[null, list(x_1)];
  }
  Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
  havoc ExhaleHeap;
  assume IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask);
  Heap := ExhaleHeap;
  assume state(Heap, Mask);
  perm := FullPerm;
  Mask[null, list(x_1)] := Mask[null, list(x_1)] + perm;
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  assume state(Heap, Mask);
  if (*) {
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@45.10) [108]"} perm <= Mask[null, list(x_1)];
    }
    Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
    havoc ExhaleHeap;
    assume IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask);
    Heap := ExhaleHeap;
    assume false;
  }
  assume state(Heap, Mask);
  assert {:msg "Assert might fail. Assertion length(x) == 7 might not hold. (predicate_exhale.vpr@45.3) [109]"} length(Heap, x_1) == 7;
  assume state(Heap, Mask);
}

[Input - ../../vendor/boogie/Test/viper/predicate_exhale.bpl]
// RUN: %boogie "%s" | %OutputCheck "%s"

// ==================================================
// Preamble of State module.
// ==================================================

function state(Heap: HeapType, Mask: MaskType): bool;

// ==================================================
// Preamble of Heap module.
// ==================================================

type Ref;
var Heap: HeapType;
const null: Ref;
type Field A B;
type NormalField;
type HeapType = <A, B> [Ref, Field A B]B;
const unique $allocated: Field NormalField bool;
axiom (forall o: Ref, f: (Field NormalField Ref), Heap: HeapType ::
  { Heap[o, f] }
  Heap[o, $allocated] ==> Heap[Heap[o, f], $allocated]
);
function succHeap(Heap0: HeapType, Heap1: HeapType): bool;
function succHeapTrans(Heap0: HeapType, Heap1: HeapType): bool;
function IdenticalOnKnownLocations(Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType): bool;
function IsPredicateField<A, B>(f_1: (Field A B)): bool;
function IsWandField<A, B>(f_1: (Field A B)): bool;
function getPredicateId<A, B>(f_1: (Field A B)): int;
// Frame all locations with direct permissions
axiom (forall <A, B> Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, o: Ref, f_2: (Field A B) ::
  { IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), ExhaleHeap[o, f_2] }
  IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> HasDirectPerm(Mask, o, f_2) ==> Heap[o, f_2] == ExhaleHeap[o, f_2]
);
// Frame all predicate mask locations of predicates with direct permission
axiom (forall <C> Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, pm_f: (Field C FrameType) ::
  { IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), IsPredicateField(pm_f), ExhaleHeap[null, PredicateMaskField(pm_f)] }
  IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> HasDirectPerm(Mask, null, pm_f) && IsPredicateField(pm_f) ==> Heap[null, PredicateMaskField(pm_f)] == ExhaleHeap[null, PredicateMaskField(pm_f)]
);
// Frame all locations with known folded permissions
axiom (forall <C> Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, pm_f: (Field C FrameType) ::
  { IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), ExhaleHeap[null, pm_f], IsPredicateField(pm_f) }
  IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> HasDirectPerm(Mask, null, pm_f) && IsPredicateField(pm_f) ==> (forall <A, B> o2: Ref, f_2: (Field A B) ::
    { ExhaleHeap[o2, f_2] }
    Heap[null, PredicateMaskField(pm_f)][o2, f_2] ==> Heap[o2, f_2] == ExhaleHeap[o2, f_2]
  )
);
// Frame all wand mask locations of wands with direct permission
axiom (forall <C> Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, pm_f: (Field C FrameType) ::
  { IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), IsWandField(pm_f), ExhaleHeap[null, WandMaskField(pm_f)] }
  IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> HasDirectPerm(Mask, null, pm_f) && IsWandField(pm_f) ==> Heap[null, WandMaskField(pm_f)] == ExhaleHeap[null, WandMaskField(pm_f)]
);
// Frame all locations in the footprint of magic wands
axiom (forall <C> Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, pm_f: (Field C FrameType) ::
  { IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), IsWandField(pm_f) }
  IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> HasDirectPerm(Mask, null, pm_f) && IsWandField(pm_f) ==> (forall <A, B> o2: Ref, f_2: (Field A B) ::
    { ExhaleHeap[o2, f_2] }
    Heap[null, WandMaskField(pm_f)][o2, f_2] ==> Heap[o2, f_2] == ExhaleHeap[o2, f_2]
  )
);
// All previously-allocated references are still allocated
axiom (forall Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType, o: Ref ::
  { IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask), ExhaleHeap[o, $allocated] }
  IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> Heap[o, $allocated] ==> ExhaleHeap[o, $allocated]
);
// Updated Heaps are Successor Heaps
axiom (forall <A, B> Heap: HeapType, o: Ref, f_2: (Field A B), v: B ::
  { Heap[o, f_2:=v] }
  succHeap(Heap, Heap[o, f_2:=v])
);
// IdenticalOnKnownLocations Heaps are Successor Heaps
axiom (forall Heap: HeapType, ExhaleHeap: HeapType, Mask: MaskType ::
  { IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) }
  IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask) ==> succHeap(Heap, ExhaleHeap)
);
// Successor Heaps are Transitive Successor Heaps
axiom (forall Heap0: HeapType, Heap1: HeapType ::
  { succHeap(Heap0, Heap1) }
  succHeap(Heap0, Heap1) ==> succHeapTrans(Heap0, Heap1)
);
// Transitivity of Transitive Successor Heaps
axiom (forall Heap0: HeapType, Heap1: HeapType, Heap2: HeapType ::
  { succHeapTrans(Heap0, Heap1), succHeap(Heap1, Heap2) }
  succHeapTrans(Heap0, Heap1) && succHeap(Heap1, Heap2) ==> succHeapTrans(Heap0, Heap2)
);

// ==================================================
// Preamble of Permission module.
// ==================================================

type Perm = real;
type MaskType = <A, B> [Ref, Field A B]Perm;
var Mask: MaskType;
const ZeroMask: MaskType;
axiom (forall <A, B> o_1: Ref, f_3: (Field A B) ::
  { ZeroMask[o_1, f_3] }
  ZeroMask[o_1, f_3] == NoPerm
);
type PMaskType = <A, B> [Ref, Field A B]bool;
const ZeroPMask: PMaskType;
axiom (forall <A, B> o_1: Ref, f_3: (Field A B) ::
  { ZeroPMask[o_1, f_3] }
  !ZeroPMask[o_1, f_3]
);
function PredicateMaskField<A>(f_4: (Field A FrameType)): Field A PMaskType;
function WandMaskField<A>(f_4: (Field A FrameType)): Field A PMaskType;
const NoPerm: Perm;
axiom NoPerm == 0.000000000;
const FullPerm: Perm;
axiom FullPerm == 1.000000000;
function Perm(a: real, b: real): Perm;
function GoodMask(Mask: MaskType): bool;
axiom (forall Heap: HeapType, Mask: MaskType ::
  { state(Heap, Mask) }
  state(Heap, Mask) ==> GoodMask(Mask)
);
axiom (forall <A, B> Mask: MaskType, o_1: Ref, f_3: (Field A B) ::
  { GoodMask(Mask), Mask[o_1, f_3] }
  GoodMask(Mask) ==> Mask[o_1, f_3] >= NoPerm && ((GoodMask(Mask) && !IsPredicateField(f_3)) && !IsWandField(f_3) ==> Mask[o_1, f_3] <= FullPerm)
);
function HasDirectPerm<A, B>(Mask: MaskType, o_1: Ref, f_3: (Field A B)): bool;
axiom (forall <A, B> Mask: MaskType, o_1: Ref, f_3: (Field A B) ::
  { HasDirectPerm(Mask, o_1, f_3) }
  HasDirectPerm(Mask, o_1, f_3) <==> Mask[o_1, f_3] > NoPerm
);
function sumMask(ResultMask: MaskType, SummandMask1: MaskType, SummandMask2: MaskType): bool;
axiom (forall <A, B> ResultMask: MaskType, SummandMask1: MaskType, SummandMask2: MaskType, o_1: Ref, f_3: (Field A B) ::
  { sumMask(ResultMask, SummandMask1, SummandMask2), ResultMask[o_1, f_3] } { sumMask(ResultMask, SummandMask1, SummandMask2), SummandMask1[o_1, f_3] } { sumMask(ResultMask, SummandMask1, SummandMask2), SummandMask2[o_1, f_3] }
  sumMask(ResultMask, SummandMask1, SummandMask2) ==> ResultMask[o_1, f_3] == SummandMask1[o_1, f_3] + SummandMask2[o_1, f_3]
);

// ==================================================
// Preamble of Function and predicate module.
// ==================================================

// Function heights (higher height means its body is available earlier):
// - height 0: length
const AssumeFunctionsAbove: int;
// Declarations for function framing
type FrameType;
const EmptyFrame: FrameType;
function FrameFragment<T>(t: T): FrameType;
function ConditionalFrame(p: Perm, f_5: FrameType): FrameType;
function dummyFunction<T>(t: T): bool;
function CombineFrames(a_1: FrameType, b_1: FrameType): FrameType;
// ==================================================
// Definition of conditional frame fragments
// ==================================================

axiom (forall p: Perm, f_5: FrameType ::
  { ConditionalFrame(p, f_5) }
  ConditionalFrame(p, f_5) == (if p > 0.000000000 then f_5 else EmptyFrame)
);
// Function for recording enclosure of one predicate instance in another
function InsidePredicate<A, B>(p: (Field A FrameType), v_1: FrameType, q: (Field B FrameType), w: FrameType): bool;
// Transitivity of InsidePredicate
axiom (forall <A, B, C> p: (Field A FrameType), v_1: FrameType, q: (Field B FrameType), w: FrameType, r: (Field C FrameType), u: FrameType ::
  { InsidePredicate(p, v_1, q, w), InsidePredicate(q, w, r, u) }
  InsidePredicate(p, v_1, q, w) && InsidePredicate(q, w, r, u) ==> InsidePredicate(p, v_1, r, u)
);
// Knowledge that two identical instances of the same predicate cannot be inside each other
axiom (forall <A> p: (Field A FrameType), v_1: FrameType, w: FrameType ::
  { InsidePredicate(p, v_1, p, w) }
  !InsidePredicate(p, v_1, p, w)
);

// ==================================================
// Translation of domain MyType
// ==================================================

// The type for domain MyType
type MyTypeDomainType T;

// Translation of domain function get
function get<T>(x: T): T;

// Translation of domain axiom not_id
axiom (forall <T> x_1: T ::
  { (get(x_1): T) }
  (get(x_1): T) != x_1
);

// ==================================================
// Translation of all fields
// ==================================================

const unique f_6: Field NormalField int;
axiom !IsPredicateField(f_6);
axiom !IsWandField(f_6);
const unique next: Field NormalField Ref;
axiom !IsPredicateField(next);
axiom !IsWandField(next);

// ==================================================
// Translation of function length
// ==================================================

// Uninterpreted function definitions
function length(Heap: HeapType, x_1: Ref): int;
function length'(Heap: HeapType, x_1: Ref): int;
axiom (forall Heap: HeapType, x_1: Ref ::
  { length(Heap, x_1) }
  length(Heap, x_1) == length'(Heap, x_1) && dummyFunction(length#triggerStateless(x_1))
);
axiom (forall Heap: HeapType, x_1: Ref ::
  { length'(Heap, x_1) }
  dummyFunction(length#triggerStateless(x_1))
);

// Definitional axiom
axiom (forall Heap: HeapType, Mask: MaskType, x_1: Ref ::
  { state(Heap, Mask), length(Heap, x_1) } { state(Heap, Mask), length#triggerStateless(x_1), list#trigger(Heap, list(x_1)) }
  state(Heap, Mask) && AssumeFunctionsAbove < 0 ==> length(Heap, x_1) == 1 + (if Heap[x_1, next] != null then length'(Heap, Heap[x_1, next]) else 0)
);

// Framing axioms
function length#frame(frame: FrameType, x_1: Ref): int;
axiom (forall Heap: HeapType, Mask: MaskType, x_1: Ref ::
  { state(Heap, Mask), length'(Heap, x_1) } { state(Heap, Mask), length#triggerStateless(x_1), list#trigger(Heap, list(x_1)) }
  state(Heap, Mask) ==> length'(Heap, x_1) == length#frame(Heap[null, list(x_1)], x_1)
);

// Trigger function (controlling recursive postconditions)
function length#trigger(frame: FrameType, x_1: Ref): bool;

// State-independent trigger function
function length#triggerStateless(x_1: Ref): int;

// Check contract well-formedness and postcondition
procedure length#definedness(x_1: Ref) returns (Result: int)
  modifies Heap, Mask;
{
  var perm: Perm;
  var UnfoldingHeap: HeapType;
  var UnfoldingMask: MaskType;
  var ExhaleHeap: HeapType;
  var newPMask: PMaskType;
  
  // -- Initializing the state
    Mask := ZeroMask;
    assume state(Heap, Mask);
    assume Heap[x_1, $allocated];
    assume AssumeFunctionsAbove == 0;
  
  // -- Initializing the old state
    assume Heap == old(Heap);
    assume Mask == old(Mask);
  
  // -- Inhaling precondition (with checking)
    perm := FullPerm;
    Mask[null, list(x_1)] := Mask[null, list(x_1)] + perm;
    assume state(Heap, Mask);
    assume state(Heap, Mask);
  
  // -- Check definedness of function body
    
    // -- Check definedness of 1 + (unfolding acc(list(x), write) in (x.next != null ? length(x.next) : 0))
      UnfoldingHeap := Heap;
      UnfoldingMask := Mask;
      assume list#trigger(UnfoldingHeap, list(x_1));
      assume UnfoldingHeap[null, list(x_1)] == CombineFrames(FrameFragment(UnfoldingHeap[x_1, f_6]), CombineFrames(FrameFragment(UnfoldingHeap[x_1, next]), FrameFragment((if UnfoldingHeap[x_1, next] != null then UnfoldingHeap[null, list(UnfoldingHeap[x_1, next])] else EmptyFrame))));
      // Phase 1: pure assertions and fixed permissions
      perm := NoPerm;
      perm := perm + FullPerm;
      if (perm != NoPerm) {
        assert {:msg "  Function might not be well-formed. There might be insufficient permission to access list(x). (predicate_exhale.vpr@15.1) [77]"}
          perm <= UnfoldingMask[null, list(x_1)];
      }
      UnfoldingMask[null, list(x_1)] := UnfoldingMask[null, list(x_1)] - perm;
      perm := FullPerm;
      assume x_1 != null;
      UnfoldingMask[x_1, f_6] := UnfoldingMask[x_1, f_6] + perm;
      assume state(UnfoldingHeap, UnfoldingMask);
      perm := FullPerm;
      assume x_1 != null;
      UnfoldingMask[x_1, next] := UnfoldingMask[x_1, next] + perm;
      assume state(UnfoldingHeap, UnfoldingMask);
      if (UnfoldingHeap[x_1, next] != null) {
        perm := FullPerm;
        UnfoldingMask[null, list(UnfoldingHeap[x_1, next])] := UnfoldingMask[null, list(UnfoldingHeap[x_1, next])] + perm;
        
        // -- Extra unfolding of predicate
          assume InsidePredicate(list(x_1), UnfoldingHeap[null, list(x_1)], list(UnfoldingHeap[x_1, next]), UnfoldingHeap[null, list(UnfoldingHeap[x_1, next])]);
        assume state(UnfoldingHeap, UnfoldingMask);
      }
      assume state(UnfoldingHeap, UnfoldingMask);
      assert {:msg "  Function might not be well-formed. There might be insufficient permission to access x.next. (predicate_exhale.vpr@15.1) [78]"}
        HasDirectPerm(UnfoldingMask, x_1, next);
      if (UnfoldingHeap[x_1, next] != null) {
        assert {:msg "  Function might not be well-formed. There might be insufficient permission to access x.next. (predicate_exhale.vpr@15.1) [79]"}
          HasDirectPerm(UnfoldingMask, x_1, next);
        if (*) {
          // Exhale precondition of function application
          // Phase 1: pure assertions and fixed permissions
          perm := NoPerm;
          perm := perm + FullPerm;
          if (perm != NoPerm) {
            assert {:msg "  Precondition of function length might not hold. There might be insufficient permission to access list(x.next). (predicate_exhale.vpr@18.48) [80]"}
              perm <= UnfoldingMask[null, list(UnfoldingHeap[x_1, next])];
          }
          UnfoldingMask[null, list(UnfoldingHeap[x_1, next])] := UnfoldingMask[null, list(UnfoldingHeap[x_1, next])] - perm;
          // Finish exhale
          havoc ExhaleHeap;
          assume IdenticalOnKnownLocations(UnfoldingHeap, ExhaleHeap, UnfoldingMask);
          UnfoldingHeap := ExhaleHeap;
          // Stop execution
          assume false;
        } else {
          // Enable postcondition for recursive call
          assume length#trigger(UnfoldingHeap[null, list(UnfoldingHeap[x_1, next])], UnfoldingHeap[x_1, next]);
        }
      }
      
      // -- Free assumptions
        Heap[null, list#sm(x_1)][x_1, f_6] := true;
        Heap[null, list#sm(x_1)][x_1, next] := true;
        if (Heap[x_1, next] != null) {
          havoc newPMask;
          assume (forall <A, B> o_2: Ref, f_7: (Field A B) ::
            { newPMask[o_2, f_7] }
            Heap[null, list#sm(x_1)][o_2, f_7] || Heap[null, list#sm(Heap[x_1, next])][o_2, f_7] ==> newPMask[o_2, f_7]
          );
          Heap[null, list#sm(x_1)] := newPMask;
        }
        assume state(Heap, Mask);
      
      // -- Free assumptions
        Heap[null, list#sm(x_1)][x_1, f_6] := true;
        Heap[null, list#sm(x_1)][x_1, next] := true;
        if (Heap[x_1, next] != null) {
          havoc newPMask;
          assume (forall <A, B> o_3: Ref, f_8: (Field A B) ::
            { newPMask[o_3, f_8] }
            Heap[null, list#sm(x_1)][o_3, f_8] || Heap[null, list#sm(Heap[x_1, next])][o_3, f_8] ==> newPMask[o_3, f_8]
          );
          Heap[null, list#sm(x_1)] := newPMask;
        }
        assume state(Heap, Mask);
      assume state(Heap, Mask);
  
  // -- Translate function body
    Result := 1 + (if Heap[x_1, next] != null then length(Heap, Heap[x_1, next]) else 0);
}

// ==================================================
// Translation of predicate list
// ==================================================

type PredicateType_list;
function list(x_1: Ref): Field PredicateType_list FrameType;
function list#sm(x_1: Ref): Field PredicateType_list PMaskType;
axiom (forall x_1: Ref ::
  { PredicateMaskField(list(x_1)) }
  PredicateMaskField(list(x_1)) == list#sm(x_1)
);
axiom (forall x_1: Ref ::
  { list(x_1) }
  IsPredicateField(list(x_1))
);
axiom (forall x_1: Ref ::
  { list(x_1) }
  getPredicateId(list(x_1)) == 0
);
function list#trigger<A>(Heap: HeapType, pred: (Field A FrameType)): bool;
function list#everUsed<A>(pred: (Field A FrameType)): bool;
axiom (forall x_1: Ref, x2: Ref ::
  { list(x_1), list(x2) }
  list(x_1) == list(x2) ==> x_1 == x2
);
axiom (forall x_1: Ref, x2: Ref ::
  { list#sm(x_1), list#sm(x2) }
  list#sm(x_1) == list#sm(x2) ==> x_1 == x2
);

axiom (forall Heap: HeapType, x_1: Ref ::
  { list#trigger(Heap, list(x_1)) }
  list#everUsed(list(x_1))
);

// ==================================================
// Translation of method test1
// ==================================================

procedure test1(x_1: Ref) returns ()
  modifies Heap, Mask;
{
  var perm: Perm;
  var ExhaleHeap: HeapType;
  var newVersion: FrameType;
  var freshVersion: FrameType;
  var newPMask: PMaskType;
  
  // -- Initializing the state
    Mask := ZeroMask;
    assume state(Heap, Mask);
    assume AssumeFunctionsAbove == -1;
  
  // -- Assumptions about method arguments
    assume Heap[x_1, $allocated];
  
  // -- Checked inhaling of precondition
    perm := FullPerm;
    Mask[null, list(x_1)] := Mask[null, list(x_1)] + perm;
    assume state(Heap, Mask);
    assume state(Heap, Mask);
  
  // -- Initializing of old state
    
    // -- Initializing the old state
      assume Heap == old(Heap);
      assume Mask == old(Mask);
  
  // -- Translating statement: inhale length(x) == 7 -- predicate_exhale.vpr@28.3
    
    // -- Check definedness of length(x) == 7
      if (*) {
        // Exhale precondition of function application
        // Phase 1: pure assertions and fixed permissions
        perm := NoPerm;
        perm := perm + FullPerm;
        if (perm != NoPerm) {
          assert {:msg "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@28.10) [81]"}
            perm <= Mask[null, list(x_1)];
        }
        Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
        // Finish exhale
        havoc ExhaleHeap;
        assume IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask);
        Heap := ExhaleHeap;
        // Stop execution
        assume false;
      }
      assume state(Heap, Mask);
    assume state(Heap, Mask);
    assume length(Heap, x_1) == 7;
    assume state(Heap, Mask);
    assume state(Heap, Mask);
  
  // -- Translating statement: unfold acc(list(x), write) -- predicate_exhale.vpr@30.3
    assume list#trigger(Heap, list(x_1));
    assume Heap[null, list(x_1)] == CombineFrames(FrameFragment(Heap[x_1, f_6]), CombineFrames(FrameFragment(Heap[x_1, next]), FrameFragment((if Heap[x_1, next] != null then Heap[null, list(Heap[x_1, next])] else EmptyFrame))));
    // Phase 1: pure assertions and fixed permissions
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Unfolding list(x) might fail. There might be insufficient permission to access list(x). (predicate_exhale.vpr@30.3) [83]"}
        perm <= Mask[null, list(x_1)];
    }
    Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
    
    // -- Update version of predicate
      if (!HasDirectPerm(Mask, null, list(x_1))) {
        havoc newVersion;
        Heap[null, list(x_1)] := newVersion;
      }
    perm := FullPerm;
    assume x_1 != null;
    Mask[x_1, f_6] := Mask[x_1, f_6] + perm;
    assume state(Heap, Mask);
    perm := FullPerm;
    assume x_1 != null;
    Mask[x_1, next] := Mask[x_1, next] + perm;
    assume state(Heap, Mask);
    if (Heap[x_1, next] != null) {
      perm := FullPerm;
      Mask[null, list(Heap[x_1, next])] := Mask[null, list(Heap[x_1, next])] + perm;
      
      // -- Extra unfolding of predicate
        assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
      assume state(Heap, Mask);
    }
    assume state(Heap, Mask);
    assume state(Heap, Mask);
  
  // -- Translating statement: inhale x.next != null && x.f == 5 -- predicate_exhale.vpr@31.3
    
    // -- Check definedness of x.next != null
      assert {:msg "  Inhale might fail. There might be insufficient permission to access x.next. (predicate_exhale.vpr@31.3) [84]"}
        HasDirectPerm(Mask, x_1, next);
      assume state(Heap, Mask);
    assume Heap[x_1, next] != null;
    assume state(Heap, Mask);
    
    // -- Check definedness of x.f == 5
      assert {:msg "  Inhale might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@31.3) [85]"}
        HasDirectPerm(Mask, x_1, f_6);
      assume state(Heap, Mask);
    assume Heap[x_1, f_6] == 5;
    assume state(Heap, Mask);
    assume state(Heap, Mask);
  
  // -- Translating statement: fold acc(list(x), write) -- predicate_exhale.vpr@32.3
    // Phase 1: pure assertions and fixed permissions
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@32.3) [87]"}
        perm <= Mask[x_1, f_6];
    }
    Mask[x_1, f_6] := Mask[x_1, f_6] - perm;
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access x.next. (predicate_exhale.vpr@32.3) [89]"}
        perm <= Mask[x_1, next];
    }
    Mask[x_1, next] := Mask[x_1, next] - perm;
    if (Heap[x_1, next] != null) {
      perm := NoPerm;
      perm := perm + FullPerm;
      if (perm != NoPerm) {
        assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access list(x.next). (predicate_exhale.vpr@32.3) [91]"}
          perm <= Mask[null, list(Heap[x_1, next])];
      }
      Mask[null, list(Heap[x_1, next])] := Mask[null, list(Heap[x_1, next])] - perm;
      
      // -- Record predicate instance information
        assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
    }
    // Phase 2: abstract read permissions (and scaled abstract read permissions)
    if (Heap[x_1, next] != null) {
      
      // -- Record predicate instance information
        assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
    }
    // Phase 3: all remaining permissions (containing read permissions, but in a negative context)
    if (Heap[x_1, next] != null) {
      
      // -- Record predicate instance information
        assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
    }
    perm := FullPerm;
    Mask[null, list(x_1)] := Mask[null, list(x_1)] + perm;
    assume state(Heap, Mask);
    assume state(Heap, Mask);
    assume list#trigger(Heap, list(x_1));
    assume Heap[null, list(x_1)] == CombineFrames(FrameFragment(Heap[x_1, f_6]), CombineFrames(FrameFragment(Heap[x_1, next]), FrameFragment((if Heap[x_1, next] != null then Heap[null, list(Heap[x_1, next])] else EmptyFrame))));
    if (!HasDirectPerm(Mask, null, list(x_1))) {
      Heap[null, list#sm(x_1)] := ZeroPMask;
      havoc freshVersion;
      Heap[null, list(x_1)] := freshVersion;
    }
    Heap[null, list#sm(x_1)][x_1, f_6] := true;
    Heap[null, list#sm(x_1)][x_1, next] := true;
    if (Heap[x_1, next] != null) {
      havoc newPMask;
      assume (forall <A, B> o_4: Ref, f_9: (Field A B) ::
        { newPMask[o_4, f_9] }
        Heap[null, list#sm(x_1)][o_4, f_9] || Heap[null, list#sm(Heap[x_1, next])][o_4, f_9] ==> newPMask[o_4, f_9]
      );
      Heap[null, list#sm(x_1)] := newPMask;
    }
    assume state(Heap, Mask);
    assume state(Heap, Mask);
  
  // -- Translating statement: assert length(x) == 7 -- predicate_exhale.vpr@34.3
    
    // -- Check definedness of length(x) == 7
      if (*) {
        // Exhale precondition of function application
        // Phase 1: pure assertions and fixed permissions
        perm := NoPerm;
        perm := perm + FullPerm;
        if (perm != NoPerm) {
          assert {:msg "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@34.10) [92]"}
            perm <= Mask[null, list(x_1)];
        }
        Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
        // Finish exhale
        havoc ExhaleHeap;
        assume IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask);
        Heap := ExhaleHeap;
        // Stop execution
        assume false;
      }
      assume state(Heap, Mask);
    // Phase 1: pure assertions and fixed permissions
    assert {:msg "  Assert might fail. Assertion length(x) == 7 might not hold. (predicate_exhale.vpr@34.3) [93]"}
      length(Heap, x_1) == 7;
    assume state(Heap, Mask);
  
  // -- Translating statement: unfold acc(list(x), write) -- predicate_exhale.vpr@36.3
    assume list#trigger(Heap, list(x_1));
    assume Heap[null, list(x_1)] == CombineFrames(FrameFragment(Heap[x_1, f_6]), CombineFrames(FrameFragment(Heap[x_1, next]), FrameFragment((if Heap[x_1, next] != null then Heap[null, list(Heap[x_1, next])] else EmptyFrame))));
    // Phase 1: pure assertions and fixed permissions
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Unfolding list(x) might fail. There might be insufficient permission to access list(x). (predicate_exhale.vpr@36.3) [95]"}
        perm <= Mask[null, list(x_1)];
    }
    Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
    
    // -- Update version of predicate
      if (!HasDirectPerm(Mask, null, list(x_1))) {
        havoc newVersion;
        Heap[null, list(x_1)] := newVersion;
      }
    perm := FullPerm;
    assume x_1 != null;
    Mask[x_1, f_6] := Mask[x_1, f_6] + perm;
    assume state(Heap, Mask);
    perm := FullPerm;
    assume x_1 != null;
    Mask[x_1, next] := Mask[x_1, next] + perm;
    assume state(Heap, Mask);
    if (Heap[x_1, next] != null) {
      perm := FullPerm;
      Mask[null, list(Heap[x_1, next])] := Mask[null, list(Heap[x_1, next])] + perm;
      
      // -- Extra unfolding of predicate
        assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
      assume state(Heap, Mask);
    }
    assume state(Heap, Mask);
    assume state(Heap, Mask);
  
  // -- Translating statement: assert x.f == 5 -- predicate_exhale.vpr@37.3
    
    // -- Check definedness of x.f == 5
      assert {:msg "  Assert might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@37.3) [96]"}
        HasDirectPerm(Mask, x_1, f_6);
      assume state(Heap, Mask);
    // Phase 1: pure assertions and fixed permissions
    assert {:msg "  Assert might fail. Assertion x.f == 5 might not hold. (predicate_exhale.vpr@37.3) [97]"}
      Heap[x_1, f_6] == 5;
    assume state(Heap, Mask);
  
  // -- Translating statement: fold acc(list(x), write) -- predicate_exhale.vpr@38.3
    // Phase 1: pure assertions and fixed permissions
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access x.f. (predicate_exhale.vpr@38.3) [99]"}
        perm <= Mask[x_1, f_6];
    }
    Mask[x_1, f_6] := Mask[x_1, f_6] - perm;
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access x.next. (predicate_exhale.vpr@38.3) [101]"}
        perm <= Mask[x_1, next];
    }
    Mask[x_1, next] := Mask[x_1, next] - perm;
    if (Heap[x_1, next] != null) {
      perm := NoPerm;
      perm := perm + FullPerm;
      if (perm != NoPerm) {
        assert {:msg "  Folding list(x) might fail. There might be insufficient permission to access list(x.next). (predicate_exhale.vpr@38.3) [103]"}
          perm <= Mask[null, list(Heap[x_1, next])];
      }
      Mask[null, list(Heap[x_1, next])] := Mask[null, list(Heap[x_1, next])] - perm;
      
      // -- Record predicate instance information
        assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
    }
    // Phase 2: abstract read permissions (and scaled abstract read permissions)
    if (Heap[x_1, next] != null) {
      
      // -- Record predicate instance information
        assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
    }
    // Phase 3: all remaining permissions (containing read permissions, but in a negative context)
    if (Heap[x_1, next] != null) {
      
      // -- Record predicate instance information
        assume InsidePredicate(list(x_1), Heap[null, list(x_1)], list(Heap[x_1, next]), Heap[null, list(Heap[x_1, next])]);
    }
    perm := FullPerm;
    Mask[null, list(x_1)] := Mask[null, list(x_1)] + perm;
    assume state(Heap, Mask);
    assume state(Heap, Mask);
    assume list#trigger(Heap, list(x_1));
    assume Heap[null, list(x_1)] == CombineFrames(FrameFragment(Heap[x_1, f_6]), CombineFrames(FrameFragment(Heap[x_1, next]), FrameFragment((if Heap[x_1, next] != null then Heap[null, list(Heap[x_1, next])] else EmptyFrame))));
    if (!HasDirectPerm(Mask, null, list(x_1))) {
      Heap[null, list#sm(x_1)] := ZeroPMask;
      havoc freshVersion;
      Heap[null, list(x_1)] := freshVersion;
    }
    Heap[null, list#sm(x_1)][x_1, f_6] := true;
    Heap[null, list#sm(x_1)][x_1, next] := true;
    if (Heap[x_1, next] != null) {
      havoc newPMask;
      assume (forall <A, B> o_5: Ref, f_10: (Field A B) ::
        { newPMask[o_5, f_10] }
        Heap[null, list#sm(x_1)][o_5, f_10] || Heap[null, list#sm(Heap[x_1, next])][o_5, f_10] ==> newPMask[o_5, f_10]
      );
      Heap[null, list#sm(x_1)] := newPMask;
    }
    assume state(Heap, Mask);
    assume state(Heap, Mask);
  
  // -- Translating statement: assert length(x) == 7 -- predicate_exhale.vpr@40.3
    
    // -- Check definedness of length(x) == 7
      if (*) {
        // Exhale precondition of function application
        // Phase 1: pure assertions and fixed permissions
        perm := NoPerm;
        perm := perm + FullPerm;
        if (perm != NoPerm) {
          assert {:msg "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@40.10) [104]"}
            perm <= Mask[null, list(x_1)];
        }
        Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
        // Finish exhale
        havoc ExhaleHeap;
        assume IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask);
        Heap := ExhaleHeap;
        // Stop execution
        assume false;
      }
      assume state(Heap, Mask);
    // Phase 1: pure assertions and fixed permissions
    assert {:msg "  Assert might fail. Assertion length(x) == 7 might not hold. (predicate_exhale.vpr@40.3) [105]"}
      length(Heap, x_1) == 7;
    assume state(Heap, Mask);
  
  // -- Translating statement: exhale acc(list(x), write) -- predicate_exhale.vpr@42.3
    // Phase 1: pure assertions and fixed permissions
    perm := NoPerm;
    perm := perm + FullPerm;
    if (perm != NoPerm) {
      assert {:msg "  Exhale might fail. There might be insufficient permission to access list(x). (predicate_exhale.vpr@42.3) [107]"}
        perm <= Mask[null, list(x_1)];
    }
    Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
    // Finish exhale
    havoc ExhaleHeap;
    assume IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask);
    Heap := ExhaleHeap;
    assume state(Heap, Mask);
  
  // -- Translating statement: inhale acc(list(x), write) -- predicate_exhale.vpr@43.3
    perm := FullPerm;
    Mask[null, list(x_1)] := Mask[null, list(x_1)] + perm;
    assume state(Heap, Mask);
    assume state(Heap, Mask);
    assume state(Heap, Mask);
  
  // -- Translating statement: assert length(x) == 7 -- predicate_exhale.vpr@45.3
    
    // -- Check definedness of length(x) == 7
      if (*) {
        // Exhale precondition of function application
        // Phase 1: pure assertions and fixed permissions
        perm := NoPerm;
        perm := perm + FullPerm;
        if (perm != NoPerm) {
          assert {:msg "  Precondition of function length might not hold. There might be insufficient permission to access list(x). (predicate_exhale.vpr@45.10) [108]"}
            perm <= Mask[null, list(x_1)];
        }
        Mask[null, list(x_1)] := Mask[null, list(x_1)] - perm;
        // Finish exhale
        havoc ExhaleHeap;
        assume IdenticalOnKnownLocations(Heap, ExhaleHeap, Mask);
        Heap := ExhaleHeap;
        // Stop execution
        assume false;
      }
      assume state(Heap, Mask);
    // Phase 1: pure assertions and fixed permissions
    // CHECK-L: Assert might fail. Assertion length(x) == 7 might not hold. (predicate_exhale.vpr@45.3) [109]
    assert {:msg "Assert might fail. Assertion length(x) == 7 might not hold. (predicate_exhale.vpr@45.3) [109]"}
      length(Heap, x_1) == 7;
    assume state(Heap, Mask);
}
