---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Type(
        TypeDecls {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "linear",
                        params: [
                            String(
                                StringLit {
                                    text: "tid",
                                },
                            ),
                        ],
                    },
                ),
            ],
            decls: [
                TypeDecl {
                    ident: "X",
                    type_params: [],
                    type_: Some(
                        Atom(
                            Int,
                        ),
                    ),
                },
            ],
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "A",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "tid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i'",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "tid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Var(
                                    "i",
                                ),
                                op: Eq,
                                rhs: Var(
                                    "i'",
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "B",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear_in",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "tid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i'",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [
                            Attr(
                                AttrContent {
                                    ident: "linear",
                                    params: [
                                        String(
                                            StringLit {
                                                text: "tid",
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "i",
                                ],
                                type_: Atom(
                                    Int,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "i'",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "i",
                                        ],
                                        target: "A",
                                        params: [
                                            Var(
                                                "i",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: BoolLit(
                                        false,
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
type {:linear "tid"} X = int;

procedure A({:linear_in "tid"} i': int) returns ({:linear "tid"} i: int);
  ensures i == i';

procedure B({:linear_in "tid"} i': int) returns ({:linear "tid"} i: int) {
  i := i';
  call i := A(i);
  assert false;
}

[Input - ../../vendor/boogie/Test/civl/linear/allocator.bpl]
// RUN: %boogie "%s" > "%t"
// RUN: %diff "%s.expect" "%t"




type {:linear "tid"} X = int;

procedure A({:linear_in "tid"} i': int) returns ({:linear "tid"} i: int);
  ensures i == i';

procedure B({:linear_in "tid"} i': int) returns ({:linear "tid"} i: int)
{
  i := i';
  call i := A(i);
  assert false;
}
