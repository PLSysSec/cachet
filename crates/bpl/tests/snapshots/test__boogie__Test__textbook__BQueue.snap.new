---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "ref",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "null",
                ],
                type_: App(
                    TypeApp {
                        head: "ref",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "Field",
                    type_params: [
                        "x",
                    ],
                    type_: None,
                },
            ],
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "HeapType",
                    type_params: [],
                    type_: Some(
                        Map(
                            MapType {
                                type_params: [
                                    "x",
                                ],
                                keys: [
                                    App(
                                        TypeApp {
                                            head: "ref",
                                            tail: None,
                                        },
                                    ),
                                    App(
                                        TypeApp {
                                            head: "Field",
                                            tail: Some(
                                                App(
                                                    TypeApp {
                                                        head: "x",
                                                        tail: None,
                                                    },
                                                ),
                                            ),
                                        },
                                    ),
                                ],
                                value: App(
                                    TypeApp {
                                        head: "x",
                                        tail: None,
                                    },
                                ),
                            },
                        ),
                    ),
                },
            ],
        },
    ),
    Var(
        VarDecl {
            attrs: [],
            vars: [
                TypedIdentsWhere {
                    typed_idents: TypedIdents {
                        idents: [
                            "H",
                        ],
                        type_: App(
                            TypeApp {
                                head: "HeapType",
                                tail: None,
                            },
                        ),
                    },
                    where_: None,
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "alloc",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            AtomApp(
                                TypeApp {
                                    head: Bool,
                                    tail: None,
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "abstractValue",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "Seq",
                                    tail: None,
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "footprint",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            Map(
                                MapType {
                                    type_params: [],
                                    keys: [
                                        App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    ],
                                    value: Atom(
                                        Bool,
                                    ),
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "T",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "NullT",
                ],
                type_: App(
                    TypeApp {
                        head: "T",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "head",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "tail",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "mynodes",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            Map(
                                MapType {
                                    type_params: [],
                                    keys: [
                                        App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    ],
                                    value: Atom(
                                        Bool,
                                    ),
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "data",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "T",
                                    tail: None,
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: true,
            consts: TypedIdents {
                idents: [
                    "next",
                ],
                type_: App(
                    TypeApp {
                        head: "Field",
                        tail: Some(
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "ValidQueue",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "h",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "q",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "ValidQueue",
                                            args: [
                                                Var(
                                                    "h",
                                                ),
                                                Var(
                                                    "q",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "q",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "h",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "q",
                                                            ),
                                                            Var(
                                                                "alloc",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                rhs: Equiv(
                                    EquivExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "ValidQueue",
                                                args: [
                                                    Var(
                                                        "h",
                                                    ),
                                                    Var(
                                                        "q",
                                                    ),
                                                ],
                                            },
                                        ),
                                        rhs: Logical(
                                            LogicalExpr {
                                                lhs: Logical(
                                                    LogicalExpr {
                                                        lhs: Logical(
                                                            LogicalExpr {
                                                                lhs: Logical(
                                                                    LogicalExpr {
                                                                        lhs: Logical(
                                                                            LogicalExpr {
                                                                                lhs: Logical(
                                                                                    LogicalExpr {
                                                                                        lhs: Logical(
                                                                                            LogicalExpr {
                                                                                                lhs: Logical(
                                                                                                    LogicalExpr {
                                                                                                        lhs: Logical(
                                                                                                            LogicalExpr {
                                                                                                                lhs: Logical(
                                                                                                                    LogicalExpr {
                                                                                                                        lhs: Logical(
                                                                                                                            LogicalExpr {
                                                                                                                                lhs: Rel(
                                                                                                                                    RelExpr {
                                                                                                                                        lhs: Array(
                                                                                                                                            ArrayExpr {
                                                                                                                                                expr: Var(
                                                                                                                                                    "h",
                                                                                                                                                ),
                                                                                                                                                subscripts: [
                                                                                                                                                    ArraySubscript {
                                                                                                                                                        keys: [
                                                                                                                                                            Var(
                                                                                                                                                                "q",
                                                                                                                                                            ),
                                                                                                                                                            Var(
                                                                                                                                                                "head",
                                                                                                                                                            ),
                                                                                                                                                        ],
                                                                                                                                                        value: None,
                                                                                                                                                    },
                                                                                                                                                ],
                                                                                                                                            },
                                                                                                                                        ),
                                                                                                                                        op: Neq,
                                                                                                                                        rhs: Var(
                                                                                                                                            "null",
                                                                                                                                        ),
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                                op: And,
                                                                                                                                rhs: Array(
                                                                                                                                    ArrayExpr {
                                                                                                                                        expr: Var(
                                                                                                                                            "h",
                                                                                                                                        ),
                                                                                                                                        subscripts: [
                                                                                                                                            ArraySubscript {
                                                                                                                                                keys: [
                                                                                                                                                    Array(
                                                                                                                                                        ArrayExpr {
                                                                                                                                                            expr: Var(
                                                                                                                                                                "h",
                                                                                                                                                            ),
                                                                                                                                                            subscripts: [
                                                                                                                                                                ArraySubscript {
                                                                                                                                                                    keys: [
                                                                                                                                                                        Var(
                                                                                                                                                                            "q",
                                                                                                                                                                        ),
                                                                                                                                                                        Var(
                                                                                                                                                                            "head",
                                                                                                                                                                        ),
                                                                                                                                                                    ],
                                                                                                                                                                    value: None,
                                                                                                                                                                },
                                                                                                                                                            ],
                                                                                                                                                        },
                                                                                                                                                    ),
                                                                                                                                                    Var(
                                                                                                                                                        "alloc",
                                                                                                                                                    ),
                                                                                                                                                ],
                                                                                                                                                value: None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        op: And,
                                                                                                                        rhs: Rel(
                                                                                                                            RelExpr {
                                                                                                                                lhs: Array(
                                                                                                                                    ArrayExpr {
                                                                                                                                        expr: Var(
                                                                                                                                            "h",
                                                                                                                                        ),
                                                                                                                                        subscripts: [
                                                                                                                                            ArraySubscript {
                                                                                                                                                keys: [
                                                                                                                                                    Var(
                                                                                                                                                        "q",
                                                                                                                                                    ),
                                                                                                                                                    Var(
                                                                                                                                                        "tail",
                                                                                                                                                    ),
                                                                                                                                                ],
                                                                                                                                                value: None,
                                                                                                                                            },
                                                                                                                                        ],
                                                                                                                                    },
                                                                                                                                ),
                                                                                                                                op: Neq,
                                                                                                                                rhs: Var(
                                                                                                                                    "null",
                                                                                                                                ),
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    },
                                                                                                                ),
                                                                                                                op: And,
                                                                                                                rhs: Array(
                                                                                                                    ArrayExpr {
                                                                                                                        expr: Var(
                                                                                                                            "h",
                                                                                                                        ),
                                                                                                                        subscripts: [
                                                                                                                            ArraySubscript {
                                                                                                                                keys: [
                                                                                                                                    Array(
                                                                                                                                        ArrayExpr {
                                                                                                                                            expr: Var(
                                                                                                                                                "h",
                                                                                                                                            ),
                                                                                                                                            subscripts: [
                                                                                                                                                ArraySubscript {
                                                                                                                                                    keys: [
                                                                                                                                                        Var(
                                                                                                                                                            "q",
                                                                                                                                                        ),
                                                                                                                                                        Var(
                                                                                                                                                            "tail",
                                                                                                                                                        ),
                                                                                                                                                    ],
                                                                                                                                                    value: None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    Var(
                                                                                                                                        "alloc",
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                                value: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                        op: And,
                                                                                                        rhs: Rel(
                                                                                                            RelExpr {
                                                                                                                lhs: Array(
                                                                                                                    ArrayExpr {
                                                                                                                        expr: Var(
                                                                                                                            "h",
                                                                                                                        ),
                                                                                                                        subscripts: [
                                                                                                                            ArraySubscript {
                                                                                                                                keys: [
                                                                                                                                    Array(
                                                                                                                                        ArrayExpr {
                                                                                                                                            expr: Var(
                                                                                                                                                "h",
                                                                                                                                            ),
                                                                                                                                            subscripts: [
                                                                                                                                                ArraySubscript {
                                                                                                                                                    keys: [
                                                                                                                                                        Var(
                                                                                                                                                            "q",
                                                                                                                                                        ),
                                                                                                                                                        Var(
                                                                                                                                                            "tail",
                                                                                                                                                        ),
                                                                                                                                                    ],
                                                                                                                                                    value: None,
                                                                                                                                                },
                                                                                                                                            ],
                                                                                                                                        },
                                                                                                                                    ),
                                                                                                                                    Var(
                                                                                                                                        "next",
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                                value: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                                op: Eq,
                                                                                                                rhs: Var(
                                                                                                                    "null",
                                                                                                                ),
                                                                                                            },
                                                                                                        ),
                                                                                                    },
                                                                                                ),
                                                                                                op: And,
                                                                                                rhs: Quant(
                                                                                                    QuantExpr {
                                                                                                        kind: ForAll,
                                                                                                        body: QuantBody {
                                                                                                            type_params: [],
                                                                                                            bound_vars: [
                                                                                                                AttrTypedIdentsWhere {
                                                                                                                    attrs: [],
                                                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                                                        typed_idents: TypedIdents {
                                                                                                                            idents: [
                                                                                                                                "o",
                                                                                                                            ],
                                                                                                                            type_: App(
                                                                                                                                TypeApp {
                                                                                                                                    head: "ref",
                                                                                                                                    tail: None,
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        },
                                                                                                                        where_: None,
                                                                                                                    },
                                                                                                                },
                                                                                                            ],
                                                                                                            attrs: [
                                                                                                                Trigger(
                                                                                                                    [
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "h",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "q",
                                                                                                                                            ),
                                                                                                                                            Var(
                                                                                                                                                "footprint",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "o",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                ),
                                                                                                            ],
                                                                                                            expr: Implies(
                                                                                                                ImpliesExpr {
                                                                                                                    lhs: Logical(
                                                                                                                        LogicalExpr {
                                                                                                                            lhs: Rel(
                                                                                                                                RelExpr {
                                                                                                                                    lhs: Var(
                                                                                                                                        "o",
                                                                                                                                    ),
                                                                                                                                    op: Neq,
                                                                                                                                    rhs: Var(
                                                                                                                                        "null",
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            ),
                                                                                                                            op: And,
                                                                                                                            rhs: Array(
                                                                                                                                ArrayExpr {
                                                                                                                                    expr: Var(
                                                                                                                                        "h",
                                                                                                                                    ),
                                                                                                                                    subscripts: [
                                                                                                                                        ArraySubscript {
                                                                                                                                            keys: [
                                                                                                                                                Var(
                                                                                                                                                    "q",
                                                                                                                                                ),
                                                                                                                                                Var(
                                                                                                                                                    "footprint",
                                                                                                                                                ),
                                                                                                                                            ],
                                                                                                                                            value: None,
                                                                                                                                        },
                                                                                                                                        ArraySubscript {
                                                                                                                                            keys: [
                                                                                                                                                Var(
                                                                                                                                                    "o",
                                                                                                                                                ),
                                                                                                                                            ],
                                                                                                                                            value: None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                    rhs: Array(
                                                                                                                        ArrayExpr {
                                                                                                                            expr: Var(
                                                                                                                                "h",
                                                                                                                            ),
                                                                                                                            subscripts: [
                                                                                                                                ArraySubscript {
                                                                                                                                    keys: [
                                                                                                                                        Var(
                                                                                                                                            "o",
                                                                                                                                        ),
                                                                                                                                        Var(
                                                                                                                                            "alloc",
                                                                                                                                        ),
                                                                                                                                    ],
                                                                                                                                    value: None,
                                                                                                                                },
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    },
                                                                                                ),
                                                                                            },
                                                                                        ),
                                                                                        op: And,
                                                                                        rhs: Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "h",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "q",
                                                                                                            ),
                                                                                                            Var(
                                                                                                                "footprint",
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "q",
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                                op: And,
                                                                                rhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "h",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "q",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "mynodes",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Array(
                                                                                                        ArrayExpr {
                                                                                                            expr: Var(
                                                                                                                "h",
                                                                                                            ),
                                                                                                            subscripts: [
                                                                                                                ArraySubscript {
                                                                                                                    keys: [
                                                                                                                        Var(
                                                                                                                            "q",
                                                                                                                        ),
                                                                                                                        Var(
                                                                                                                            "head",
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                    value: None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "h",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "q",
                                                                                            ),
                                                                                            Var(
                                                                                                "mynodes",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Array(
                                                                                                ArrayExpr {
                                                                                                    expr: Var(
                                                                                                        "h",
                                                                                                    ),
                                                                                                    subscripts: [
                                                                                                        ArraySubscript {
                                                                                                            keys: [
                                                                                                                Var(
                                                                                                                    "q",
                                                                                                                ),
                                                                                                                Var(
                                                                                                                    "tail",
                                                                                                                ),
                                                                                                            ],
                                                                                                            value: None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                op: And,
                                                                rhs: Quant(
                                                                    QuantExpr {
                                                                        kind: ForAll,
                                                                        body: QuantBody {
                                                                            type_params: [],
                                                                            bound_vars: [
                                                                                AttrTypedIdentsWhere {
                                                                                    attrs: [],
                                                                                    typed_idents_where: TypedIdentsWhere {
                                                                                        typed_idents: TypedIdents {
                                                                                            idents: [
                                                                                                "n",
                                                                                            ],
                                                                                            type_: App(
                                                                                                TypeApp {
                                                                                                    head: "ref",
                                                                                                    tail: None,
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                        where_: None,
                                                                                    },
                                                                                },
                                                                            ],
                                                                            attrs: [
                                                                                Trigger(
                                                                                    [
                                                                                        Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "h",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "q",
                                                                                                            ),
                                                                                                            Var(
                                                                                                                "mynodes",
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "n",
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    ],
                                                                                ),
                                                                            ],
                                                                            expr: Implies(
                                                                                ImpliesExpr {
                                                                                    lhs: Array(
                                                                                        ArrayExpr {
                                                                                            expr: Var(
                                                                                                "h",
                                                                                            ),
                                                                                            subscripts: [
                                                                                                ArraySubscript {
                                                                                                    keys: [
                                                                                                        Var(
                                                                                                            "q",
                                                                                                        ),
                                                                                                        Var(
                                                                                                            "mynodes",
                                                                                                        ),
                                                                                                    ],
                                                                                                    value: None,
                                                                                                },
                                                                                                ArraySubscript {
                                                                                                    keys: [
                                                                                                        Var(
                                                                                                            "n",
                                                                                                        ),
                                                                                                    ],
                                                                                                    value: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                    rhs: Logical(
                                                                                        LogicalExpr {
                                                                                            lhs: Logical(
                                                                                                LogicalExpr {
                                                                                                    lhs: Logical(
                                                                                                        LogicalExpr {
                                                                                                            lhs: Logical(
                                                                                                                LogicalExpr {
                                                                                                                    lhs: Logical(
                                                                                                                        LogicalExpr {
                                                                                                                            lhs: Rel(
                                                                                                                                RelExpr {
                                                                                                                                    lhs: Var(
                                                                                                                                        "n",
                                                                                                                                    ),
                                                                                                                                    op: Neq,
                                                                                                                                    rhs: Var(
                                                                                                                                        "null",
                                                                                                                                    ),
                                                                                                                                },
                                                                                                                            ),
                                                                                                                            op: And,
                                                                                                                            rhs: Array(
                                                                                                                                ArrayExpr {
                                                                                                                                    expr: Var(
                                                                                                                                        "h",
                                                                                                                                    ),
                                                                                                                                    subscripts: [
                                                                                                                                        ArraySubscript {
                                                                                                                                            keys: [
                                                                                                                                                Var(
                                                                                                                                                    "n",
                                                                                                                                                ),
                                                                                                                                                Var(
                                                                                                                                                    "alloc",
                                                                                                                                                ),
                                                                                                                                            ],
                                                                                                                                            value: None,
                                                                                                                                        },
                                                                                                                                    ],
                                                                                                                                },
                                                                                                                            ),
                                                                                                                        },
                                                                                                                    ),
                                                                                                                    op: And,
                                                                                                                    rhs: FuncCall(
                                                                                                                        FuncCall {
                                                                                                                            target: "ValidNode",
                                                                                                                            args: [
                                                                                                                                Var(
                                                                                                                                    "h",
                                                                                                                                ),
                                                                                                                                Var(
                                                                                                                                    "n",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                        },
                                                                                                                    ),
                                                                                                                },
                                                                                                            ),
                                                                                                            op: And,
                                                                                                            rhs: FuncCall(
                                                                                                                FuncCall {
                                                                                                                    target: "SubSet",
                                                                                                                    args: [
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "h",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "n",
                                                                                                                                            ),
                                                                                                                                            Var(
                                                                                                                                                "footprint",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "h",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "q",
                                                                                                                                            ),
                                                                                                                                            Var(
                                                                                                                                                "footprint",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                    op: And,
                                                                                                    rhs: Neg(
                                                                                                        NegExpr {
                                                                                                            op: Logical,
                                                                                                            expr: Array(
                                                                                                                ArrayExpr {
                                                                                                                    expr: Var(
                                                                                                                        "h",
                                                                                                                    ),
                                                                                                                    subscripts: [
                                                                                                                        ArraySubscript {
                                                                                                                            keys: [
                                                                                                                                Var(
                                                                                                                                    "n",
                                                                                                                                ),
                                                                                                                                Var(
                                                                                                                                    "footprint",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            value: None,
                                                                                                                        },
                                                                                                                        ArraySubscript {
                                                                                                                            keys: [
                                                                                                                                Var(
                                                                                                                                    "q",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            value: None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            op: And,
                                                                                            rhs: Implies(
                                                                                                ImpliesExpr {
                                                                                                    lhs: Rel(
                                                                                                        RelExpr {
                                                                                                            lhs: Array(
                                                                                                                ArrayExpr {
                                                                                                                    expr: Var(
                                                                                                                        "h",
                                                                                                                    ),
                                                                                                                    subscripts: [
                                                                                                                        ArraySubscript {
                                                                                                                            keys: [
                                                                                                                                Var(
                                                                                                                                    "n",
                                                                                                                                ),
                                                                                                                                Var(
                                                                                                                                    "next",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            value: None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                            op: Eq,
                                                                                                            rhs: Var(
                                                                                                                "null",
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                    rhs: Rel(
                                                                                                        RelExpr {
                                                                                                            lhs: Var(
                                                                                                                "n",
                                                                                                            ),
                                                                                                            op: Eq,
                                                                                                            rhs: Array(
                                                                                                                ArrayExpr {
                                                                                                                    expr: Var(
                                                                                                                        "h",
                                                                                                                    ),
                                                                                                                    subscripts: [
                                                                                                                        ArraySubscript {
                                                                                                                            keys: [
                                                                                                                                Var(
                                                                                                                                    "q",
                                                                                                                                ),
                                                                                                                                Var(
                                                                                                                                    "tail",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            value: None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        op: And,
                                                        rhs: Quant(
                                                            QuantExpr {
                                                                kind: ForAll,
                                                                body: QuantBody {
                                                                    type_params: [],
                                                                    bound_vars: [
                                                                        AttrTypedIdentsWhere {
                                                                            attrs: [],
                                                                            typed_idents_where: TypedIdentsWhere {
                                                                                typed_idents: TypedIdents {
                                                                                    idents: [
                                                                                        "n",
                                                                                    ],
                                                                                    type_: App(
                                                                                        TypeApp {
                                                                                            head: "ref",
                                                                                            tail: None,
                                                                                        },
                                                                                    ),
                                                                                },
                                                                                where_: None,
                                                                            },
                                                                        },
                                                                    ],
                                                                    attrs: [
                                                                        Trigger(
                                                                            [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "h",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "n",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        ),
                                                                    ],
                                                                    expr: Implies(
                                                                        ImpliesExpr {
                                                                            lhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "h",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "q",
                                                                                                ),
                                                                                                Var(
                                                                                                    "mynodes",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "n",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            rhs: Implies(
                                                                                ImpliesExpr {
                                                                                    lhs: Rel(
                                                                                        RelExpr {
                                                                                            lhs: Array(
                                                                                                ArrayExpr {
                                                                                                    expr: Var(
                                                                                                        "h",
                                                                                                    ),
                                                                                                    subscripts: [
                                                                                                        ArraySubscript {
                                                                                                            keys: [
                                                                                                                Var(
                                                                                                                    "n",
                                                                                                                ),
                                                                                                                Var(
                                                                                                                    "next",
                                                                                                                ),
                                                                                                            ],
                                                                                                            value: None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                            op: Neq,
                                                                                            rhs: Var(
                                                                                                "null",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                    rhs: Array(
                                                                                        ArrayExpr {
                                                                                            expr: Var(
                                                                                                "h",
                                                                                            ),
                                                                                            subscripts: [
                                                                                                ArraySubscript {
                                                                                                    keys: [
                                                                                                        Var(
                                                                                                            "q",
                                                                                                        ),
                                                                                                        Var(
                                                                                                            "mynodes",
                                                                                                        ),
                                                                                                    ],
                                                                                                    value: None,
                                                                                                },
                                                                                                ArraySubscript {
                                                                                                    keys: [
                                                                                                        Array(
                                                                                                            ArrayExpr {
                                                                                                                expr: Var(
                                                                                                                    "h",
                                                                                                                ),
                                                                                                                subscripts: [
                                                                                                                    ArraySubscript {
                                                                                                                        keys: [
                                                                                                                            Var(
                                                                                                                                "n",
                                                                                                                            ),
                                                                                                                            Var(
                                                                                                                                "next",
                                                                                                                            ),
                                                                                                                        ],
                                                                                                                        value: None,
                                                                                                                    },
                                                                                                                ],
                                                                                                            },
                                                                                                        ),
                                                                                                    ],
                                                                                                    value: None,
                                                                                                },
                                                                                            ],
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            },
                                                        ),
                                                    },
                                                ),
                                                op: And,
                                                rhs: Rel(
                                                    RelExpr {
                                                        lhs: Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "h",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "q",
                                                                            ),
                                                                            Var(
                                                                                "abstractValue",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                        op: Eq,
                                                        rhs: Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "h",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "h",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "q",
                                                                                                ),
                                                                                                Var(
                                                                                                    "head",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            Var(
                                                                                "abstractValue",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "h0",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "h1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "ValidQueue",
                                            args: [
                                                Var(
                                                    "h0",
                                                ),
                                                Var(
                                                    "n",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "ValidQueue",
                                            args: [
                                                Var(
                                                    "h1",
                                                ),
                                                Var(
                                                    "n",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Quant(
                                            QuantExpr {
                                                kind: ForAll,
                                                body: QuantBody {
                                                    type_params: [
                                                        "alpha",
                                                    ],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "o",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "ref",
                                                                            tail: None,
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "f",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "Field",
                                                                            tail: Some(
                                                                                App(
                                                                                    TypeApp {
                                                                                        head: "alpha",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: Implies(
                                                        ImpliesExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Logical(
                                                                        LogicalExpr {
                                                                            lhs: Rel(
                                                                                RelExpr {
                                                                                    lhs: Var(
                                                                                        "o",
                                                                                    ),
                                                                                    op: Neq,
                                                                                    rhs: Var(
                                                                                        "null",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            op: And,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "h0",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o",
                                                                                                ),
                                                                                                Var(
                                                                                                    "alloc",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h0",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "n",
                                                                                        ),
                                                                                        Var(
                                                                                            "footprint",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h0",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                        Var(
                                                                                            "f",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h1",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                        Var(
                                                                                            "f",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        op: And,
                                        rhs: Quant(
                                            QuantExpr {
                                                kind: ForAll,
                                                body: QuantBody {
                                                    type_params: [
                                                        "alpha",
                                                    ],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "o",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "ref",
                                                                            tail: None,
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "f",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "Field",
                                                                            tail: Some(
                                                                                App(
                                                                                    TypeApp {
                                                                                        head: "alpha",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: Implies(
                                                        ImpliesExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Logical(
                                                                        LogicalExpr {
                                                                            lhs: Rel(
                                                                                RelExpr {
                                                                                    lhs: Var(
                                                                                        "o",
                                                                                    ),
                                                                                    op: Neq,
                                                                                    rhs: Var(
                                                                                        "null",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            op: And,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "h1",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o",
                                                                                                ),
                                                                                                Var(
                                                                                                    "alloc",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h1",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "n",
                                                                                        ),
                                                                                        Var(
                                                                                            "footprint",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h0",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                        Var(
                                                                                            "f",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h1",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                        Var(
                                                                                            "f",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "ValidQueue",
                                                args: [
                                                    Var(
                                                        "h0",
                                                    ),
                                                    Var(
                                                        "n",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "ValidQueue",
                                                args: [
                                                    Var(
                                                        "h1",
                                                    ),
                                                    Var(
                                                        "n",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "ValidNode",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "h",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "ValidNode",
                                            args: [
                                                Var(
                                                    "h",
                                                ),
                                                Var(
                                                    "n",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "n",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "h",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "n",
                                                            ),
                                                            Var(
                                                                "alloc",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                rhs: Equiv(
                                    EquivExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "ValidNode",
                                                args: [
                                                    Var(
                                                        "h",
                                                    ),
                                                    Var(
                                                        "n",
                                                    ),
                                                ],
                                            },
                                        ),
                                        rhs: Logical(
                                            LogicalExpr {
                                                lhs: Logical(
                                                    LogicalExpr {
                                                        lhs: Logical(
                                                            LogicalExpr {
                                                                lhs: Logical(
                                                                    LogicalExpr {
                                                                        lhs: Quant(
                                                                            QuantExpr {
                                                                                kind: ForAll,
                                                                                body: QuantBody {
                                                                                    type_params: [],
                                                                                    bound_vars: [
                                                                                        AttrTypedIdentsWhere {
                                                                                            attrs: [],
                                                                                            typed_idents_where: TypedIdentsWhere {
                                                                                                typed_idents: TypedIdents {
                                                                                                    idents: [
                                                                                                        "o",
                                                                                                    ],
                                                                                                    type_: App(
                                                                                                        TypeApp {
                                                                                                            head: "ref",
                                                                                                            tail: None,
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                                where_: None,
                                                                                            },
                                                                                        },
                                                                                    ],
                                                                                    attrs: [
                                                                                        Trigger(
                                                                                            [
                                                                                                Array(
                                                                                                    ArrayExpr {
                                                                                                        expr: Var(
                                                                                                            "h",
                                                                                                        ),
                                                                                                        subscripts: [
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "n",
                                                                                                                    ),
                                                                                                                    Var(
                                                                                                                        "footprint",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                            ArraySubscript {
                                                                                                                keys: [
                                                                                                                    Var(
                                                                                                                        "o",
                                                                                                                    ),
                                                                                                                ],
                                                                                                                value: None,
                                                                                                            },
                                                                                                        ],
                                                                                                    },
                                                                                                ),
                                                                                            ],
                                                                                        ),
                                                                                    ],
                                                                                    expr: Implies(
                                                                                        ImpliesExpr {
                                                                                            lhs: Logical(
                                                                                                LogicalExpr {
                                                                                                    lhs: Rel(
                                                                                                        RelExpr {
                                                                                                            lhs: Var(
                                                                                                                "o",
                                                                                                            ),
                                                                                                            op: Neq,
                                                                                                            rhs: Var(
                                                                                                                "null",
                                                                                                            ),
                                                                                                        },
                                                                                                    ),
                                                                                                    op: And,
                                                                                                    rhs: Array(
                                                                                                        ArrayExpr {
                                                                                                            expr: Var(
                                                                                                                "h",
                                                                                                            ),
                                                                                                            subscripts: [
                                                                                                                ArraySubscript {
                                                                                                                    keys: [
                                                                                                                        Var(
                                                                                                                            "n",
                                                                                                                        ),
                                                                                                                        Var(
                                                                                                                            "footprint",
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                    value: None,
                                                                                                                },
                                                                                                                ArraySubscript {
                                                                                                                    keys: [
                                                                                                                        Var(
                                                                                                                            "o",
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                    value: None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                            rhs: Array(
                                                                                                ArrayExpr {
                                                                                                    expr: Var(
                                                                                                        "h",
                                                                                                    ),
                                                                                                    subscripts: [
                                                                                                        ArraySubscript {
                                                                                                            keys: [
                                                                                                                Var(
                                                                                                                    "o",
                                                                                                                ),
                                                                                                                Var(
                                                                                                                    "alloc",
                                                                                                                ),
                                                                                                            ],
                                                                                                            value: None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                },
                                                                            },
                                                                        ),
                                                                        op: And,
                                                                        rhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "h",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "n",
                                                                                            ),
                                                                                            Var(
                                                                                                "footprint",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "n",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                                op: And,
                                                                rhs: Implies(
                                                                    ImpliesExpr {
                                                                        lhs: Rel(
                                                                            RelExpr {
                                                                                lhs: Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "h",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "n",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "next",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Neq,
                                                                                rhs: Var(
                                                                                    "null",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        rhs: Logical(
                                                                            LogicalExpr {
                                                                                lhs: Logical(
                                                                                    LogicalExpr {
                                                                                        lhs: Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "h",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Array(
                                                                                                                ArrayExpr {
                                                                                                                    expr: Var(
                                                                                                                        "h",
                                                                                                                    ),
                                                                                                                    subscripts: [
                                                                                                                        ArraySubscript {
                                                                                                                            keys: [
                                                                                                                                Var(
                                                                                                                                    "n",
                                                                                                                                ),
                                                                                                                                Var(
                                                                                                                                    "next",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            value: None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                            Var(
                                                                                                                "alloc",
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                        op: And,
                                                                                        rhs: FuncCall(
                                                                                            FuncCall {
                                                                                                target: "SubSet",
                                                                                                args: [
                                                                                                    Array(
                                                                                                        ArrayExpr {
                                                                                                            expr: Var(
                                                                                                                "h",
                                                                                                            ),
                                                                                                            subscripts: [
                                                                                                                ArraySubscript {
                                                                                                                    keys: [
                                                                                                                        Array(
                                                                                                                            ArrayExpr {
                                                                                                                                expr: Var(
                                                                                                                                    "h",
                                                                                                                                ),
                                                                                                                                subscripts: [
                                                                                                                                    ArraySubscript {
                                                                                                                                        keys: [
                                                                                                                                            Var(
                                                                                                                                                "n",
                                                                                                                                            ),
                                                                                                                                            Var(
                                                                                                                                                "next",
                                                                                                                                            ),
                                                                                                                                        ],
                                                                                                                                        value: None,
                                                                                                                                    },
                                                                                                                                ],
                                                                                                                            },
                                                                                                                        ),
                                                                                                                        Var(
                                                                                                                            "footprint",
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                    value: None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                    Array(
                                                                                                        ArrayExpr {
                                                                                                            expr: Var(
                                                                                                                "h",
                                                                                                            ),
                                                                                                            subscripts: [
                                                                                                                ArraySubscript {
                                                                                                                    keys: [
                                                                                                                        Var(
                                                                                                                            "n",
                                                                                                                        ),
                                                                                                                        Var(
                                                                                                                            "footprint",
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                    value: None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                                op: And,
                                                                                rhs: Neg(
                                                                                    NegExpr {
                                                                                        op: Logical,
                                                                                        expr: Array(
                                                                                            ArrayExpr {
                                                                                                expr: Var(
                                                                                                    "h",
                                                                                                ),
                                                                                                subscripts: [
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Array(
                                                                                                                ArrayExpr {
                                                                                                                    expr: Var(
                                                                                                                        "h",
                                                                                                                    ),
                                                                                                                    subscripts: [
                                                                                                                        ArraySubscript {
                                                                                                                            keys: [
                                                                                                                                Var(
                                                                                                                                    "n",
                                                                                                                                ),
                                                                                                                                Var(
                                                                                                                                    "next",
                                                                                                                                ),
                                                                                                                            ],
                                                                                                                            value: None,
                                                                                                                        },
                                                                                                                    ],
                                                                                                                },
                                                                                                            ),
                                                                                                            Var(
                                                                                                                "footprint",
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                    ArraySubscript {
                                                                                                        keys: [
                                                                                                            Var(
                                                                                                                "n",
                                                                                                            ),
                                                                                                        ],
                                                                                                        value: None,
                                                                                                    },
                                                                                                ],
                                                                                            },
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                        op: And,
                                                        rhs: Implies(
                                                            ImpliesExpr {
                                                                lhs: Rel(
                                                                    RelExpr {
                                                                        lhs: Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "h",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "n",
                                                                                            ),
                                                                                            Var(
                                                                                                "next",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: Var(
                                                                            "null",
                                                                        ),
                                                                    },
                                                                ),
                                                                rhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "EqualSeq",
                                                                        args: [
                                                                            Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "h",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "n",
                                                                                                ),
                                                                                                Var(
                                                                                                    "abstractValue",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            Var(
                                                                                "EmptySeq",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                                op: And,
                                                rhs: Implies(
                                                    ImpliesExpr {
                                                        lhs: Rel(
                                                            RelExpr {
                                                                lhs: Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "h",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "n",
                                                                                    ),
                                                                                    Var(
                                                                                        "next",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Neq,
                                                                rhs: Var(
                                                                    "null",
                                                                ),
                                                            },
                                                        ),
                                                        rhs: FuncCall(
                                                            FuncCall {
                                                                target: "EqualSeq",
                                                                args: [
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "n",
                                                                                        ),
                                                                                        Var(
                                                                                            "abstractValue",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Append",
                                                                            args: [
                                                                                FuncCall(
                                                                                    FuncCall {
                                                                                        target: "Singleton",
                                                                                        args: [
                                                                                            Array(
                                                                                                ArrayExpr {
                                                                                                    expr: Var(
                                                                                                        "h",
                                                                                                    ),
                                                                                                    subscripts: [
                                                                                                        ArraySubscript {
                                                                                                            keys: [
                                                                                                                Array(
                                                                                                                    ArrayExpr {
                                                                                                                        expr: Var(
                                                                                                                            "h",
                                                                                                                        ),
                                                                                                                        subscripts: [
                                                                                                                            ArraySubscript {
                                                                                                                                keys: [
                                                                                                                                    Var(
                                                                                                                                        "n",
                                                                                                                                    ),
                                                                                                                                    Var(
                                                                                                                                        "next",
                                                                                                                                    ),
                                                                                                                                ],
                                                                                                                                value: None,
                                                                                                                            },
                                                                                                                        ],
                                                                                                                    },
                                                                                                                ),
                                                                                                                Var(
                                                                                                                    "data",
                                                                                                                ),
                                                                                                            ],
                                                                                                            value: None,
                                                                                                        },
                                                                                                    ],
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "h",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Array(
                                                                                                        ArrayExpr {
                                                                                                            expr: Var(
                                                                                                                "h",
                                                                                                            ),
                                                                                                            subscripts: [
                                                                                                                ArraySubscript {
                                                                                                                    keys: [
                                                                                                                        Var(
                                                                                                                            "n",
                                                                                                                        ),
                                                                                                                        Var(
                                                                                                                            "next",
                                                                                                                        ),
                                                                                                                    ],
                                                                                                                    value: None,
                                                                                                                },
                                                                                                            ],
                                                                                                        },
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "abstractValue",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "h0",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "h1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "ValidNode",
                                            args: [
                                                Var(
                                                    "h0",
                                                ),
                                                Var(
                                                    "n",
                                                ),
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "ValidNode",
                                            args: [
                                                Var(
                                                    "h1",
                                                ),
                                                Var(
                                                    "n",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Quant(
                                            QuantExpr {
                                                kind: ForAll,
                                                body: QuantBody {
                                                    type_params: [
                                                        "alpha",
                                                    ],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "o",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "ref",
                                                                            tail: None,
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "f",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "Field",
                                                                            tail: Some(
                                                                                App(
                                                                                    TypeApp {
                                                                                        head: "alpha",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: Implies(
                                                        ImpliesExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Logical(
                                                                        LogicalExpr {
                                                                            lhs: Rel(
                                                                                RelExpr {
                                                                                    lhs: Var(
                                                                                        "o",
                                                                                    ),
                                                                                    op: Neq,
                                                                                    rhs: Var(
                                                                                        "null",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            op: And,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "h0",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o",
                                                                                                ),
                                                                                                Var(
                                                                                                    "alloc",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h0",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "n",
                                                                                        ),
                                                                                        Var(
                                                                                            "footprint",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h0",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                        Var(
                                                                                            "f",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h1",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                        Var(
                                                                                            "f",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                        op: And,
                                        rhs: Quant(
                                            QuantExpr {
                                                kind: ForAll,
                                                body: QuantBody {
                                                    type_params: [
                                                        "alpha",
                                                    ],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "o",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "ref",
                                                                            tail: None,
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "f",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "Field",
                                                                            tail: Some(
                                                                                App(
                                                                                    TypeApp {
                                                                                        head: "alpha",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [],
                                                    expr: Implies(
                                                        ImpliesExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Logical(
                                                                        LogicalExpr {
                                                                            lhs: Rel(
                                                                                RelExpr {
                                                                                    lhs: Var(
                                                                                        "o",
                                                                                    ),
                                                                                    op: Neq,
                                                                                    rhs: Var(
                                                                                        "null",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            op: And,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "h1",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o",
                                                                                                ),
                                                                                                Var(
                                                                                                    "alloc",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h1",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "n",
                                                                                        ),
                                                                                        Var(
                                                                                            "footprint",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h0",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                        Var(
                                                                                            "f",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "h1",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                        Var(
                                                                                            "f",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "ValidNode",
                                                args: [
                                                    Var(
                                                        "h0",
                                                    ),
                                                    Var(
                                                        "n",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "ValidNode",
                                                args: [
                                                    Var(
                                                        "h1",
                                                    ),
                                                    Var(
                                                        "n",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "MakeQueue",
                type_params: [],
                var_params: [],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "q",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "H",
                        ],
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ModifiesOnlySet",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Var(
                                        "H",
                                    ),
                                    Var(
                                        "EmptySet",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "q",
                                        ),
                                        op: Neq,
                                        rhs: Var(
                                            "null",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Array(
                                    ArrayExpr {
                                        expr: Var(
                                            "H",
                                        ),
                                        subscripts: [
                                            ArraySubscript {
                                                keys: [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "alloc",
                                                    ),
                                                ],
                                                value: None,
                                            },
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "AllNewSet",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "q",
                                                        ),
                                                        Var(
                                                            "footprint",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidQueue",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                    Var(
                                        "q",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Length",
                                        args: [
                                            Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "q",
                                                                ),
                                                                Var(
                                                                    "abstractValue",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: Nat(
                                    "0",
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Fresh",
                                            args: [
                                                Var(
                                                    "H",
                                                ),
                                                Var(
                                                    "q",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "alloc",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "n",
                                        ],
                                        target: "MakeNode",
                                        params: [
                                            Var(
                                                "NullT",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "head",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "n",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "tail",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "n",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "mynodes",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "SingletonSet",
                                                args: [
                                                    Var(
                                                        "n",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "footprint",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "UnionSet",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "SingletonSet",
                                                            args: [
                                                                Var(
                                                                    "q",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "H",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "n",
                                                                        ),
                                                                        Var(
                                                                            "footprint",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "abstractValue",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "n",
                                                            ),
                                                            Var(
                                                                "abstractValue",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "IsEmpty",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "q",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "isEmpty",
                                ],
                                type_: Atom(
                                    Bool,
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "q",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "q",
                                                            ),
                                                            Var(
                                                                "alloc",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "ValidQueue",
                                        args: [
                                            Var(
                                                "H",
                                            ),
                                            Var(
                                                "q",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Equiv(
                            EquivExpr {
                                lhs: Var(
                                    "isEmpty",
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "Length",
                                                args: [
                                                    Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "H",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "q",
                                                                        ),
                                                                        Var(
                                                                            "abstractValue",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: Nat(
                                            "0",
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "isEmpty",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "H",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "q",
                                                                    ),
                                                                    Var(
                                                                        "head",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Eq,
                                                rhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "H",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "q",
                                                                    ),
                                                                    Var(
                                                                        "tail",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Enqueue",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "q",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "t",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "T",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "q",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "q",
                                                            ),
                                                            Var(
                                                                "alloc",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "ValidQueue",
                                        args: [
                                            Var(
                                                "H",
                                            ),
                                            Var(
                                                "q",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "H",
                        ],
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ModifiesOnlySet",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Var(
                                        "H",
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Old(
                                                OldExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                },
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "q",
                                                        ),
                                                        Var(
                                                            "footprint",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "DifferenceIsNew",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Old(
                                                OldExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                },
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "q",
                                                        ),
                                                        Var(
                                                            "footprint",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "q",
                                                        ),
                                                        Var(
                                                            "footprint",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidQueue",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                    Var(
                                        "q",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "EqualSeq",
                                args: [
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "q",
                                                        ),
                                                        Var(
                                                            "abstractValue",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "Append",
                                            args: [
                                                Array(
                                                    ArrayExpr {
                                                        expr: Old(
                                                            OldExpr {
                                                                expr: Var(
                                                                    "H",
                                                                ),
                                                            },
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "q",
                                                                    ),
                                                                    Var(
                                                                        "abstractValue",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                FuncCall(
                                                    FuncCall {
                                                        target: "Singleton",
                                                        args: [
                                                            Var(
                                                                "t",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "n",
                                        ],
                                        target: "MakeNode",
                                        params: [
                                            Var(
                                                "t",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "BulkUpdateFootprint",
                                        params: [
                                            Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "q",
                                                                ),
                                                                Var(
                                                                    "mynodes",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "n",
                                                                ),
                                                                Var(
                                                                    "footprint",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "footprint",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "UnionSet",
                                                args: [
                                                    Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "H",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "q",
                                                                        ),
                                                                        Var(
                                                                            "footprint",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "H",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "n",
                                                                        ),
                                                                        Var(
                                                                            "footprint",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "BulkUpdateAbstractValue",
                                        params: [
                                            Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "q",
                                                                ),
                                                                Var(
                                                                    "mynodes",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            Var(
                                                "t",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "abstractValue",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "H",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "q",
                                                                                ),
                                                                                Var(
                                                                                    "head",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            Var(
                                                                "abstractValue",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "mynodes",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "UnionSet",
                                                args: [
                                                    Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "H",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "q",
                                                                        ),
                                                                        Var(
                                                                            "mynodes",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "SingletonSet",
                                                            args: [
                                                                Var(
                                                                    "n",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "H",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "q",
                                                                        ),
                                                                        Var(
                                                                            "tail",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    Var(
                                                        "next",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "n",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "tail",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "n",
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "BulkUpdateFootprint",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "targetSet",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "ref",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "delta",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "ref",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "H",
                        ],
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ModifiesOnlySetField",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Var(
                                        "H",
                                    ),
                                    Var(
                                        "targetSet",
                                    ),
                                    Var(
                                        "footprint",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Quant(
                            QuantExpr {
                                kind: ForAll,
                                body: QuantBody {
                                    type_params: [],
                                    bound_vars: [
                                        AttrTypedIdentsWhere {
                                            attrs: [],
                                            typed_idents_where: TypedIdentsWhere {
                                                typed_idents: TypedIdents {
                                                    idents: [
                                                        "o",
                                                    ],
                                                    type_: App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                },
                                                where_: None,
                                            },
                                        },
                                    ],
                                    attrs: [],
                                    expr: Implies(
                                        ImpliesExpr {
                                            lhs: Logical(
                                                LogicalExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Rel(
                                                                RelExpr {
                                                                    lhs: Var(
                                                                        "o",
                                                                    ),
                                                                    op: Neq,
                                                                    rhs: Var(
                                                                        "null",
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Old(
                                                                        OldExpr {
                                                                            expr: Var(
                                                                                "H",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o",
                                                                                ),
                                                                                Var(
                                                                                    "alloc",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "targetSet",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "o",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            rhs: Rel(
                                                RelExpr {
                                                    lhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "H",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "o",
                                                                        ),
                                                                        Var(
                                                                            "footprint",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "UnionSet",
                                                            args: [
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Old(
                                                                            OldExpr {
                                                                                expr: Var(
                                                                                    "H",
                                                                                ),
                                                                            },
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "o",
                                                                                    ),
                                                                                    Var(
                                                                                        "footprint",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                                Var(
                                                                    "delta",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "BulkUpdateAbstractValue",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "targetSet",
                                ],
                                type_: Map(
                                    MapType {
                                        type_params: [],
                                        keys: [
                                            App(
                                                TypeApp {
                                                    head: "ref",
                                                    tail: None,
                                                },
                                            ),
                                        ],
                                        value: Atom(
                                            Bool,
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "t",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "T",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "H",
                        ],
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ModifiesOnlySetField",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Var(
                                        "H",
                                    ),
                                    Var(
                                        "targetSet",
                                    ),
                                    Var(
                                        "abstractValue",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Quant(
                            QuantExpr {
                                kind: ForAll,
                                body: QuantBody {
                                    type_params: [],
                                    bound_vars: [
                                        AttrTypedIdentsWhere {
                                            attrs: [],
                                            typed_idents_where: TypedIdentsWhere {
                                                typed_idents: TypedIdents {
                                                    idents: [
                                                        "o",
                                                    ],
                                                    type_: App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                },
                                                where_: None,
                                            },
                                        },
                                    ],
                                    attrs: [],
                                    expr: Implies(
                                        ImpliesExpr {
                                            lhs: Logical(
                                                LogicalExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Rel(
                                                                RelExpr {
                                                                    lhs: Var(
                                                                        "o",
                                                                    ),
                                                                    op: Neq,
                                                                    rhs: Var(
                                                                        "null",
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Old(
                                                                        OldExpr {
                                                                            expr: Var(
                                                                                "H",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o",
                                                                                ),
                                                                                Var(
                                                                                    "alloc",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "targetSet",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "o",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            rhs: FuncCall(
                                                FuncCall {
                                                    target: "EqualSeq",
                                                    args: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "H",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                            Var(
                                                                                "abstractValue",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Append",
                                                                args: [
                                                                    Array(
                                                                        ArrayExpr {
                                                                            expr: Old(
                                                                                OldExpr {
                                                                                    expr: Var(
                                                                                        "H",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                        Var(
                                                                                            "abstractValue",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Singleton",
                                                                            args: [
                                                                                Var(
                                                                                    "t",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        },
                                    ),
                                },
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: None,
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Front",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "q",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "t",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "T",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "q",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "q",
                                                            ),
                                                            Var(
                                                                "alloc",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "ValidQueue",
                                        args: [
                                            Var(
                                                "H",
                                            ),
                                            Var(
                                                "q",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Nat(
                                    "0",
                                ),
                                op: Lt,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Length",
                                        args: [
                                            Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "q",
                                                                ),
                                                                Var(
                                                                    "abstractValue",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Var(
                                    "t",
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Index",
                                        args: [
                                            Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "q",
                                                                ),
                                                                Var(
                                                                    "abstractValue",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "t",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "H",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Array(
                                                                                    ArrayExpr {
                                                                                        expr: Var(
                                                                                            "H",
                                                                                        ),
                                                                                        subscripts: [
                                                                                            ArraySubscript {
                                                                                                keys: [
                                                                                                    Var(
                                                                                                        "q",
                                                                                                    ),
                                                                                                    Var(
                                                                                                        "head",
                                                                                                    ),
                                                                                                ],
                                                                                                value: None,
                                                                                            },
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                Var(
                                                                                    "next",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            Var(
                                                                "data",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Dequeue",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "q",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "q",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "q",
                                                            ),
                                                            Var(
                                                                "alloc",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "ValidQueue",
                                        args: [
                                            Var(
                                                "H",
                                            ),
                                            Var(
                                                "q",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: Nat(
                                    "0",
                                ),
                                op: Lt,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Length",
                                        args: [
                                            Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "q",
                                                                ),
                                                                Var(
                                                                    "abstractValue",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "H",
                        ],
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ModifiesOnlySet",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Var(
                                        "H",
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Old(
                                                OldExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                },
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "q",
                                                        ),
                                                        Var(
                                                            "footprint",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "DifferenceIsNew",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Old(
                                                OldExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                },
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "q",
                                                        ),
                                                        Var(
                                                            "footprint",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "q",
                                                        ),
                                                        Var(
                                                            "footprint",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidQueue",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                    Var(
                                        "q",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "EqualSeq",
                                args: [
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "q",
                                                        ),
                                                        Var(
                                                            "abstractValue",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "Drop",
                                            args: [
                                                Array(
                                                    ArrayExpr {
                                                        expr: Old(
                                                            OldExpr {
                                                                expr: Var(
                                                                    "H",
                                                                ),
                                                            },
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "q",
                                                                    ),
                                                                    Var(
                                                                        "abstractValue",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                Nat(
                                                    "1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "n",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "H",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "q",
                                                                                ),
                                                                                Var(
                                                                                    "head",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                            Var(
                                                                "next",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "head",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "n",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "q",
                                                    ),
                                                    Var(
                                                        "abstractValue",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "n",
                                                            ),
                                                            Var(
                                                                "abstractValue",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "MakeNode",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "t",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "T",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "n",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "H",
                        ],
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ModifiesOnlySet",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Var(
                                        "H",
                                    ),
                                    Var(
                                        "EmptySet",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "n",
                                        ),
                                        op: Neq,
                                        rhs: Var(
                                            "null",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Array(
                                    ArrayExpr {
                                        expr: Var(
                                            "H",
                                        ),
                                        subscripts: [
                                            ArraySubscript {
                                                keys: [
                                                    Var(
                                                        "n",
                                                    ),
                                                    Var(
                                                        "alloc",
                                                    ),
                                                ],
                                                value: None,
                                            },
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "AllNewSet",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "n",
                                                        ),
                                                        Var(
                                                            "footprint",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidNode",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                    Var(
                                        "n",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "n",
                                                            ),
                                                            Var(
                                                                "data",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: Var(
                                            "t",
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "n",
                                                            ),
                                                            Var(
                                                                "next",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: Var(
                                            "null",
                                        ),
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [],
                    stmt_list: [
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assume,
                                    attrs: [],
                                    proposition: FuncCall(
                                        FuncCall {
                                            target: "Fresh",
                                            args: [
                                                Var(
                                                    "H",
                                                ),
                                                Var(
                                                    "n",
                                                ),
                                            ],
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "n",
                                                    ),
                                                    Var(
                                                        "alloc",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        BoolLit(
                                            true,
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "n",
                                                    ),
                                                    Var(
                                                        "next",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "null",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "n",
                                                    ),
                                                    Var(
                                                        "data",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "t",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "n",
                                                    ),
                                                    Var(
                                                        "footprint",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "SingletonSet",
                                                args: [
                                                    Var(
                                                        "n",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "H",
                                            subscripts: [
                                                [
                                                    Var(
                                                        "n",
                                                    ),
                                                    Var(
                                                        "abstractValue",
                                                    ),
                                                ],
                                            ],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "EmptySeq",
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Main",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "t",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "T",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "u",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "T",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "v",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "T",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "H",
                        ],
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ModifiesOnlySet",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Var(
                                        "H",
                                    ),
                                    Var(
                                        "EmptySet",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "q0",
                                            "q1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "w",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "T",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "q0",
                                        ],
                                        target: "MakeQueue",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "q1",
                                        ],
                                        target: "MakeQueue",
                                        params: [],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "Enqueue",
                                        params: [
                                            Var(
                                                "q0",
                                            ),
                                            Var(
                                                "t",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "Enqueue",
                                        params: [
                                            Var(
                                                "q0",
                                            ),
                                            Var(
                                                "u",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "Enqueue",
                                        params: [
                                            Var(
                                                "q1",
                                            ),
                                            Var(
                                                "v",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Length",
                                                    args: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "H",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "q0",
                                                                            ),
                                                                            Var(
                                                                                "abstractValue",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "2",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "w",
                                        ],
                                        target: "Front",
                                        params: [
                                            Var(
                                                "q0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "w",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "t",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "Dequeue",
                                        params: [
                                            Var(
                                                "q0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "w",
                                        ],
                                        target: "Front",
                                        params: [
                                            Var(
                                                "q0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "w",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "u",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Length",
                                                    args: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "H",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "q0",
                                                                            ),
                                                                            Var(
                                                                                "abstractValue",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Length",
                                                    args: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "H",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "q1",
                                                                            ),
                                                                            Var(
                                                                                "abstractValue",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "Main2",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "t",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "T",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "u",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "T",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "v",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "T",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "q0",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "q1",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "q0",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "q0",
                                                            ),
                                                            Var(
                                                                "alloc",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "ValidQueue",
                                        args: [
                                            Var(
                                                "H",
                                            ),
                                            Var(
                                                "q0",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Logical(
                            LogicalExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "q1",
                                                ),
                                                op: Neq,
                                                rhs: Var(
                                                    "null",
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "H",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "q1",
                                                            ),
                                                            Var(
                                                                "alloc",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "ValidQueue",
                                        args: [
                                            Var(
                                                "H",
                                            ),
                                            Var(
                                                "q1",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "DisjointSet",
                                args: [
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "q0",
                                                        ),
                                                        Var(
                                                            "footprint",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "q1",
                                                        ),
                                                        Var(
                                                            "footprint",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Length",
                                        args: [
                                            Array(
                                                ArrayExpr {
                                                    expr: Var(
                                                        "H",
                                                    ),
                                                    subscripts: [
                                                        ArraySubscript {
                                                            keys: [
                                                                Var(
                                                                    "q0",
                                                                ),
                                                                Var(
                                                                    "abstractValue",
                                                                ),
                                                            ],
                                                            value: None,
                                                        },
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: Nat(
                                    "0",
                                ),
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Requires,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Modifies(
                    ModifiesSpec {
                        vars: [
                            "H",
                        ],
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ValidFootprints",
                                args: [
                                    Var(
                                        "H",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "ModifiesOnlySet",
                                args: [
                                    Old(
                                        OldExpr {
                                            expr: Var(
                                                "H",
                                            ),
                                        },
                                    ),
                                    Var(
                                        "H",
                                    ),
                                    FuncCall(
                                        FuncCall {
                                            target: "UnionSet",
                                            args: [
                                                Array(
                                                    ArrayExpr {
                                                        expr: Old(
                                                            OldExpr {
                                                                expr: Var(
                                                                    "H",
                                                                ),
                                                            },
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "q0",
                                                                    ),
                                                                    Var(
                                                                        "footprint",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                Array(
                                                    ArrayExpr {
                                                        expr: Old(
                                                            OldExpr {
                                                                expr: Var(
                                                                    "H",
                                                                ),
                                                            },
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "q1",
                                                                    ),
                                                                    Var(
                                                                        "footprint",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "w",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "T",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "Enqueue",
                                        params: [
                                            Var(
                                                "q0",
                                            ),
                                            Var(
                                                "t",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "Enqueue",
                                        params: [
                                            Var(
                                                "q0",
                                            ),
                                            Var(
                                                "u",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "Enqueue",
                                        params: [
                                            Var(
                                                "q1",
                                            ),
                                            Var(
                                                "v",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Length",
                                                    args: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "H",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "q0",
                                                                            ),
                                                                            Var(
                                                                                "abstractValue",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "2",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "w",
                                        ],
                                        target: "Front",
                                        params: [
                                            Var(
                                                "q0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "w",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "t",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [],
                                        target: "Dequeue",
                                        params: [
                                            Var(
                                                "q0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Call(
                                CallCmd {
                                    attrs: [],
                                    call_params: CallParams {
                                        returns: [
                                            "w",
                                        ],
                                        target: "Front",
                                        params: [
                                            Var(
                                                "q0",
                                            ),
                                        ],
                                    },
                                    is_async: false,
                                    is_free: false,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: Var(
                                                "w",
                                            ),
                                            op: Eq,
                                            rhs: Var(
                                                "u",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Length",
                                                    args: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "H",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "q0",
                                                                            ),
                                                                            Var(
                                                                                "abstractValue",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Nat(
                                                "1",
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Claim(
                                ClaimCmd {
                                    kind: Assert,
                                    attrs: [],
                                    proposition: Rel(
                                        RelExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "Length",
                                                    args: [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "H",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "q1",
                                                                            ),
                                                                            Var(
                                                                                "abstractValue",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            op: Eq,
                                            rhs: Term(
                                                Term {
                                                    lhs: Old(
                                                        OldExpr {
                                                            expr: FuncCall(
                                                                FuncCall {
                                                                    target: "Length",
                                                                    args: [
                                                                        Array(
                                                                            ArrayExpr {
                                                                                expr: Var(
                                                                                    "H",
                                                                                ),
                                                                                subscripts: [
                                                                                    ArraySubscript {
                                                                                        keys: [
                                                                                            Var(
                                                                                                "q1",
                                                                                            ),
                                                                                            Var(
                                                                                                "abstractValue",
                                                                                            ),
                                                                                        ],
                                                                                        value: None,
                                                                                    },
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    op: Add,
                                                    rhs: Nat(
                                                        "1",
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "ModifiesOnlySet",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "oldHeap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "newHeap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "set",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "oldHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "newHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "set",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "ModifiesOnlySet",
                                            args: [
                                                Var(
                                                    "oldHeap",
                                                ),
                                                Var(
                                                    "newHeap",
                                                ),
                                                Var(
                                                    "set",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "ModifiesOnlySet",
                                        args: [
                                            Var(
                                                "oldHeap",
                                            ),
                                            Var(
                                                "newHeap",
                                            ),
                                            Var(
                                                "set",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Logical(
                                    LogicalExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "NoDeallocs",
                                                args: [
                                                    Var(
                                                        "oldHeap",
                                                    ),
                                                    Var(
                                                        "newHeap",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: And,
                                        rhs: Quant(
                                            QuantExpr {
                                                kind: ForAll,
                                                body: QuantBody {
                                                    type_params: [
                                                        "alpha",
                                                    ],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "o",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "ref",
                                                                            tail: None,
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "f",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "Field",
                                                                            tail: Some(
                                                                                App(
                                                                                    TypeApp {
                                                                                        head: "alpha",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [
                                                        Trigger(
                                                            [
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "newHeap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "o",
                                                                                    ),
                                                                                    Var(
                                                                                        "f",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    expr: Implies(
                                                        ImpliesExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "o",
                                                                            ),
                                                                            op: Neq,
                                                                            rhs: Var(
                                                                                "null",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "oldHeap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                        Var(
                                                                                            "alloc",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "oldHeap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o",
                                                                                                ),
                                                                                                Var(
                                                                                                    "f",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            op: Eq,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "newHeap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o",
                                                                                                ),
                                                                                                Var(
                                                                                                    "f",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: Or,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "set",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "ModifiesOnlySetField",
            type_params: [
                "alpha",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "oldHeap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "newHeap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "set",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "field",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Field",
                            tail: Some(
                                App(
                                    TypeApp {
                                        head: "alpha",
                                        tail: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [
                            "alpha",
                        ],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "oldHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "newHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "set",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "field",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Field",
                                                tail: Some(
                                                    App(
                                                        TypeApp {
                                                            head: "alpha",
                                                            tail: None,
                                                        },
                                                    ),
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "ModifiesOnlySetField",
                                            args: [
                                                Var(
                                                    "oldHeap",
                                                ),
                                                Var(
                                                    "newHeap",
                                                ),
                                                Var(
                                                    "set",
                                                ),
                                                Var(
                                                    "field",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "ModifiesOnlySetField",
                                        args: [
                                            Var(
                                                "oldHeap",
                                            ),
                                            Var(
                                                "newHeap",
                                            ),
                                            Var(
                                                "set",
                                            ),
                                            Var(
                                                "field",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Logical(
                                    LogicalExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "NoDeallocs",
                                                args: [
                                                    Var(
                                                        "oldHeap",
                                                    ),
                                                    Var(
                                                        "newHeap",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: And,
                                        rhs: Quant(
                                            QuantExpr {
                                                kind: ForAll,
                                                body: QuantBody {
                                                    type_params: [
                                                        "beta",
                                                    ],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "o",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "ref",
                                                                            tail: None,
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "f",
                                                                    ],
                                                                    type_: App(
                                                                        TypeApp {
                                                                            head: "Field",
                                                                            tail: Some(
                                                                                App(
                                                                                    TypeApp {
                                                                                        head: "beta",
                                                                                        tail: None,
                                                                                    },
                                                                                ),
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [
                                                        Trigger(
                                                            [
                                                                Array(
                                                                    ArrayExpr {
                                                                        expr: Var(
                                                                            "newHeap",
                                                                        ),
                                                                        subscripts: [
                                                                            ArraySubscript {
                                                                                keys: [
                                                                                    Var(
                                                                                        "o",
                                                                                    ),
                                                                                    Var(
                                                                                        "f",
                                                                                    ),
                                                                                ],
                                                                                value: None,
                                                                            },
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    expr: Implies(
                                                        ImpliesExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "o",
                                                                            ),
                                                                            op: Neq,
                                                                            rhs: Var(
                                                                                "null",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Array(
                                                                        ArrayExpr {
                                                                            expr: Var(
                                                                                "oldHeap",
                                                                            ),
                                                                            subscripts: [
                                                                                ArraySubscript {
                                                                                    keys: [
                                                                                        Var(
                                                                                            "o",
                                                                                        ),
                                                                                        Var(
                                                                                            "alloc",
                                                                                        ),
                                                                                    ],
                                                                                    value: None,
                                                                                },
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "oldHeap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o",
                                                                                                ),
                                                                                                Var(
                                                                                                    "f",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            op: Eq,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "newHeap",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o",
                                                                                                ),
                                                                                                Var(
                                                                                                    "f",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: Or,
                                                                    rhs: Logical(
                                                                        LogicalExpr {
                                                                            lhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "set",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                            op: And,
                                                                            rhs: Rel(
                                                                                RelExpr {
                                                                                    lhs: Var(
                                                                                        "f",
                                                                                    ),
                                                                                    op: Eq,
                                                                                    rhs: Var(
                                                                                        "field",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "NoDeallocs",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "oldHeap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "newHeap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "oldHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "newHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "NoDeallocs",
                                            args: [
                                                Var(
                                                    "oldHeap",
                                                ),
                                                Var(
                                                    "newHeap",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "NoDeallocs",
                                        args: [
                                            Var(
                                                "oldHeap",
                                            ),
                                            Var(
                                                "newHeap",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Quant(
                                    QuantExpr {
                                        kind: ForAll,
                                        body: QuantBody {
                                            type_params: [],
                                            bound_vars: [
                                                AttrTypedIdentsWhere {
                                                    attrs: [],
                                                    typed_idents_where: TypedIdentsWhere {
                                                        typed_idents: TypedIdents {
                                                            idents: [
                                                                "o",
                                                            ],
                                                            type_: App(
                                                                TypeApp {
                                                                    head: "ref",
                                                                    tail: None,
                                                                },
                                                            ),
                                                        },
                                                        where_: None,
                                                    },
                                                },
                                            ],
                                            attrs: [
                                                Trigger(
                                                    [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "newHeap",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                            Var(
                                                                                "alloc",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            expr: Implies(
                                                ImpliesExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Rel(
                                                                RelExpr {
                                                                    lhs: Var(
                                                                        "o",
                                                                    ),
                                                                    op: Neq,
                                                                    rhs: Var(
                                                                        "null",
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "oldHeap",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o",
                                                                                ),
                                                                                Var(
                                                                                    "alloc",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "newHeap",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "o",
                                                                        ),
                                                                        Var(
                                                                            "alloc",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "AllNewSet",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "oldHeap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "set",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "oldHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "set",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "AllNewSet",
                                            args: [
                                                Var(
                                                    "oldHeap",
                                                ),
                                                Var(
                                                    "set",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "AllNewSet",
                                        args: [
                                            Var(
                                                "oldHeap",
                                            ),
                                            Var(
                                                "set",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Quant(
                                    QuantExpr {
                                        kind: ForAll,
                                        body: QuantBody {
                                            type_params: [],
                                            bound_vars: [
                                                AttrTypedIdentsWhere {
                                                    attrs: [],
                                                    typed_idents_where: TypedIdentsWhere {
                                                        typed_idents: TypedIdents {
                                                            idents: [
                                                                "o",
                                                            ],
                                                            type_: App(
                                                                TypeApp {
                                                                    head: "ref",
                                                                    tail: None,
                                                                },
                                                            ),
                                                        },
                                                        where_: None,
                                                    },
                                                },
                                            ],
                                            attrs: [
                                                Trigger(
                                                    [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "oldHeap",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                            Var(
                                                                                "alloc",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            expr: Implies(
                                                ImpliesExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Rel(
                                                                RelExpr {
                                                                    lhs: Var(
                                                                        "o",
                                                                    ),
                                                                    op: Neq,
                                                                    rhs: Var(
                                                                        "null",
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "set",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Neg(
                                                        NegExpr {
                                                            op: Logical,
                                                            expr: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "oldHeap",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o",
                                                                                ),
                                                                                Var(
                                                                                    "alloc",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "DifferenceIsNew",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "oldHeap",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "oldSet",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "newSet",
                    ),
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "oldHeap",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "oldSet",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "newSet",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "DifferenceIsNew",
                                            args: [
                                                Var(
                                                    "oldHeap",
                                                ),
                                                Var(
                                                    "oldSet",
                                                ),
                                                Var(
                                                    "newSet",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "DifferenceIsNew",
                                        args: [
                                            Var(
                                                "oldHeap",
                                            ),
                                            Var(
                                                "oldSet",
                                            ),
                                            Var(
                                                "newSet",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Quant(
                                    QuantExpr {
                                        kind: ForAll,
                                        body: QuantBody {
                                            type_params: [],
                                            bound_vars: [
                                                AttrTypedIdentsWhere {
                                                    attrs: [],
                                                    typed_idents_where: TypedIdentsWhere {
                                                        typed_idents: TypedIdents {
                                                            idents: [
                                                                "o",
                                                            ],
                                                            type_: App(
                                                                TypeApp {
                                                                    head: "ref",
                                                                    tail: None,
                                                                },
                                                            ),
                                                        },
                                                        where_: None,
                                                    },
                                                },
                                            ],
                                            attrs: [
                                                Trigger(
                                                    [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "oldHeap",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                            Var(
                                                                                "alloc",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            expr: Implies(
                                                ImpliesExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "o",
                                                                            ),
                                                                            op: Neq,
                                                                            rhs: Var(
                                                                                "null",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Neg(
                                                                        NegExpr {
                                                                            op: Logical,
                                                                            expr: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "oldSet",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "newSet",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Neg(
                                                        NegExpr {
                                                            op: Logical,
                                                            expr: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "oldHeap",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o",
                                                                                ),
                                                                                Var(
                                                                                    "alloc",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "ValidFootprints",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "h",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "h",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "ValidFootprints",
                                            args: [
                                                Var(
                                                    "h",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "ValidFootprints",
                                        args: [
                                            Var(
                                                "h",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Quant(
                                    QuantExpr {
                                        kind: ForAll,
                                        body: QuantBody {
                                            type_params: [],
                                            bound_vars: [
                                                AttrTypedIdentsWhere {
                                                    attrs: [],
                                                    typed_idents_where: TypedIdentsWhere {
                                                        typed_idents: TypedIdents {
                                                            idents: [
                                                                "o",
                                                            ],
                                                            type_: App(
                                                                TypeApp {
                                                                    head: "ref",
                                                                    tail: None,
                                                                },
                                                            ),
                                                        },
                                                        where_: None,
                                                    },
                                                },
                                                AttrTypedIdentsWhere {
                                                    attrs: [],
                                                    typed_idents_where: TypedIdentsWhere {
                                                        typed_idents: TypedIdents {
                                                            idents: [
                                                                "r",
                                                            ],
                                                            type_: App(
                                                                TypeApp {
                                                                    head: "ref",
                                                                    tail: None,
                                                                },
                                                            ),
                                                        },
                                                        where_: None,
                                                    },
                                                },
                                            ],
                                            attrs: [
                                                Trigger(
                                                    [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "h",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                            Var(
                                                                                "footprint",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "r",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            expr: Implies(
                                                ImpliesExpr {
                                                    lhs: Logical(
                                                        LogicalExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Logical(
                                                                        LogicalExpr {
                                                                            lhs: Rel(
                                                                                RelExpr {
                                                                                    lhs: Var(
                                                                                        "o",
                                                                                    ),
                                                                                    op: Neq,
                                                                                    rhs: Var(
                                                                                        "null",
                                                                                    ),
                                                                                },
                                                                            ),
                                                                            op: And,
                                                                            rhs: Array(
                                                                                ArrayExpr {
                                                                                    expr: Var(
                                                                                        "h",
                                                                                    ),
                                                                                    subscripts: [
                                                                                        ArraySubscript {
                                                                                            keys: [
                                                                                                Var(
                                                                                                    "o",
                                                                                                ),
                                                                                                Var(
                                                                                                    "alloc",
                                                                                                ),
                                                                                            ],
                                                                                            value: None,
                                                                                        },
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "r",
                                                                            ),
                                                                            op: Neq,
                                                                            rhs: Var(
                                                                                "null",
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            op: And,
                                                            rhs: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "h",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o",
                                                                                ),
                                                                                Var(
                                                                                    "footprint",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "r",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "h",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "r",
                                                                        ),
                                                                        Var(
                                                                            "alloc",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Fresh",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "h",
                    ),
                    type_: App(
                        TypeApp {
                            head: "HeapType",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "o",
                    ),
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "h",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "HeapType",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "Fresh",
                                            args: [
                                                Var(
                                                    "h",
                                                ),
                                                Var(
                                                    "o",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Fresh",
                                        args: [
                                            Var(
                                                "h",
                                            ),
                                            Var(
                                                "o",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Logical(
                                    LogicalExpr {
                                        lhs: Logical(
                                            LogicalExpr {
                                                lhs: Rel(
                                                    RelExpr {
                                                        lhs: Var(
                                                            "o",
                                                        ),
                                                        op: Neq,
                                                        rhs: Var(
                                                            "null",
                                                        ),
                                                    },
                                                ),
                                                op: And,
                                                rhs: Neg(
                                                    NegExpr {
                                                        op: Logical,
                                                        expr: Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "h",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                            Var(
                                                                                "alloc",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Array(
                                                    ArrayExpr {
                                                        expr: Var(
                                                            "h",
                                                        ),
                                                        subscripts: [
                                                            ArraySubscript {
                                                                keys: [
                                                                    Var(
                                                                        "o",
                                                                    ),
                                                                    Var(
                                                                        "footprint",
                                                                    ),
                                                                ],
                                                                value: None,
                                                            },
                                                        ],
                                                    },
                                                ),
                                                op: Eq,
                                                rhs: FuncCall(
                                                    FuncCall {
                                                        target: "SingletonSet",
                                                        args: [
                                                            Var(
                                                                "o",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "EmptySet",
                ],
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Bool,
                        ),
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    Array(
                                        ArrayExpr {
                                            expr: Var(
                                                "EmptySet",
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Neg(
                            NegExpr {
                                op: Logical,
                                expr: Array(
                                    ArrayExpr {
                                        expr: Var(
                                            "EmptySet",
                                        ),
                                        subscripts: [
                                            ArraySubscript {
                                                keys: [
                                                    Var(
                                                        "o",
                                                    ),
                                                ],
                                                value: None,
                                            },
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "SingletonSet",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "ref",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Bool,
                        ),
                    },
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "r",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "SingletonSet",
                                            args: [
                                                Var(
                                                    "r",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Array(
                            ArrayExpr {
                                expr: FuncCall(
                                    FuncCall {
                                        target: "SingletonSet",
                                        args: [
                                            Var(
                                                "r",
                                            ),
                                        ],
                                    },
                                ),
                                subscripts: [
                                    ArraySubscript {
                                        keys: [
                                            Var(
                                                "r",
                                            ),
                                        ],
                                        value: None,
                                    },
                                ],
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "r",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    Array(
                                        ArrayExpr {
                                            expr: FuncCall(
                                                FuncCall {
                                                    target: "SingletonSet",
                                                    args: [
                                                        Var(
                                                            "r",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: Array(
                                    ArrayExpr {
                                        expr: FuncCall(
                                            FuncCall {
                                                target: "SingletonSet",
                                                args: [
                                                    Var(
                                                        "r",
                                                    ),
                                                ],
                                            },
                                        ),
                                        subscripts: [
                                            ArraySubscript {
                                                keys: [
                                                    Var(
                                                        "o",
                                                    ),
                                                ],
                                                value: None,
                                            },
                                        ],
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "r",
                                        ),
                                        op: Eq,
                                        rhs: Var(
                                            "o",
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "UnionSet",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Map(
                    MapType {
                        type_params: [],
                        keys: [
                            App(
                                TypeApp {
                                    head: "ref",
                                    tail: None,
                                },
                            ),
                        ],
                        value: Atom(
                            Bool,
                        ),
                    },
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "a",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "b",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "o",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "ref",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    Array(
                                        ArrayExpr {
                                            expr: FuncCall(
                                                FuncCall {
                                                    target: "UnionSet",
                                                    args: [
                                                        Var(
                                                            "a",
                                                        ),
                                                        Var(
                                                            "b",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            subscripts: [
                                                ArraySubscript {
                                                    keys: [
                                                        Var(
                                                            "o",
                                                        ),
                                                    ],
                                                    value: None,
                                                },
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: Array(
                                    ArrayExpr {
                                        expr: FuncCall(
                                            FuncCall {
                                                target: "UnionSet",
                                                args: [
                                                    Var(
                                                        "a",
                                                    ),
                                                    Var(
                                                        "b",
                                                    ),
                                                ],
                                            },
                                        ),
                                        subscripts: [
                                            ArraySubscript {
                                                keys: [
                                                    Var(
                                                        "o",
                                                    ),
                                                ],
                                                value: None,
                                            },
                                        ],
                                    },
                                ),
                                rhs: Logical(
                                    LogicalExpr {
                                        lhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "a",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "o",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                        op: Or,
                                        rhs: Array(
                                            ArrayExpr {
                                                expr: Var(
                                                    "b",
                                                ),
                                                subscripts: [
                                                    ArraySubscript {
                                                        keys: [
                                                            Var(
                                                                "o",
                                                            ),
                                                        ],
                                                        value: None,
                                                    },
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "SubSet",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "a",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "b",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "SubSet",
                                            args: [
                                                Var(
                                                    "a",
                                                ),
                                                Var(
                                                    "b",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "SubSet",
                                        args: [
                                            Var(
                                                "a",
                                            ),
                                            Var(
                                                "b",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Quant(
                                    QuantExpr {
                                        kind: ForAll,
                                        body: QuantBody {
                                            type_params: [],
                                            bound_vars: [
                                                AttrTypedIdentsWhere {
                                                    attrs: [],
                                                    typed_idents_where: TypedIdentsWhere {
                                                        typed_idents: TypedIdents {
                                                            idents: [
                                                                "o",
                                                            ],
                                                            type_: App(
                                                                TypeApp {
                                                                    head: "ref",
                                                                    tail: None,
                                                                },
                                                            ),
                                                        },
                                                        where_: None,
                                                    },
                                                },
                                            ],
                                            attrs: [
                                                Trigger(
                                                    [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "a",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                ),
                                                Trigger(
                                                    [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "b",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            expr: Implies(
                                                ImpliesExpr {
                                                    lhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "a",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "o",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    rhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "b",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "o",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "EqualSet",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "a",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "b",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "EqualSet",
                                            args: [
                                                Var(
                                                    "a",
                                                ),
                                                Var(
                                                    "b",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "EqualSet",
                                        args: [
                                            Var(
                                                "a",
                                            ),
                                            Var(
                                                "b",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Quant(
                                    QuantExpr {
                                        kind: ForAll,
                                        body: QuantBody {
                                            type_params: [],
                                            bound_vars: [
                                                AttrTypedIdentsWhere {
                                                    attrs: [],
                                                    typed_idents_where: TypedIdentsWhere {
                                                        typed_idents: TypedIdents {
                                                            idents: [
                                                                "o",
                                                            ],
                                                            type_: App(
                                                                TypeApp {
                                                                    head: "ref",
                                                                    tail: None,
                                                                },
                                                            ),
                                                        },
                                                        where_: None,
                                                    },
                                                },
                                            ],
                                            attrs: [
                                                Trigger(
                                                    [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "a",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                ),
                                                Trigger(
                                                    [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "b",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            expr: Equiv(
                                                EquivExpr {
                                                    lhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "a",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "o",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                    rhs: Array(
                                                        ArrayExpr {
                                                            expr: Var(
                                                                "b",
                                                            ),
                                                            subscripts: [
                                                                ArraySubscript {
                                                                    keys: [
                                                                        Var(
                                                                            "o",
                                                                        ),
                                                                    ],
                                                                    value: None,
                                                                },
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "DisjointSet",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Map(
                        MapType {
                            type_params: [],
                            keys: [
                                App(
                                    TypeApp {
                                        head: "ref",
                                        tail: None,
                                    },
                                ),
                            ],
                            value: Atom(
                                Bool,
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "a",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "b",
                                        ],
                                        type_: Map(
                                            MapType {
                                                type_params: [],
                                                keys: [
                                                    App(
                                                        TypeApp {
                                                            head: "ref",
                                                            tail: None,
                                                        },
                                                    ),
                                                ],
                                                value: Atom(
                                                    Bool,
                                                ),
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "DisjointSet",
                                            args: [
                                                Var(
                                                    "a",
                                                ),
                                                Var(
                                                    "b",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "DisjointSet",
                                        args: [
                                            Var(
                                                "a",
                                            ),
                                            Var(
                                                "b",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Quant(
                                    QuantExpr {
                                        kind: ForAll,
                                        body: QuantBody {
                                            type_params: [],
                                            bound_vars: [
                                                AttrTypedIdentsWhere {
                                                    attrs: [],
                                                    typed_idents_where: TypedIdentsWhere {
                                                        typed_idents: TypedIdents {
                                                            idents: [
                                                                "o",
                                                            ],
                                                            type_: App(
                                                                TypeApp {
                                                                    head: "ref",
                                                                    tail: None,
                                                                },
                                                            ),
                                                        },
                                                        where_: None,
                                                    },
                                                },
                                            ],
                                            attrs: [
                                                Trigger(
                                                    [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "a",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                ),
                                                Trigger(
                                                    [
                                                        Array(
                                                            ArrayExpr {
                                                                expr: Var(
                                                                    "b",
                                                                ),
                                                                subscripts: [
                                                                    ArraySubscript {
                                                                        keys: [
                                                                            Var(
                                                                                "o",
                                                                            ),
                                                                        ],
                                                                        value: None,
                                                                    },
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                ),
                                            ],
                                            expr: Logical(
                                                LogicalExpr {
                                                    lhs: Neg(
                                                        NegExpr {
                                                            op: Logical,
                                                            expr: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "a",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                    op: Or,
                                                    rhs: Neg(
                                                        NegExpr {
                                                            op: Logical,
                                                            expr: Array(
                                                                ArrayExpr {
                                                                    expr: Var(
                                                                        "b",
                                                                    ),
                                                                    subscripts: [
                                                                        ArraySubscript {
                                                                            keys: [
                                                                                Var(
                                                                                    "o",
                                                                                ),
                                                                            ],
                                                                            value: None,
                                                                        },
                                                                    ],
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Type(
        TypeDecls {
            attrs: [],
            decls: [
                TypeDecl {
                    ident: "Seq",
                    type_params: [],
                    type_: None,
                },
            ],
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Length",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "Seq",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Int,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "Length",
                                            args: [
                                                Var(
                                                    "s",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Rel(
                            RelExpr {
                                lhs: Nat(
                                    "0",
                                ),
                                op: Le,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Length",
                                        args: [
                                            Var(
                                                "s",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Const(
        ConstDecl {
            attrs: [],
            is_unique: false,
            consts: TypedIdents {
                idents: [
                    "EmptySeq",
                ],
                type_: App(
                    TypeApp {
                        head: "Seq",
                        tail: None,
                    },
                ),
            },
            order_spec: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Rel(
                RelExpr {
                    lhs: FuncCall(
                        FuncCall {
                            target: "Length",
                            args: [
                                Var(
                                    "EmptySeq",
                                ),
                            ],
                        },
                    ),
                    op: Eq,
                    rhs: Nat(
                        "0",
                    ),
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "Length",
                                            args: [
                                                Var(
                                                    "s",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "Length",
                                                args: [
                                                    Var(
                                                        "s",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: Nat(
                                            "0",
                                        ),
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: Var(
                                            "s",
                                        ),
                                        op: Eq,
                                        rhs: Var(
                                            "EmptySeq",
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Singleton",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "T",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "Seq",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "t",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "T",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "Length",
                                            args: [
                                                FuncCall(
                                                    FuncCall {
                                                        target: "Singleton",
                                                        args: [
                                                            Var(
                                                                "t",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Length",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Singleton",
                                                    args: [
                                                        Var(
                                                            "t",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: Nat(
                                    "1",
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Append",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "Seq",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "Seq",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "Seq",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s0",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "Length",
                                            args: [
                                                FuncCall(
                                                    FuncCall {
                                                        target: "Append",
                                                        args: [
                                                            Var(
                                                                "s0",
                                                            ),
                                                            Var(
                                                                "s1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Length",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Append",
                                                    args: [
                                                        Var(
                                                            "s0",
                                                        ),
                                                        Var(
                                                            "s1",
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: Term(
                                    Term {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "Length",
                                                args: [
                                                    Var(
                                                        "s0",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Add,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Length",
                                                args: [
                                                    Var(
                                                        "s1",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Index",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "Seq",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "T",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "t",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "T",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "Index",
                                            args: [
                                                FuncCall(
                                                    FuncCall {
                                                        target: "Singleton",
                                                        args: [
                                                            Var(
                                                                "t",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                Nat(
                                                    "0",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Index",
                                        args: [
                                            FuncCall(
                                                FuncCall {
                                                    target: "Singleton",
                                                    args: [
                                                        Var(
                                                            "t",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            Nat(
                                                "0",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: Var(
                                    "t",
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s0",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "Index",
                                            args: [
                                                FuncCall(
                                                    FuncCall {
                                                        target: "Append",
                                                        args: [
                                                            Var(
                                                                "s0",
                                                            ),
                                                            Var(
                                                                "s1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                Var(
                                                    "n",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Logical(
                            LogicalExpr {
                                lhs: Implies(
                                    ImpliesExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "n",
                                                ),
                                                op: Lt,
                                                rhs: FuncCall(
                                                    FuncCall {
                                                        target: "Length",
                                                        args: [
                                                            Var(
                                                                "s0",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "Index",
                                                        args: [
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "Append",
                                                                    args: [
                                                                        Var(
                                                                            "s0",
                                                                        ),
                                                                        Var(
                                                                            "s1",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            Var(
                                                                "n",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: Eq,
                                                rhs: FuncCall(
                                                    FuncCall {
                                                        target: "Index",
                                                        args: [
                                                            Var(
                                                                "s0",
                                                            ),
                                                            Var(
                                                                "n",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                op: And,
                                rhs: Implies(
                                    ImpliesExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "Length",
                                                        args: [
                                                            Var(
                                                                "s0",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: Le,
                                                rhs: Var(
                                                    "n",
                                                ),
                                            },
                                        ),
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "Index",
                                                        args: [
                                                            FuncCall(
                                                                FuncCall {
                                                                    target: "Append",
                                                                    args: [
                                                                        Var(
                                                                            "s0",
                                                                        ),
                                                                        Var(
                                                                            "s1",
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                            Var(
                                                                "n",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: Eq,
                                                rhs: FuncCall(
                                                    FuncCall {
                                                        target: "Index",
                                                        args: [
                                                            Var(
                                                                "s1",
                                                            ),
                                                            Term(
                                                                Term {
                                                                    lhs: Var(
                                                                        "n",
                                                                    ),
                                                                    op: Sub,
                                                                    rhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "Length",
                                                                            args: [
                                                                                Var(
                                                                                    "s0",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "EqualSeq",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "Seq",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: None,
                    type_: App(
                        TypeApp {
                            head: "Seq",
                            tail: None,
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s0",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s1",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "EqualSeq",
                                            args: [
                                                Var(
                                                    "s0",
                                                ),
                                                Var(
                                                    "s1",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Equiv(
                            EquivExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "EqualSeq",
                                        args: [
                                            Var(
                                                "s0",
                                            ),
                                            Var(
                                                "s1",
                                            ),
                                        ],
                                    },
                                ),
                                rhs: Logical(
                                    LogicalExpr {
                                        lhs: Rel(
                                            RelExpr {
                                                lhs: FuncCall(
                                                    FuncCall {
                                                        target: "Length",
                                                        args: [
                                                            Var(
                                                                "s0",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                op: Eq,
                                                rhs: FuncCall(
                                                    FuncCall {
                                                        target: "Length",
                                                        args: [
                                                            Var(
                                                                "s1",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Quant(
                                            QuantExpr {
                                                kind: ForAll,
                                                body: QuantBody {
                                                    type_params: [],
                                                    bound_vars: [
                                                        AttrTypedIdentsWhere {
                                                            attrs: [],
                                                            typed_idents_where: TypedIdentsWhere {
                                                                typed_idents: TypedIdents {
                                                                    idents: [
                                                                        "j",
                                                                    ],
                                                                    type_: Atom(
                                                                        Int,
                                                                    ),
                                                                },
                                                                where_: None,
                                                            },
                                                        },
                                                    ],
                                                    attrs: [
                                                        Trigger(
                                                            [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "Index",
                                                                        args: [
                                                                            Var(
                                                                                "s0",
                                                                            ),
                                                                            Var(
                                                                                "j",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        ),
                                                        Trigger(
                                                            [
                                                                FuncCall(
                                                                    FuncCall {
                                                                        target: "Index",
                                                                        args: [
                                                                            Var(
                                                                                "s1",
                                                                            ),
                                                                            Var(
                                                                                "j",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            ],
                                                        ),
                                                    ],
                                                    expr: Implies(
                                                        ImpliesExpr {
                                                            lhs: Logical(
                                                                LogicalExpr {
                                                                    lhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Nat(
                                                                                "0",
                                                                            ),
                                                                            op: Le,
                                                                            rhs: Var(
                                                                                "j",
                                                                            ),
                                                                        },
                                                                    ),
                                                                    op: And,
                                                                    rhs: Rel(
                                                                        RelExpr {
                                                                            lhs: Var(
                                                                                "j",
                                                                            ),
                                                                            op: Lt,
                                                                            rhs: FuncCall(
                                                                                FuncCall {
                                                                                    target: "Length",
                                                                                    args: [
                                                                                        Var(
                                                                                            "s0",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                            rhs: Rel(
                                                                RelExpr {
                                                                    lhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "Index",
                                                                            args: [
                                                                                Var(
                                                                                    "s0",
                                                                                ),
                                                                                Var(
                                                                                    "j",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                    op: Eq,
                                                                    rhs: FuncCall(
                                                                        FuncCall {
                                                                            target: "Index",
                                                                            args: [
                                                                                Var(
                                                                                    "s1",
                                                                                ),
                                                                                Var(
                                                                                    "j",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                },
                                                            ),
                                                        },
                                                    ),
                                                },
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Take",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "s",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Seq",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "howMany",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "Seq",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "Length",
                                            args: [
                                                FuncCall(
                                                    FuncCall {
                                                        target: "Take",
                                                        args: [
                                                            Var(
                                                                "s",
                                                            ),
                                                            Var(
                                                                "n",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "n",
                                        ),
                                    },
                                ),
                                rhs: Logical(
                                    LogicalExpr {
                                        lhs: Implies(
                                            ImpliesExpr {
                                                lhs: Rel(
                                                    RelExpr {
                                                        lhs: Var(
                                                            "n",
                                                        ),
                                                        op: Le,
                                                        rhs: FuncCall(
                                                            FuncCall {
                                                                target: "Length",
                                                                args: [
                                                                    Var(
                                                                        "s",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                                rhs: Rel(
                                                    RelExpr {
                                                        lhs: FuncCall(
                                                            FuncCall {
                                                                target: "Length",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Take",
                                                                            args: [
                                                                                Var(
                                                                                    "s",
                                                                                ),
                                                                                Var(
                                                                                    "n",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        op: Eq,
                                                        rhs: Var(
                                                            "n",
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Implies(
                                            ImpliesExpr {
                                                lhs: Rel(
                                                    RelExpr {
                                                        lhs: FuncCall(
                                                            FuncCall {
                                                                target: "Length",
                                                                args: [
                                                                    Var(
                                                                        "s",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        op: Lt,
                                                        rhs: Var(
                                                            "n",
                                                        ),
                                                    },
                                                ),
                                                rhs: Rel(
                                                    RelExpr {
                                                        lhs: FuncCall(
                                                            FuncCall {
                                                                target: "Length",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Take",
                                                                            args: [
                                                                                Var(
                                                                                    "s",
                                                                                ),
                                                                                Var(
                                                                                    "n",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        op: Eq,
                                                        rhs: FuncCall(
                                                            FuncCall {
                                                                target: "Length",
                                                                args: [
                                                                    Var(
                                                                        "s",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "j",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "Index",
                                            args: [
                                                FuncCall(
                                                    FuncCall {
                                                        target: "Take",
                                                        args: [
                                                            Var(
                                                                "s",
                                                            ),
                                                            Var(
                                                                "n",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                Var(
                                                    "j",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Logical(
                                            LogicalExpr {
                                                lhs: Rel(
                                                    RelExpr {
                                                        lhs: Nat(
                                                            "0",
                                                        ),
                                                        op: Le,
                                                        rhs: Var(
                                                            "j",
                                                        ),
                                                    },
                                                ),
                                                op: And,
                                                rhs: Rel(
                                                    RelExpr {
                                                        lhs: Var(
                                                            "j",
                                                        ),
                                                        op: Lt,
                                                        rhs: Var(
                                                            "n",
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "j",
                                                ),
                                                op: Lt,
                                                rhs: FuncCall(
                                                    FuncCall {
                                                        target: "Length",
                                                        args: [
                                                            Var(
                                                                "s",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "Index",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "Take",
                                                            args: [
                                                                Var(
                                                                    "s",
                                                                ),
                                                                Var(
                                                                    "n",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Var(
                                                        "j",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Index",
                                                args: [
                                                    Var(
                                                        "s",
                                                    ),
                                                    Var(
                                                        "j",
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [],
            ident: "Drop",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "s",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Seq",
                            tail: None,
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "howMany",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: App(
                    TypeApp {
                        head: "Seq",
                        tail: None,
                    },
                ),
            },
            body: None,
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "Length",
                                            args: [
                                                FuncCall(
                                                    FuncCall {
                                                        target: "Drop",
                                                        args: [
                                                            Var(
                                                                "s",
                                                            ),
                                                            Var(
                                                                "n",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Rel(
                                    RelExpr {
                                        lhs: Nat(
                                            "0",
                                        ),
                                        op: Le,
                                        rhs: Var(
                                            "n",
                                        ),
                                    },
                                ),
                                rhs: Logical(
                                    LogicalExpr {
                                        lhs: Implies(
                                            ImpliesExpr {
                                                lhs: Rel(
                                                    RelExpr {
                                                        lhs: Var(
                                                            "n",
                                                        ),
                                                        op: Le,
                                                        rhs: FuncCall(
                                                            FuncCall {
                                                                target: "Length",
                                                                args: [
                                                                    Var(
                                                                        "s",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    },
                                                ),
                                                rhs: Rel(
                                                    RelExpr {
                                                        lhs: FuncCall(
                                                            FuncCall {
                                                                target: "Length",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Drop",
                                                                            args: [
                                                                                Var(
                                                                                    "s",
                                                                                ),
                                                                                Var(
                                                                                    "n",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        op: Eq,
                                                        rhs: Term(
                                                            Term {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "Length",
                                                                        args: [
                                                                            Var(
                                                                                "s",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Var(
                                                                    "n",
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Implies(
                                            ImpliesExpr {
                                                lhs: Rel(
                                                    RelExpr {
                                                        lhs: FuncCall(
                                                            FuncCall {
                                                                target: "Length",
                                                                args: [
                                                                    Var(
                                                                        "s",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        op: Lt,
                                                        rhs: Var(
                                                            "n",
                                                        ),
                                                    },
                                                ),
                                                rhs: Rel(
                                                    RelExpr {
                                                        lhs: FuncCall(
                                                            FuncCall {
                                                                target: "Length",
                                                                args: [
                                                                    FuncCall(
                                                                        FuncCall {
                                                                            target: "Drop",
                                                                            args: [
                                                                                Var(
                                                                                    "s",
                                                                                ),
                                                                                Var(
                                                                                    "n",
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        op: Eq,
                                                        rhs: Nat(
                                                            "0",
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
    Axiom(
        AxiomDecl {
            attrs: [],
            proposition: Quant(
                QuantExpr {
                    kind: ForAll,
                    body: QuantBody {
                        type_params: [],
                        bound_vars: [
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "s",
                                        ],
                                        type_: App(
                                            TypeApp {
                                                head: "Seq",
                                                tail: None,
                                            },
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "n",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                            AttrTypedIdentsWhere {
                                attrs: [],
                                typed_idents_where: TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "j",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            },
                        ],
                        attrs: [
                            Trigger(
                                [
                                    FuncCall(
                                        FuncCall {
                                            target: "Index",
                                            args: [
                                                FuncCall(
                                                    FuncCall {
                                                        target: "Drop",
                                                        args: [
                                                            Var(
                                                                "s",
                                                            ),
                                                            Var(
                                                                "n",
                                                            ),
                                                        ],
                                                    },
                                                ),
                                                Var(
                                                    "j",
                                                ),
                                            ],
                                        },
                                    ),
                                ],
                            ),
                        ],
                        expr: Implies(
                            ImpliesExpr {
                                lhs: Logical(
                                    LogicalExpr {
                                        lhs: Logical(
                                            LogicalExpr {
                                                lhs: Rel(
                                                    RelExpr {
                                                        lhs: Nat(
                                                            "0",
                                                        ),
                                                        op: Le,
                                                        rhs: Var(
                                                            "n",
                                                        ),
                                                    },
                                                ),
                                                op: And,
                                                rhs: Rel(
                                                    RelExpr {
                                                        lhs: Nat(
                                                            "0",
                                                        ),
                                                        op: Le,
                                                        rhs: Var(
                                                            "j",
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                        op: And,
                                        rhs: Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "j",
                                                ),
                                                op: Lt,
                                                rhs: Term(
                                                    Term {
                                                        lhs: FuncCall(
                                                            FuncCall {
                                                                target: "Length",
                                                                args: [
                                                                    Var(
                                                                        "s",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                        op: Sub,
                                                        rhs: Var(
                                                            "n",
                                                        ),
                                                    },
                                                ),
                                            },
                                        ),
                                    },
                                ),
                                rhs: Rel(
                                    RelExpr {
                                        lhs: FuncCall(
                                            FuncCall {
                                                target: "Index",
                                                args: [
                                                    FuncCall(
                                                        FuncCall {
                                                            target: "Drop",
                                                            args: [
                                                                Var(
                                                                    "s",
                                                                ),
                                                                Var(
                                                                    "n",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    Var(
                                                        "j",
                                                    ),
                                                ],
                                            },
                                        ),
                                        op: Eq,
                                        rhs: FuncCall(
                                            FuncCall {
                                                target: "Index",
                                                args: [
                                                    Var(
                                                        "s",
                                                    ),
                                                    Term(
                                                        Term {
                                                            lhs: Var(
                                                                "j",
                                                            ),
                                                            op: Add,
                                                            rhs: Var(
                                                                "n",
                                                            ),
                                                        },
                                                    ),
                                                ],
                                            },
                                        ),
                                    },
                                ),
                            },
                        ),
                    },
                },
            ),
        },
    ),
]

[Printed]
type ref;

const null: ref;

type Field x;

type HeapType = <x>[ref, Field x]x;

var H: HeapType;

const unique alloc: Field bool;

const unique abstractValue: Field Seq;

const unique footprint: Field [ref]bool;

type T;

const NullT: T;

const unique head: Field ref;

const unique tail: Field ref;

const unique mynodes: Field [ref]bool;

const unique data: Field T;

const unique next: Field ref;

function ValidQueue(HeapType, ref): bool;

axiom (forall h: HeapType, q: ref :: {ValidQueue(h, q)} q != null && h[q, alloc] ==> (ValidQueue(h, q) <==> h[q, head] != null && h[h[q, head], alloc] && h[q, tail] != null && h[h[q, tail], alloc] && h[h[q, tail], next] == null && (forall o: ref :: {h[q, footprint][o]} o != null && h[q, footprint][o] ==> h[o, alloc]) && h[q, footprint][q] && h[q, mynodes][h[q, head]] && h[q, mynodes][h[q, tail]] && (forall n: ref :: {h[q, mynodes][n]} h[q, mynodes][n] ==> n != null && h[n, alloc] && ValidNode(h, n) && SubSet(h[n, footprint], h[q, footprint]) && !h[n, footprint][q] && (h[n, next] == null ==> n == h[q, tail])) && (forall n: ref :: {h[n, next]} h[q, mynodes][n] ==> h[n, next] != null ==> h[q, mynodes][h[n, next]]) && h[q, abstractValue] == h[h[q, head], abstractValue]));

axiom (forall h0: HeapType, h1: HeapType, n: ref :: {ValidQueue(h0, n), ValidQueue(h1, n)} (forall <alpha> o: ref, f: Field alpha :: o != null && h0[o, alloc] && h0[n, footprint][o] ==> h0[o, f] == h1[o, f]) && (forall <alpha> o: ref, f: Field alpha :: o != null && h1[o, alloc] && h1[n, footprint][o] ==> h0[o, f] == h1[o, f]) ==> ValidQueue(h0, n) == ValidQueue(h1, n));

function ValidNode(HeapType, ref): bool;

axiom (forall h: HeapType, n: ref :: {ValidNode(h, n)} n != null && h[n, alloc] ==> (ValidNode(h, n) <==> (forall o: ref :: {h[n, footprint][o]} o != null && h[n, footprint][o] ==> h[o, alloc]) && h[n, footprint][n] && (h[n, next] != null ==> h[h[n, next], alloc] && SubSet(h[h[n, next], footprint], h[n, footprint]) && !h[h[n, next], footprint][n]) && (h[n, next] == null ==> EqualSeq(h[n, abstractValue], EmptySeq)) && (h[n, next] != null ==> EqualSeq(h[n, abstractValue], Append(Singleton(h[h[n, next], data]), h[h[n, next], abstractValue])))));

axiom (forall h0: HeapType, h1: HeapType, n: ref :: {ValidNode(h0, n), ValidNode(h1, n)} (forall <alpha> o: ref, f: Field alpha :: o != null && h0[o, alloc] && h0[n, footprint][o] ==> h0[o, f] == h1[o, f]) && (forall <alpha> o: ref, f: Field alpha :: o != null && h1[o, alloc] && h1[n, footprint][o] ==> h0[o, f] == h1[o, f]) ==> ValidNode(h0, n) == ValidNode(h1, n));

procedure MakeQueue() returns (q: ref)
  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old (H), H, EmptySet);
  ensures q != null && H[q, alloc];
  ensures AllNewSet(old (H), H[q, footprint]);
  ensures ValidQueue(H, q);
  ensures Length(H[q, abstractValue]) == 0;
{
  var n: ref;

  assume Fresh(H, q);
  H[q, alloc] := true;
  call n := MakeNode(NullT);
  H[q, head] := n;
  H[q, tail] := n;
  H[q, mynodes] := SingletonSet(n);
  H[q, footprint] := UnionSet(SingletonSet(q), H[n, footprint]);
  H[q, abstractValue] := H[n, abstractValue];
}

procedure IsEmpty(q: ref) returns (isEmpty: bool)
  requires ValidFootprints(H);
  requires q != null && H[q, alloc] && ValidQueue(H, q);
  ensures isEmpty <==> Length(H[q, abstractValue]) == 0;
{
  isEmpty := H[q, head] == H[q, tail];
}

procedure Enqueue(q: ref, t: T)
  requires ValidFootprints(H);
  requires q != null && H[q, alloc] && ValidQueue(H, q);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old (H), H, old (H)[q, footprint]);
  ensures DifferenceIsNew(old (H), old (H)[q, footprint], H[q, footprint]);
  ensures ValidQueue(H, q);
  ensures EqualSeq(H[q, abstractValue], Append(old (H)[q, abstractValue], Singleton(t)));
{
  var n: ref;

  call n := MakeNode(t);
  call BulkUpdateFootprint(H[q, mynodes], H[n, footprint]);
  H[q, footprint] := UnionSet(H[q, footprint], H[n, footprint]);
  call BulkUpdateAbstractValue(H[q, mynodes], t);
  H[q, abstractValue] := H[H[q, head], abstractValue];
  H[q, mynodes] := UnionSet(H[q, mynodes], SingletonSet(n));
  H[H[q, tail], next] := n;
  H[q, tail] := n;
}

procedure BulkUpdateFootprint(targetSet: [ref]bool, delta: [ref]bool);
  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySetField(old (H), H, targetSet, footprint);
  ensures (forall o: ref :: o != null && old (H)[o, alloc] && targetSet[o] ==> H[o, footprint] == UnionSet(old (H)[o, footprint], delta));

procedure BulkUpdateAbstractValue(targetSet: [ref]bool, t: T);
  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySetField(old (H), H, targetSet, abstractValue);
  ensures (forall o: ref :: o != null && old (H)[o, alloc] && targetSet[o] ==> EqualSeq(H[o, abstractValue], Append(old (H)[o, abstractValue], Singleton(t))));

procedure Front(q: ref) returns (t: T)
  requires ValidFootprints(H);
  requires q != null && H[q, alloc] && ValidQueue(H, q);
  requires 0 < Length(H[q, abstractValue]);
  ensures t == Index(H[q, abstractValue], 0);
{
  t := H[H[H[q, head], next], data];
}

procedure Dequeue(q: ref)
  requires ValidFootprints(H);
  requires q != null && H[q, alloc] && ValidQueue(H, q);
  requires 0 < Length(H[q, abstractValue]);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old (H), H, old (H)[q, footprint]);
  ensures DifferenceIsNew(old (H), old (H)[q, footprint], H[q, footprint]);
  ensures ValidQueue(H, q);
  ensures EqualSeq(H[q, abstractValue], Drop(old (H)[q, abstractValue], 1));
{
  var n: ref;

  n := H[H[q, head], next];
  H[q, head] := n;
  H[q, abstractValue] := H[n, abstractValue];
}

procedure MakeNode(t: T) returns (n: ref)
  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old (H), H, EmptySet);
  ensures n != null && H[n, alloc];
  ensures AllNewSet(old (H), H[n, footprint]);
  ensures ValidNode(H, n);
  ensures H[n, data] == t && H[n, next] == null;
{
  assume Fresh(H, n);
  H[n, alloc] := true;
  H[n, next] := null;
  H[n, data] := t;
  H[n, footprint] := SingletonSet(n);
  H[n, abstractValue] := EmptySeq;
}

procedure Main(t: T, u: T, v: T)
  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old (H), H, EmptySet);
{
  var q0, q1: ref;
  var w: T;

  call q0 := MakeQueue();
  call q1 := MakeQueue();
  call Enqueue(q0, t);
  call Enqueue(q0, u);
  call Enqueue(q1, v);
  assert Length(H[q0, abstractValue]) == 2;
  call w := Front(q0);
  assert w == t;
  call Dequeue(q0);
  call w := Front(q0);
  assert w == u;
  assert Length(H[q0, abstractValue]) == 1;
  assert Length(H[q1, abstractValue]) == 1;
}

procedure Main2(t: T, u: T, v: T, q0: ref, q1: ref)
  requires q0 != null && H[q0, alloc] && ValidQueue(H, q0);
  requires q1 != null && H[q1, alloc] && ValidQueue(H, q1);
  requires DisjointSet(H[q0, footprint], H[q1, footprint]);
  requires Length(H[q0, abstractValue]) == 0;
  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old (H), H, UnionSet(old (H)[q0, footprint], old (H)[q1, footprint]));
{
  var w: T;

  call Enqueue(q0, t);
  call Enqueue(q0, u);
  call Enqueue(q1, v);
  assert Length(H[q0, abstractValue]) == 2;
  call w := Front(q0);
  assert w == t;
  call Dequeue(q0);
  call w := Front(q0);
  assert w == u;
  assert Length(H[q0, abstractValue]) == 1;
  assert Length(H[q1, abstractValue]) == old (Length(H[q1, abstractValue])) + 1;
}

function ModifiesOnlySet(oldHeap: HeapType, newHeap: HeapType, set: [ref]bool): bool;

axiom (forall oldHeap: HeapType, newHeap: HeapType, set: [ref]bool :: {ModifiesOnlySet(oldHeap, newHeap, set)} ModifiesOnlySet(oldHeap, newHeap, set) <==> NoDeallocs(oldHeap, newHeap) && (forall <alpha> o: ref, f: Field alpha :: {newHeap[o, f]} o != null && oldHeap[o, alloc] ==> oldHeap[o, f] == newHeap[o, f] || set[o]));

function ModifiesOnlySetField<alpha>(oldHeap: HeapType, newHeap: HeapType, set: [ref]bool, field: Field alpha): bool;

axiom (forall <alpha> oldHeap: HeapType, newHeap: HeapType, set: [ref]bool, field: Field alpha :: {ModifiesOnlySetField(oldHeap, newHeap, set, field)} ModifiesOnlySetField(oldHeap, newHeap, set, field) <==> NoDeallocs(oldHeap, newHeap) && (forall <beta> o: ref, f: Field beta :: {newHeap[o, f]} o != null && oldHeap[o, alloc] ==> oldHeap[o, f] == newHeap[o, f] || (set[o] && f == field)));

function NoDeallocs(oldHeap: HeapType, newHeap: HeapType): bool;

axiom (forall oldHeap: HeapType, newHeap: HeapType :: {NoDeallocs(oldHeap, newHeap)} NoDeallocs(oldHeap, newHeap) <==> (forall o: ref :: {newHeap[o, alloc]} o != null && oldHeap[o, alloc] ==> newHeap[o, alloc]));

function AllNewSet(oldHeap: HeapType, set: [ref]bool): bool;

axiom (forall oldHeap: HeapType, set: [ref]bool :: {AllNewSet(oldHeap, set)} AllNewSet(oldHeap, set) <==> (forall o: ref :: {oldHeap[o, alloc]} o != null && set[o] ==> !oldHeap[o, alloc]));

function DifferenceIsNew(oldHeap: HeapType, oldSet: [ref]bool, newSet: [ref]bool): bool;

axiom (forall oldHeap: HeapType, oldSet: [ref]bool, newSet: [ref]bool :: {DifferenceIsNew(oldHeap, oldSet, newSet)} DifferenceIsNew(oldHeap, oldSet, newSet) <==> (forall o: ref :: {oldHeap[o, alloc]} o != null && !oldSet[o] && newSet[o] ==> !oldHeap[o, alloc]));

function ValidFootprints(h: HeapType): bool;

axiom (forall h: HeapType :: {ValidFootprints(h)} ValidFootprints(h) <==> (forall o: ref, r: ref :: {h[o, footprint][r]} o != null && h[o, alloc] && r != null && h[o, footprint][r] ==> h[r, alloc]));

function Fresh(h: HeapType, o: ref): bool;

axiom (forall h: HeapType, o: ref :: {Fresh(h, o)} Fresh(h, o) <==> o != null && !h[o, alloc] && h[o, footprint] == SingletonSet(o));

const EmptySet: [ref]bool;

axiom (forall o: ref :: {EmptySet[o]} !EmptySet[o]);

function SingletonSet(ref): [ref]bool;

axiom (forall r: ref :: {SingletonSet(r)} SingletonSet(r)[r]);

axiom (forall r: ref, o: ref :: {SingletonSet(r)[o]} SingletonSet(r)[o] <==> r == o);

function UnionSet([ref]bool, [ref]bool): [ref]bool;

axiom (forall a: [ref]bool, b: [ref]bool, o: ref :: {UnionSet(a, b)[o]} UnionSet(a, b)[o] <==> a[o] || b[o]);

function SubSet([ref]bool, [ref]bool): bool;

axiom (forall a: [ref]bool, b: [ref]bool :: {SubSet(a, b)} SubSet(a, b) <==> (forall o: ref :: {a[o]} {b[o]} a[o] ==> b[o]));

function EqualSet([ref]bool, [ref]bool): bool;

axiom (forall a: [ref]bool, b: [ref]bool :: {EqualSet(a, b)} EqualSet(a, b) <==> (forall o: ref :: {a[o]} {b[o]} a[o] <==> b[o]));

function DisjointSet([ref]bool, [ref]bool): bool;

axiom (forall a: [ref]bool, b: [ref]bool :: {DisjointSet(a, b)} DisjointSet(a, b) <==> (forall o: ref :: {a[o]} {b[o]} !a[o] || !b[o]));

type Seq;

function Length(Seq): int;

axiom (forall s: Seq :: {Length(s)} 0 <= Length(s));

const EmptySeq: Seq;

axiom Length(EmptySeq) == 0;

axiom (forall s: Seq :: {Length(s)} Length(s) == 0 ==> s == EmptySeq);

function Singleton(T): Seq;

axiom (forall t: T :: {Length(Singleton(t))} Length(Singleton(t)) == 1);

function Append(Seq, Seq): Seq;

axiom (forall s0: Seq, s1: Seq :: {Length(Append(s0, s1))} Length(Append(s0, s1)) == Length(s0) + Length(s1));

function Index(Seq, int): T;

axiom (forall t: T :: {Index(Singleton(t), 0)} Index(Singleton(t), 0) == t);

axiom (forall s0: Seq, s1: Seq, n: int :: {Index(Append(s0, s1), n)} (n < Length(s0) ==> Index(Append(s0, s1), n) == Index(s0, n)) && (Length(s0) <= n ==> Index(Append(s0, s1), n) == Index(s1, n - Length(s0))));

function EqualSeq(Seq, Seq): bool;

axiom (forall s0: Seq, s1: Seq :: {EqualSeq(s0, s1)} EqualSeq(s0, s1) <==> Length(s0) == Length(s1) && (forall j: int :: {Index(s0, j)} {Index(s1, j)} 0 <= j && j < Length(s0) ==> Index(s0, j) == Index(s1, j)));

function Take(s: Seq, howMany: int): Seq;

axiom (forall s: Seq, n: int :: {Length(Take(s, n))} 0 <= n ==> (n <= Length(s) ==> Length(Take(s, n)) == n) && (Length(s) < n ==> Length(Take(s, n)) == Length(s)));

axiom (forall s: Seq, n: int, j: int :: {Index(Take(s, n), j)} 0 <= j && j < n && j < Length(s) ==> Index(Take(s, n), j) == Index(s, j));

function Drop(s: Seq, howMany: int): Seq;

axiom (forall s: Seq, n: int :: {Length(Drop(s, n))} 0 <= n ==> (n <= Length(s) ==> Length(Drop(s, n)) == Length(s) - n) && (Length(s) < n ==> Length(Drop(s, n)) == 0));

axiom (forall s: Seq, n: int, j: int :: {Index(Drop(s, n), j)} 0 <= n && 0 <= j && j < Length(s) - n ==> Index(Drop(s, n), j) == Index(s, j + n));

[Input - ../../vendor/boogie/Test/textbook/BQueue.bpl]
// RUN: %boogie "%s" > "%t"
// RUN: %diff "%s.expect" "%t"
// BQueue.bpl
// A queue program specified in the style of dynamic frames.
// Rustan Leino, Michal Moskal, and Wolfram Schulte, 2007.

// ---------------------------------------------------------------

type ref;
const null: ref;

type Field x;

// this variable represents the heap; read its type as \forall \alpha. ref * Field \alpha --> \alpha
type HeapType = <x>[ref, Field x]x;
var H: HeapType;

// every object has an 'alloc' field, which says whether or not the object has been allocated
const unique alloc: Field bool;

// for simplicity, we say that every object has one field representing its abstract value and one
// field representing its footprint (aka frame aka data group).

const unique abstractValue: Field Seq;
const unique footprint: Field [ref]bool;

// ---------------------------------------------------------------

type T;  // the type of the elements of the queue
const NullT: T;  // some value of type T

// ---------------------------------------------------------------

// Queue:
const unique head: Field ref;
const unique tail: Field ref;
const unique mynodes: Field [ref]bool;
// Node:
const unique data: Field T;
const unique next: Field ref;

function ValidQueue(HeapType, ref) returns (bool);
axiom (forall h: HeapType, q: ref ::
  { ValidQueue(h, q) }
  q != null && h[q,alloc] ==>
  (ValidQueue(h, q) <==>
     h[q,head] != null && h[h[q,head],alloc] &&
     h[q,tail] != null && h[h[q,tail],alloc] &&
     h[h[q,tail], next] == null &&
     // The following line can be suppressed now that we have a ValidFootprint invariant
     (forall o: ref :: { h[q,footprint][o] } o != null && h[q,footprint][o] ==> h[o,alloc]) &&
     h[q,footprint][q] &&
     h[q,mynodes][h[q,head]] && h[q,mynodes][h[q,tail]] &&
     (forall n: ref :: { h[q,mynodes][n] }
       h[q,mynodes][n] ==>
           n != null && h[n,alloc] && ValidNode(h, n) &&
           SubSet(h[n,footprint], h[q,footprint]) &&
           !h[n,footprint][q] &&
           (h[n,next] == null ==> n == h[q,tail])
     ) &&
     (forall n: ref :: { h[n,next] }
       h[q,mynodes][n] ==>
           (h[n,next] != null ==> h[q,mynodes][h[n,next]])
     ) &&
     h[q,abstractValue] == h[h[q,head],abstractValue]
  ));

// frame axiom for ValidQueue
axiom (forall h0: HeapType, h1: HeapType, n: ref ::
  { ValidQueue(h0,n), ValidQueue(h1,n) }
  (forall<alpha> o: ref, f: Field alpha :: o != null && h0[o,alloc] && h0[n,footprint][o]
      ==> h0[o,f] == h1[o,f])
  &&
  (forall<alpha> o: ref, f: Field alpha :: o != null && h1[o,alloc] && h1[n,footprint][o]
      ==> h0[o,f] == h1[o,f])
  ==>
  ValidQueue(h0,n) == ValidQueue(h1,n));

function ValidNode(HeapType, ref) returns (bool);
axiom (forall h: HeapType, n: ref ::
  { ValidNode(h, n) }
  n != null && h[n,alloc] ==>
  (ValidNode(h, n) <==>
     // The following line can be suppressed now that we have a ValidFootprint invariant
     (forall o: ref :: { h[n,footprint][o] } o != null && h[n,footprint][o] ==> h[o,alloc]) &&
     h[n,footprint][n] &&
     (h[n,next] != null ==>
         h[h[n,next],alloc] &&
         SubSet(h[h[n,next], footprint], h[n,footprint]) &&
         !h[h[n,next], footprint][n]) &&
     (h[n,next] == null ==> EqualSeq(h[n,abstractValue], EmptySeq)) &&
     (h[n,next] != null ==> EqualSeq(h[n,abstractValue],
                            Append(Singleton(h[h[n,next],data]), h[h[n,next],abstractValue])))
  ));

// frame axiom for ValidNode
axiom (forall h0: HeapType, h1: HeapType, n: ref ::
  { ValidNode(h0,n), ValidNode(h1,n) }
  (forall<alpha> o: ref, f: Field alpha :: o != null && h0[o,alloc] && h0[n,footprint][o]
      ==> h0[o,f] == h1[o,f])
  &&
  (forall<alpha> o: ref, f: Field alpha :: o != null && h1[o,alloc] && h1[n,footprint][o]
      ==> h0[o,f] == h1[o,f])
  ==>
  ValidNode(h0,n) == ValidNode(h1,n));

// ---------------------------------------------------------------

procedure MakeQueue() returns (q: ref)
  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old(H), H, EmptySet);
  ensures q != null && H[q,alloc];
  ensures AllNewSet(old(H), H[q,footprint]);
  ensures ValidQueue(H, q);
  ensures Length(H[q,abstractValue]) == 0;
{
  var n: ref;

  assume Fresh(H,q);
  H[q,alloc] := true;

  call n := MakeNode(NullT);
  H[q,head] := n;
  H[q,tail] := n;
  H[q,mynodes] := SingletonSet(n);
  H[q,footprint] := UnionSet(SingletonSet(q), H[n,footprint]);
  H[q,abstractValue] := H[n,abstractValue];
}

procedure IsEmpty(q: ref) returns (isEmpty: bool)
  requires ValidFootprints(H);
  requires q != null && H[q,alloc] && ValidQueue(H, q);
  ensures isEmpty <==> Length(H[q,abstractValue]) == 0;
{
  isEmpty := H[q,head] == H[q,tail];
}

procedure Enqueue(q: ref, t: T)
  requires ValidFootprints(H);
  requires q != null && H[q,alloc] && ValidQueue(H, q);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old(H), H, old(H)[q,footprint]);
  ensures DifferenceIsNew(old(H), old(H)[q,footprint], H[q,footprint]);
  ensures ValidQueue(H, q);
  ensures EqualSeq(H[q,abstractValue], Append(old(H)[q,abstractValue], Singleton(t)));
{
  var n: ref;

  call n := MakeNode(t);

  // foreach m in q.mynodes { m.footprint := m.footprint U n.footprint }
  call BulkUpdateFootprint(H[q,mynodes], H[n,footprint]);
  H[q,footprint] := UnionSet(H[q,footprint], H[n,footprint]);

  // foreach m in q.mynodes { m.abstractValue := Append(m.abstractValue, Singleton(t)) }
  call BulkUpdateAbstractValue(H[q,mynodes], t);
  H[q,abstractValue] := H[H[q,head],abstractValue];

  H[q,mynodes] := UnionSet(H[q,mynodes], SingletonSet(n));

  H[H[q,tail], next] := n;
  H[q,tail] := n;
}

procedure BulkUpdateFootprint(targetSet: [ref]bool, delta: [ref]bool);
  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySetField(old(H), H, targetSet, footprint);
  ensures (forall o: ref ::
    o != null && old(H)[o,alloc] && targetSet[o]
    ==> H[o,footprint] == UnionSet(old(H)[o,footprint], delta));

procedure BulkUpdateAbstractValue(targetSet: [ref]bool, t: T);
  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySetField(old(H), H, targetSet, abstractValue);
  ensures (forall o: ref ::
    o != null && old(H)[o,alloc] && targetSet[o]
    ==> EqualSeq(H[o,abstractValue], Append(old(H)[o,abstractValue], Singleton(t))));

procedure Front(q: ref) returns (t: T)
  requires ValidFootprints(H);
  requires q != null && H[q,alloc] && ValidQueue(H, q);
  requires 0 < Length(H[q,abstractValue]);
  ensures t == Index(H[q,abstractValue], 0);
{
  t := H[H[H[q,head], next], data];
}

procedure Dequeue(q: ref)
  requires ValidFootprints(H);
  requires q != null && H[q,alloc] && ValidQueue(H, q);
  requires 0 < Length(H[q,abstractValue]);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old(H), H, old(H)[q,footprint]);
  ensures DifferenceIsNew(old(H), old(H)[q,footprint], H[q,footprint]);
  ensures ValidQueue(H, q);
  ensures EqualSeq(H[q,abstractValue], Drop(old(H)[q,abstractValue], 1));
{
  var n: ref;

  n := H[H[q,head], next];
  H[q,head] := n;
  // we could also remove old(H)[q,head] from H[q,mynodes], and similar for the footprints
  H[q,abstractValue] := H[n,abstractValue];
}

// --------------------------------------------------------------------------------

procedure MakeNode(t: T) returns (n: ref)
  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old(H), H, EmptySet);
  ensures n != null && H[n,alloc];
  ensures AllNewSet(old(H), H[n,footprint]);
  ensures ValidNode(H, n);
  ensures H[n,data] == t && H[n,next] == null;
{
  assume Fresh(H,n);
  H[n,alloc] := true;

  H[n,next] := null;
  H[n,data] := t;
  H[n,footprint] := SingletonSet(n);
  H[n,abstractValue] := EmptySeq;
}

// --------------------------------------------------------------------------------

procedure Main(t: T, u: T, v: T)
  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old(H), H, EmptySet);
{
  var q0, q1: ref;
  var w: T;

  call q0 := MakeQueue();
  call q1 := MakeQueue();

  call Enqueue(q0, t);
  call Enqueue(q0, u);

  call Enqueue(q1, v);

  assert Length(H[q0,abstractValue]) == 2;

  call w := Front(q0);
  assert w == t;
  call Dequeue(q0);

  call w := Front(q0);
  assert w == u;

  assert Length(H[q0,abstractValue]) == 1;
  assert Length(H[q1,abstractValue]) == 1;
}

// --------------------------------------------------------------------------------

procedure Main2(t: T, u: T, v: T, q0: ref, q1: ref)
  requires q0 != null && H[q0,alloc] && ValidQueue(H, q0);
  requires q1 != null && H[q1,alloc] && ValidQueue(H, q1);
  requires DisjointSet(H[q0,footprint], H[q1,footprint]);
  requires Length(H[q0,abstractValue]) == 0;

  requires ValidFootprints(H);
  modifies H;
  ensures ValidFootprints(H);
  ensures ModifiesOnlySet(old(H), H, UnionSet(old(H)[q0,footprint], old(H)[q1,footprint]));
{
  var w: T;

  call Enqueue(q0, t);
  call Enqueue(q0, u);

  call Enqueue(q1, v);

  assert Length(H[q0,abstractValue]) == 2;

  call w := Front(q0);
  assert w == t;
  call Dequeue(q0);

  call w := Front(q0);
  assert w == u;

  assert Length(H[q0,abstractValue]) == 1;
  assert Length(H[q1,abstractValue]) == old(Length(H[q1,abstractValue])) + 1;
}

// ---------------------------------------------------------------

// Helpful predicates used in specs

function ModifiesOnlySet(oldHeap: HeapType, newHeap: HeapType, set: [ref]bool) returns (bool);
axiom (forall oldHeap: HeapType, newHeap: HeapType, set: [ref]bool ::
  { ModifiesOnlySet(oldHeap, newHeap, set) }
  ModifiesOnlySet(oldHeap, newHeap, set) <==>
    NoDeallocs(oldHeap, newHeap) &&
    (forall<alpha> o: ref, f: Field alpha :: { newHeap[o,f] }
      o != null && oldHeap[o,alloc] ==>
      oldHeap[o,f] == newHeap[o,f] || set[o]));

function ModifiesOnlySetField<alpha>(oldHeap: HeapType, newHeap: HeapType,
                                     set: [ref]bool, field: Field alpha) returns (bool);
axiom (forall<alpha> oldHeap: HeapType, newHeap: HeapType, set: [ref]bool, field: Field alpha ::
  { ModifiesOnlySetField(oldHeap, newHeap, set, field) }
  ModifiesOnlySetField(oldHeap, newHeap, set, field) <==>
    NoDeallocs(oldHeap, newHeap) &&
    (forall<beta> o: ref, f: Field beta :: { newHeap[o,f] }
      o != null && oldHeap[o,alloc] ==>
      oldHeap[o,f] == newHeap[o,f] || (set[o] && f == field)));

function NoDeallocs(oldHeap: HeapType, newHeap: HeapType) returns (bool);
axiom (forall oldHeap: HeapType, newHeap: HeapType ::
  { NoDeallocs(oldHeap, newHeap) }
  NoDeallocs(oldHeap, newHeap) <==>
    (forall o: ref :: { newHeap[o,alloc] }
      o != null && oldHeap[o,alloc] ==> newHeap[o,alloc]));

function AllNewSet(oldHeap: HeapType, set: [ref]bool) returns (bool);
axiom (forall oldHeap: HeapType, set: [ref]bool ::
  { AllNewSet(oldHeap, set) }
  AllNewSet(oldHeap, set) <==>
    (forall o: ref :: { oldHeap[o,alloc] }
      o != null && set[o] ==> !oldHeap[o,alloc]));

function DifferenceIsNew(oldHeap: HeapType, oldSet: [ref]bool, newSet: [ref]bool) returns (bool);
axiom (forall oldHeap: HeapType, oldSet: [ref]bool, newSet: [ref]bool ::
  { DifferenceIsNew(oldHeap, oldSet, newSet) }
  DifferenceIsNew(oldHeap, oldSet, newSet) <==>
    (forall o: ref :: { oldHeap[o,alloc] }
      o != null && !oldSet[o] && newSet[o] ==> !oldHeap[o,alloc]));

function ValidFootprints(h: HeapType) returns (bool);
axiom (forall h: HeapType ::
  { ValidFootprints(h) }
  ValidFootprints(h) <==>
    (forall o: ref, r: ref :: { h[o,footprint][r] }
      o != null && h[o,alloc] && r != null && h[o,footprint][r] ==> h[r,alloc]));

function Fresh(h: HeapType, o: ref) returns (bool);
axiom (forall h: HeapType, o: ref ::
  { Fresh(h,o) }
  Fresh(h,o) <==>
    o != null && !h[o,alloc] && h[o,footprint] == SingletonSet(o));

// ---------------------------------------------------------------

const EmptySet: [ref]bool;
axiom (forall o: ref :: { EmptySet[o] } !EmptySet[o]);

function SingletonSet(ref) returns ([ref]bool);
axiom (forall r: ref :: { SingletonSet(r) } SingletonSet(r)[r]);
axiom (forall r: ref, o: ref :: { SingletonSet(r)[o] } SingletonSet(r)[o] <==> r == o);

function UnionSet([ref]bool, [ref]bool) returns ([ref]bool);
axiom (forall a: [ref]bool, b: [ref]bool, o: ref :: { UnionSet(a,b)[o] }
  UnionSet(a,b)[o] <==> a[o] || b[o]);

function SubSet([ref]bool, [ref]bool) returns (bool);
axiom(forall a: [ref]bool, b: [ref]bool :: { SubSet(a,b) }
  SubSet(a,b) <==> (forall o: ref :: {a[o]} {b[o]} a[o] ==> b[o]));

function EqualSet([ref]bool, [ref]bool) returns (bool);
axiom(forall a: [ref]bool, b: [ref]bool :: { EqualSet(a,b) }
  EqualSet(a,b) <==> (forall o: ref :: {a[o]} {b[o]} a[o] <==> b[o]));

function DisjointSet([ref]bool, [ref]bool) returns (bool);
axiom (forall a: [ref]bool, b: [ref]bool :: { DisjointSet(a,b) }
  DisjointSet(a,b) <==> (forall o: ref :: {a[o]} {b[o]} !a[o] || !b[o]));

// ---------------------------------------------------------------

// Sequence of T
type Seq;

function Length(Seq) returns (int);
axiom (forall s: Seq :: { Length(s) } 0 <= Length(s));

const EmptySeq: Seq;
axiom Length(EmptySeq) == 0;
axiom (forall s: Seq :: { Length(s) } Length(s) == 0 ==> s == EmptySeq);

function Singleton(T) returns (Seq);
axiom (forall t: T :: { Length(Singleton(t)) } Length(Singleton(t)) == 1);

function Append(Seq, Seq) returns (Seq);
axiom (forall s0: Seq, s1: Seq :: { Length(Append(s0,s1)) }
  Length(Append(s0,s1)) == Length(s0) + Length(s1));

function Index(Seq, int) returns (T);
axiom (forall t: T :: { Index(Singleton(t), 0) } Index(Singleton(t), 0) == t);
axiom (forall s0: Seq, s1: Seq, n: int :: { Index(Append(s0,s1), n) }
  (n < Length(s0) ==> Index(Append(s0,s1), n) == Index(s0, n)) &&
  (Length(s0) <= n ==> Index(Append(s0,s1), n) == Index(s1, n - Length(s0))));

function EqualSeq(Seq, Seq) returns (bool);
axiom (forall s0: Seq, s1: Seq :: { EqualSeq(s0,s1) }
  EqualSeq(s0,s1) <==>
    Length(s0) == Length(s1) &&
    (forall j: int :: { Index(s0,j) } { Index(s1,j) }
        0 <= j && j < Length(s0) ==> Index(s0,j) == Index(s1,j)));

function Take(s: Seq, howMany: int) returns (Seq);
axiom (forall s: Seq, n: int :: { Length(Take(s,n)) }
  0 <= n ==>
    (n <= Length(s) ==> Length(Take(s,n)) == n) &&
    (Length(s) < n ==> Length(Take(s,n)) == Length(s)));
axiom (forall s: Seq, n: int, j: int :: { Index(Take(s,n), j) }
  0 <= j && j < n && j < Length(s) ==>
    Index(Take(s,n), j) == Index(s, j));

function Drop(s: Seq, howMany: int) returns (Seq);
axiom (forall s: Seq, n: int :: { Length(Drop(s,n)) }
  0 <= n ==>
    (n <= Length(s) ==> Length(Drop(s,n)) == Length(s) - n) &&
    (Length(s) < n ==> Length(Drop(s,n)) == 0));
axiom (forall s: Seq, n: int, j: int :: { Index(Drop(s,n), j) }
  0 <= n && 0 <= j && j < Length(s)-n ==>
    Index(Drop(s,n), j) == Index(s, j+n));

// ---------------------------------------------------------------
