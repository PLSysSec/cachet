---
source: crates/bpl/tests/test.rs
assertion_line: 41
expression: snapshot_report
---
[Parsed]
[
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "InOrder",
            type_params: [],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "x",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "y",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "z",
                    ),
                    type_: Atom(
                        Int,
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Logical(
                    LogicalExpr {
                        lhs: Rel(
                            RelExpr {
                                lhs: Var(
                                    "x",
                                ),
                                op: Le,
                                rhs: Var(
                                    "y",
                                ),
                            },
                        ),
                        op: And,
                        rhs: Rel(
                            RelExpr {
                                lhs: Var(
                                    "y",
                                ),
                                op: Lt,
                                rhs: Var(
                                    "z",
                                ),
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Func(
        FuncDecl {
            attrs: [
                Attr(
                    AttrContent {
                        ident: "inline",
                        params: [],
                    },
                ),
            ],
            ident: "Permutation",
            type_params: [
                "E",
            ],
            var_params: [
                VarOrType {
                    attrs: [],
                    var: Some(
                        "A",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Vec",
                            tail: Some(
                                App(
                                    TypeApp {
                                        head: "E",
                                        tail: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
                VarOrType {
                    attrs: [],
                    var: Some(
                        "B",
                    ),
                    type_: App(
                        TypeApp {
                            head: "Vec",
                            tail: Some(
                                App(
                                    TypeApp {
                                        head: "E",
                                        tail: None,
                                    },
                                ),
                            ),
                        },
                    ),
                },
            ],
            returns: VarOrType {
                attrs: [],
                var: None,
                type_: Atom(
                    Bool,
                ),
            },
            body: Some(
                Logical(
                    LogicalExpr {
                        lhs: Rel(
                            RelExpr {
                                lhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Len",
                                        args: [
                                            Var(
                                                "A",
                                            ),
                                        ],
                                    },
                                ),
                                op: Eq,
                                rhs: FuncCall(
                                    FuncCall {
                                        target: "Vec_Len",
                                        args: [
                                            Var(
                                                "B",
                                            ),
                                        ],
                                    },
                                ),
                            },
                        ),
                        op: And,
                        rhs: Quant(
                            QuantExpr {
                                kind: ForAll,
                                body: QuantBody {
                                    type_params: [],
                                    bound_vars: [
                                        AttrTypedIdentsWhere {
                                            attrs: [
                                                Attr(
                                                    AttrContent {
                                                        ident: "pool",
                                                        params: [
                                                            String(
                                                                StringLit {
                                                                    text: "A",
                                                                },
                                                            ),
                                                        ],
                                                    },
                                                ),
                                            ],
                                            typed_idents_where: TypedIdentsWhere {
                                                typed_idents: TypedIdents {
                                                    idents: [
                                                        "k",
                                                    ],
                                                    type_: Atom(
                                                        Int,
                                                    ),
                                                },
                                                where_: None,
                                            },
                                        },
                                    ],
                                    attrs: [
                                        Attr(
                                            AttrContent {
                                                ident: "skolem_add_to_pool",
                                                params: [
                                                    String(
                                                        StringLit {
                                                            text: "A",
                                                        },
                                                    ),
                                                    Expr(
                                                        Var(
                                                            "k",
                                                        ),
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                    expr: Implies(
                                        ImpliesExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "InOrder",
                                                    args: [
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "k",
                                                        ),
                                                        FuncCall(
                                                            FuncCall {
                                                                target: "Vec_Len",
                                                                args: [
                                                                    Var(
                                                                        "A",
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            rhs: Quant(
                                                QuantExpr {
                                                    kind: Exists,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [
                                                                    Attr(
                                                                        AttrContent {
                                                                            ident: "pool",
                                                                            params: [
                                                                                String(
                                                                                    StringLit {
                                                                                        text: "B",
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "k'",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [
                                                            Attr(
                                                                AttrContent {
                                                                    ident: "skolem_add_to_pool",
                                                                    params: [
                                                                        String(
                                                                            StringLit {
                                                                                text: "B",
                                                                            },
                                                                        ),
                                                                        Expr(
                                                                            Var(
                                                                                "k'",
                                                                            ),
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ],
                                                        expr: Implies(
                                                            ImpliesExpr {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "InOrder",
                                                                        args: [
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                            Var(
                                                                                "k'",
                                                                            ),
                                                                            FuncCall(
                                                                                FuncCall {
                                                                                    target: "Vec_Len",
                                                                                    args: [
                                                                                        Var(
                                                                                            "B",
                                                                                        ),
                                                                                    ],
                                                                                },
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "A",
                                                                                    ),
                                                                                    Var(
                                                                                        "k",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Eq,
                                                                        rhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                    Var(
                                                                                        "k'",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                        },
                                    ),
                                },
                            },
                        ),
                    },
                ),
            ),
        },
    ),
    Proc(
        ProcDecl {
            proc_sign: ProcSign {
                attrs: [],
                ident: "verify_sort",
                type_params: [],
                var_params: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "A",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            AtomApp(
                                                TypeApp {
                                                    head: Int,
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
                returns: [
                    AttrTypedIdentsWhere {
                        attrs: [],
                        typed_idents_where: TypedIdentsWhere {
                            typed_idents: TypedIdents {
                                idents: [
                                    "B",
                                ],
                                type_: App(
                                    TypeApp {
                                        head: "Vec",
                                        tail: Some(
                                            AtomApp(
                                                TypeApp {
                                                    head: Int,
                                                    tail: None,
                                                },
                                            ),
                                        ),
                                    },
                                ),
                            },
                            where_: None,
                        },
                    },
                ],
            },
            specs: [
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: Quant(
                            QuantExpr {
                                kind: ForAll,
                                body: QuantBody {
                                    type_params: [],
                                    bound_vars: [
                                        AttrTypedIdentsWhere {
                                            attrs: [],
                                            typed_idents_where: TypedIdentsWhere {
                                                typed_idents: TypedIdents {
                                                    idents: [
                                                        "k",
                                                    ],
                                                    type_: Atom(
                                                        Int,
                                                    ),
                                                },
                                                where_: None,
                                            },
                                        },
                                    ],
                                    attrs: [],
                                    expr: Implies(
                                        ImpliesExpr {
                                            lhs: FuncCall(
                                                FuncCall {
                                                    target: "InOrder",
                                                    args: [
                                                        Nat(
                                                            "0",
                                                        ),
                                                        Var(
                                                            "k",
                                                        ),
                                                        Term(
                                                            Term {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Len",
                                                                        args: [
                                                                            Var(
                                                                                "B",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Sub,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                            rhs: Rel(
                                                RelExpr {
                                                    lhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Nth",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Var(
                                                                    "k",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                    op: Le,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Nth",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                                Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "k",
                                                                        ),
                                                                        op: Add,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                        },
                                    ),
                                },
                            },
                        ),
                        is_free: false,
                    },
                ),
                Contract(
                    ContractSpec {
                        kind: Ensures,
                        attrs: [],
                        proposition: FuncCall(
                            FuncCall {
                                target: "Permutation",
                                args: [
                                    Var(
                                        "A",
                                    ),
                                    Var(
                                        "B",
                                    ),
                                ],
                            },
                        ),
                        is_free: false,
                    },
                ),
            ],
            impl_body: Some(
                ImplBody {
                    local_vars: [
                        LocalVars {
                            attrs: [],
                            vars: [
                                TypedIdentsWhere {
                                    typed_idents: TypedIdents {
                                        idents: [
                                            "i",
                                            "j",
                                            "vlen",
                                        ],
                                        type_: Atom(
                                            Int,
                                        ),
                                    },
                                    where_: None,
                                },
                            ],
                        },
                    ],
                    stmt_list: [
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "B",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Var(
                                            "A",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "vlen",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        FuncCall(
                                            FuncCall {
                                                target: "Vec_Len",
                                                args: [
                                                    Var(
                                                        "B",
                                                    ),
                                                ],
                                            },
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            If(
                                IfCmd {
                                    guard: Expr(
                                        Rel(
                                            RelExpr {
                                                lhs: Var(
                                                    "vlen",
                                                ),
                                                op: Le,
                                                rhs: Nat(
                                                    "1",
                                                ),
                                            },
                                        ),
                                    ),
                                    then: [
                                        TransferCmd(
                                            Return(
                                                ReturnCmd,
                                            ),
                                        ),
                                    ],
                                    else_: None,
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "i",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "0",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        LabelOrCmd(
                            Assign(
                                AssignCmd {
                                    lhs: [
                                        AssignLhs {
                                            ident: "j",
                                            subscripts: [],
                                        },
                                    ],
                                    rhs: [
                                        Nat(
                                            "1",
                                        ),
                                    ],
                                },
                            ),
                        ),
                        StructuredCmd(
                            While(
                                WhileCmd {
                                    guard: Expr(
                                        BoolLit(
                                            true,
                                        ),
                                    ),
                                    invariants: [
                                        Invariant {
                                            attrs: [],
                                            expr: Rel(
                                                RelExpr {
                                                    lhs: Var(
                                                        "vlen",
                                                    ),
                                                    op: Eq,
                                                    rhs: FuncCall(
                                                        FuncCall {
                                                            target: "Vec_Len",
                                                            args: [
                                                                Var(
                                                                    "B",
                                                                ),
                                                            ],
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Logical(
                                                LogicalExpr {
                                                    lhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "i",
                                                            ),
                                                            op: Lt,
                                                            rhs: Var(
                                                                "j",
                                                            ),
                                                        },
                                                    ),
                                                    op: And,
                                                    rhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "j",
                                                            ),
                                                            op: Lt,
                                                            rhs: Var(
                                                                "vlen",
                                                            ),
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Quant(
                                                QuantExpr {
                                                    kind: ForAll,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "k",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Implies(
                                                            ImpliesExpr {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "InOrder",
                                                                        args: [
                                                                            Nat(
                                                                                "0",
                                                                            ),
                                                                            Var(
                                                                                "k",
                                                                            ),
                                                                            Var(
                                                                                "i",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                    Var(
                                                                                        "k",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Le,
                                                                        rhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                    Term(
                                                                                        Term {
                                                                                            lhs: Var(
                                                                                                "k",
                                                                                            ),
                                                                                            op: Add,
                                                                                            rhs: Nat(
                                                                                                "1",
                                                                                            ),
                                                                                        },
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Implies(
                                                ImpliesExpr {
                                                    lhs: Rel(
                                                        RelExpr {
                                                            lhs: Var(
                                                                "i",
                                                            ),
                                                            op: Gt,
                                                            rhs: Nat(
                                                                "0",
                                                            ),
                                                        },
                                                    ),
                                                    rhs: Quant(
                                                        QuantExpr {
                                                            kind: ForAll,
                                                            body: QuantBody {
                                                                type_params: [],
                                                                bound_vars: [
                                                                    AttrTypedIdentsWhere {
                                                                        attrs: [],
                                                                        typed_idents_where: TypedIdentsWhere {
                                                                            typed_idents: TypedIdents {
                                                                                idents: [
                                                                                    "k",
                                                                                ],
                                                                                type_: Atom(
                                                                                    Int,
                                                                                ),
                                                                            },
                                                                            where_: None,
                                                                        },
                                                                    },
                                                                ],
                                                                attrs: [],
                                                                expr: Implies(
                                                                    ImpliesExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "InOrder",
                                                                                args: [
                                                                                    Var(
                                                                                        "i",
                                                                                    ),
                                                                                    Var(
                                                                                        "k",
                                                                                    ),
                                                                                    Var(
                                                                                        "vlen",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        rhs: Rel(
                                                                            RelExpr {
                                                                                lhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "Vec_Nth",
                                                                                        args: [
                                                                                            Var(
                                                                                                "B",
                                                                                            ),
                                                                                            Term(
                                                                                                Term {
                                                                                                    lhs: Var(
                                                                                                        "i",
                                                                                                    ),
                                                                                                    op: Sub,
                                                                                                    rhs: Nat(
                                                                                                        "1",
                                                                                                    ),
                                                                                                },
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                                op: Le,
                                                                                rhs: FuncCall(
                                                                                    FuncCall {
                                                                                        target: "Vec_Nth",
                                                                                        args: [
                                                                                            Var(
                                                                                                "B",
                                                                                            ),
                                                                                            Var(
                                                                                                "k",
                                                                                            ),
                                                                                        ],
                                                                                    },
                                                                                ),
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        },
                                                    ),
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: Quant(
                                                QuantExpr {
                                                    kind: ForAll,
                                                    body: QuantBody {
                                                        type_params: [],
                                                        bound_vars: [
                                                            AttrTypedIdentsWhere {
                                                                attrs: [],
                                                                typed_idents_where: TypedIdentsWhere {
                                                                    typed_idents: TypedIdents {
                                                                        idents: [
                                                                            "k",
                                                                        ],
                                                                        type_: Atom(
                                                                            Int,
                                                                        ),
                                                                    },
                                                                    where_: None,
                                                                },
                                                            },
                                                        ],
                                                        attrs: [],
                                                        expr: Implies(
                                                            ImpliesExpr {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "InOrder",
                                                                        args: [
                                                                            Var(
                                                                                "i",
                                                                            ),
                                                                            Var(
                                                                                "k",
                                                                            ),
                                                                            Var(
                                                                                "j",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                rhs: Rel(
                                                                    RelExpr {
                                                                        lhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                    Var(
                                                                                        "i",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                        op: Le,
                                                                        rhs: FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Nth",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                    Var(
                                                                                        "k",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    },
                                                },
                                            ),
                                            is_free: false,
                                        },
                                        Invariant {
                                            attrs: [],
                                            expr: FuncCall(
                                                FuncCall {
                                                    target: "Permutation",
                                                    args: [
                                                        Var(
                                                            "A",
                                                        ),
                                                        Var(
                                                            "B",
                                                        ),
                                                    ],
                                                },
                                            ),
                                            is_free: false,
                                        },
                                    ],
                                    body: [
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Expr(
                                                        Rel(
                                                            RelExpr {
                                                                lhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Nth",
                                                                        args: [
                                                                            Var(
                                                                                "B",
                                                                            ),
                                                                            Var(
                                                                                "i",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                                op: Gt,
                                                                rhs: FuncCall(
                                                                    FuncCall {
                                                                        target: "Vec_Nth",
                                                                        args: [
                                                                            Var(
                                                                                "B",
                                                                            ),
                                                                            Var(
                                                                                "j",
                                                                            ),
                                                                        ],
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    then: [
                                                        LabelOrCmd(
                                                            Assign(
                                                                AssignCmd {
                                                                    lhs: [
                                                                        AssignLhs {
                                                                            ident: "B",
                                                                            subscripts: [],
                                                                        },
                                                                    ],
                                                                    rhs: [
                                                                        FuncCall(
                                                                            FuncCall {
                                                                                target: "Vec_Swap",
                                                                                args: [
                                                                                    Var(
                                                                                        "B",
                                                                                    ),
                                                                                    Var(
                                                                                        "i",
                                                                                    ),
                                                                                    Var(
                                                                                        "j",
                                                                                    ),
                                                                                ],
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    else_: None,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "add_to_pool",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "A",
                                                                        },
                                                                    ),
                                                                    Expr(
                                                                        Var(
                                                                            "i",
                                                                        ),
                                                                    ),
                                                                    Expr(
                                                                        Var(
                                                                            "j",
                                                                        ),
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: BoolLit(
                                                        true,
                                                    ),
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Claim(
                                                ClaimCmd {
                                                    kind: Assume,
                                                    attrs: [
                                                        Attr(
                                                            AttrContent {
                                                                ident: "add_to_pool",
                                                                params: [
                                                                    String(
                                                                        StringLit {
                                                                            text: "B",
                                                                        },
                                                                    ),
                                                                    Expr(
                                                                        Var(
                                                                            "i",
                                                                        ),
                                                                    ),
                                                                    Expr(
                                                                        Var(
                                                                            "j",
                                                                        ),
                                                                    ),
                                                                ],
                                                            },
                                                        ),
                                                    ],
                                                    proposition: BoolLit(
                                                        true,
                                                    ),
                                                },
                                            ),
                                        ),
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Expr(
                                                        Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "j",
                                                                ),
                                                                op: Lt,
                                                                rhs: Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "vlen",
                                                                        ),
                                                                        op: Sub,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    then: [
                                                        LabelOrCmd(
                                                            Assign(
                                                                AssignCmd {
                                                                    lhs: [
                                                                        AssignLhs {
                                                                            ident: "j",
                                                                            subscripts: [],
                                                                        },
                                                                    ],
                                                                    rhs: [
                                                                        Term(
                                                                            Term {
                                                                                lhs: Var(
                                                                                    "j",
                                                                                ),
                                                                                op: Add,
                                                                                rhs: Nat(
                                                                                    "1",
                                                                                ),
                                                                            },
                                                                        ),
                                                                    ],
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    else_: Some(
                                                        Else(
                                                            [
                                                                LabelOrCmd(
                                                                    Assign(
                                                                        AssignCmd {
                                                                            lhs: [
                                                                                AssignLhs {
                                                                                    ident: "i",
                                                                                    subscripts: [],
                                                                                },
                                                                            ],
                                                                            rhs: [
                                                                                Term(
                                                                                    Term {
                                                                                        lhs: Var(
                                                                                            "i",
                                                                                        ),
                                                                                        op: Add,
                                                                                        rhs: Nat(
                                                                                            "1",
                                                                                        ),
                                                                                    },
                                                                                ),
                                                                            ],
                                                                        },
                                                                    ),
                                                                ),
                                                            ],
                                                        ),
                                                    ),
                                                },
                                            ),
                                        ),
                                        StructuredCmd(
                                            If(
                                                IfCmd {
                                                    guard: Expr(
                                                        Rel(
                                                            RelExpr {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Eq,
                                                                rhs: Term(
                                                                    Term {
                                                                        lhs: Var(
                                                                            "vlen",
                                                                        ),
                                                                        op: Sub,
                                                                        rhs: Nat(
                                                                            "1",
                                                                        ),
                                                                    },
                                                                ),
                                                            },
                                                        ),
                                                    ),
                                                    then: [
                                                        StructuredCmd(
                                                            Break(
                                                                BreakCmd {
                                                                    label: None,
                                                                },
                                                            ),
                                                        ),
                                                    ],
                                                    else_: None,
                                                },
                                            ),
                                        ),
                                        LabelOrCmd(
                                            Assign(
                                                AssignCmd {
                                                    lhs: [
                                                        AssignLhs {
                                                            ident: "j",
                                                            subscripts: [],
                                                        },
                                                    ],
                                                    rhs: [
                                                        Term(
                                                            Term {
                                                                lhs: Var(
                                                                    "i",
                                                                ),
                                                                op: Add,
                                                                rhs: Nat(
                                                                    "1",
                                                                ),
                                                            },
                                                        ),
                                                    ],
                                                },
                                            ),
                                        ),
                                    ],
                                },
                            ),
                        ),
                    ],
                },
            ),
        },
    ),
]

[Printed]
function {:inline} InOrder(x: int, y: int, z: int): bool {
  x <= y && y < z
}

function {:inline} Permutation<E>(A: Vec E, B: Vec E): bool {
  Vec_Len(A) == Vec_Len(B) && (forall {:pool "A"} k: int :: {:skolem_add_to_pool "A", k} InOrder(0, k, Vec_Len(A)) ==> (exists {:pool "B"} k': int :: {:skolem_add_to_pool "B", k'} InOrder(0, k', Vec_Len(B)) ==> Vec_Nth(A, k) == Vec_Nth(B, k')))
}

procedure verify_sort(A: Vec int) returns (B: Vec int)
  ensures (forall k: int :: InOrder(0, k, Vec_Len(B) - 1) ==> Vec_Nth(B, k) <= Vec_Nth(B, k + 1));
  ensures Permutation(A, B);
{
  var i, j, vlen: int;

  B := A;
  vlen := Vec_Len(B);
  if (vlen <= 1) {
    return;
  }
  i := 0;
  j := 1;
  while (true)
    invariant vlen == Vec_Len(B);
    invariant i < j && j < vlen;
    invariant (forall k: int :: InOrder(0, k, i) ==> Vec_Nth(B, k) <= Vec_Nth(B, k + 1));
    invariant i > 0 ==> (forall k: int :: InOrder(i, k, vlen) ==> Vec_Nth(B, i - 1) <= Vec_Nth(B, k));
    invariant (forall k: int :: InOrder(i, k, j) ==> Vec_Nth(B, i) <= Vec_Nth(B, k));
    invariant Permutation(A, B);
  {
    if (Vec_Nth(B, i) > Vec_Nth(B, j)) {
      B := Vec_Swap(B, i, j);
    }
    assume {:add_to_pool "A", i, j} true;
    assume {:add_to_pool "B", i, j} true;
    if (j < vlen - 1) {
      j := j + 1;
    } else {
      i := i + 1;
    }
    if (i == vlen - 1) {
      break;
    }
    j := i + 1;
  }
}

[Input - ../../vendor/boogie/Test/inst/ying_sort.bpl]
// RUN: %boogie -lib "%s" > "%t"
// RUN: %diff "%s.expect" "%t"

function {:inline} InOrder(x: int, y: int, z: int): bool {
    x <= y && y < z
}

function {:inline} Permutation<E>(A: Vec E, B: Vec E): bool {
    Vec_Len(A) == Vec_Len(B) &&
    (forall {:pool "A"} k: int :: {:skolem_add_to_pool "A", k} InOrder(0, k, Vec_Len(A)) ==>
            (exists {:pool "B"} k': int :: {:skolem_add_to_pool "B", k'} InOrder(0, k', Vec_Len(B)) ==> Vec_Nth(A, k) == Vec_Nth(B, k')))
}

procedure verify_sort(A: Vec int) returns (B: Vec int)
ensures (forall k: int :: InOrder(0, k, Vec_Len(B) - 1) ==> Vec_Nth(B, k) <= Vec_Nth(B, k + 1));
ensures Permutation(A, B);
{
    var i, j, vlen: int;

    B := A;
	vlen := Vec_Len(B);
    if (vlen <= 1) {
        return;
    }

	i := 0;
	j := 1;
    while (true)
	invariant vlen == Vec_Len(B);
    invariant i < j && j < vlen;
	invariant (forall k: int :: InOrder(0, k, i) ==> Vec_Nth(B, k) <= Vec_Nth(B, k + 1));
    invariant i > 0 ==> (forall k: int :: InOrder(i, k, vlen) ==> Vec_Nth(B, i - 1) <= Vec_Nth(B, k));
    invariant (forall k: int :: InOrder(i, k, j) ==> Vec_Nth(B, i) <= Vec_Nth(B, k));
    invariant Permutation(A, B);
	{
		if (Vec_Nth(B, i) > Vec_Nth(B, j)) {
			B := Vec_Swap(B, i, j);
		}
        assume {:add_to_pool "A", i, j} true;
        assume {:add_to_pool "B", i, j} true;
        if (j < vlen - 1 ) {
			j := j + 1;
		} else {
			i := i + 1;
		}
        if (i == vlen - 1) {
            break;
        }
        j := i + 1;
	}
}
